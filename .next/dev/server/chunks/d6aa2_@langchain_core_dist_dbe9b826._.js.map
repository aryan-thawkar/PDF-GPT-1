{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/dist/_virtual/rolldown_runtime.js"],"sourcesContent":["//#region rolldown:runtime\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n\tfor (var name in all) __defProp(target, name, {\n\t\tget: all[name],\n\t\tenumerable: true\n\t});\n};\n\n//#endregion\nexport { __export };"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,WAAW,CAAC,QAAQ;IACvB,IAAK,IAAI,QAAQ,IAAK,UAAU,QAAQ,MAAM;QAC7C,KAAK,GAAG,CAAC,KAAK;QACd,YAAY;IACb;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/documents/document.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/documents/document.ts"],"sourcesContent":["export interface DocumentInput<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Metadata extends Record<string, any> = Record<string, any>\n> {\n  pageContent: string;\n\n  metadata?: Metadata;\n\n  /**\n   * An optional identifier for the document.\n   *\n   * Ideally this should be unique across the document collection and formatted\n   * as a UUID, but this will not be enforced.\n   */\n  id?: string;\n}\n\nexport interface DocumentInterface<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Metadata extends Record<string, any> = Record<string, any>\n> {\n  pageContent: string;\n\n  metadata: Metadata;\n\n  /**\n   * An optional identifier for the document.\n   *\n   * Ideally this should be unique across the document collection and formatted\n   * as a UUID, but this will not be enforced.\n   */\n  id?: string;\n}\n\n/**\n * Interface for interacting with a document.\n */\nexport class Document<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Metadata extends Record<string, any> = Record<string, any>\n> implements DocumentInput, DocumentInterface\n{\n  pageContent: string;\n\n  metadata: Metadata;\n\n  // The ID field is optional at the moment.\n  // It will likely become required in a future major release after\n  // it has been adopted by enough vectorstore implementations.\n  /**\n   * An optional identifier for the document.\n   *\n   * Ideally this should be unique across the document collection and formatted\n   * as a UUID, but this will not be enforced.\n   */\n  id?: string;\n\n  constructor(fields: DocumentInput<Metadata>) {\n    this.pageContent =\n      fields.pageContent !== undefined ? fields.pageContent.toString() : \"\";\n    this.metadata = fields.metadata ?? ({} as Metadata);\n    this.id = fields.id;\n  }\n}\n"],"names":["fields: DocumentInput<Metadata>"],"mappings":";;;;;;;AAqCA,IAAa,WAAb,MAIA;IACE,YAAA;IAEA,SAAA;;;;;;IAWA,GAAA;IAEA,YAAYA,MAAAA,CAAiC;QAC3C,IAAA,CAAK,WAAA,GACH,OAAO,WAAA,KAAgB,KAAA,IAAY,OAAO,WAAA,CAAY,QAAA,EAAU,GAAG;QACrE,IAAA,CAAK,QAAA,GAAW,OAAO,QAAA,IAAa,CAAE;QACtC,IAAA,CAAK,EAAA,GAAK,OAAO,EAAA;IAClB;AACF","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/load/map_keys.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/load/map_keys.ts"],"sourcesContent":["import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\n\nexport interface SerializedFields {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\nexport interface SerializedKeyAlias {\n  [key: string]: string;\n}\n\nexport function keyToJson(key: string, map?: SerializedKeyAlias): string {\n  return map?.[key] || snakeCase(key);\n}\n\nexport function keyFromJson(key: string, map?: SerializedKeyAlias): string {\n  return map?.[key] || camelCase(key);\n}\n\nexport function mapKeys(\n  fields: SerializedFields,\n  mapper: typeof keyToJson,\n  map?: SerializedKeyAlias\n): SerializedFields {\n  const mapped: SerializedFields = {};\n\n  for (const key in fields) {\n    if (Object.hasOwn(fields, key)) {\n      mapped[mapper(key, map)] = fields[key];\n    }\n  }\n\n  return mapped;\n}\n"],"names":["key: string","map?: SerializedKeyAlias","fields: SerializedFields","mapper: typeof keyToJson","mapped: SerializedFields"],"mappings":";;;;;;;;;;;;;AAYA,SAAgB,UAAUA,GAAAA,EAAaC,GAAAA,EAAkC;IACvE,OAAO,KAAA,CAAM,IAAA,QAAQ,uMAAA,EAAU,IAAI;AACpC;AAED,SAAgB,YAAYD,GAAAA,EAAaC,GAAAA,EAAkC;IACzE,OAAO,KAAA,CAAM,IAAA,QAAQ,qMAAA,EAAU,IAAI;AACpC;AAED,SAAgB,QACdC,MAAAA,EACAC,MAAAA,EACAF,GAAAA,EACkB;IAClB,MAAMG,SAA2B,CAAE;IAEnC,IAAK,MAAM,OAAO,OAChB,IAAI,OAAO,MAAA,CAAO,QAAQ,IAAI,EAC5B,MAAA,CAAO,OAAO,KAAK,IAAI,CAAA,GAAI,MAAA,CAAO,IAAA;IAItC,OAAO;AACR","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/load/serializable.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/load/serializable.ts"],"sourcesContent":["import { type SerializedFields, keyToJson, mapKeys } from \"./map_keys.js\";\n\nexport interface BaseSerialized<T extends string> {\n  lc: number;\n  type: T;\n  id: string[];\n  name?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  graph?: Record<string, any>;\n}\n\nexport interface SerializedConstructor extends BaseSerialized<\"constructor\"> {\n  kwargs: SerializedFields;\n}\n\nexport interface SerializedSecret extends BaseSerialized<\"secret\"> {}\n\nexport interface SerializedNotImplemented\n  extends BaseSerialized<\"not_implemented\"> {}\n\nexport type Serialized =\n  | SerializedConstructor\n  | SerializedSecret\n  | SerializedNotImplemented;\n\nfunction shallowCopy<T extends object>(obj: T): T {\n  return Array.isArray(obj) ? ([...obj] as T) : ({ ...obj } as T);\n}\n\nfunction replaceSecrets(\n  root: SerializedFields,\n  secretsMap: { [key: string]: string }\n): SerializedFields {\n  const result = shallowCopy(root);\n  for (const [path, secretId] of Object.entries(secretsMap)) {\n    const [last, ...partsReverse] = path.split(\".\").reverse();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let current: any = result;\n    for (const part of partsReverse.reverse()) {\n      if (current[part] === undefined) {\n        break;\n      }\n      current[part] = shallowCopy(current[part]);\n      current = current[part];\n    }\n    if (current[last] !== undefined) {\n      current[last] = {\n        lc: 1,\n        type: \"secret\",\n        id: [secretId],\n      };\n    }\n  }\n  return result;\n}\n\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n  serializableClass: typeof Serializable\n): string {\n  // \"super\" here would refer to the parent class of Serializable,\n  // when we want the parent class of the module actually calling this method.\n  const parentClass = Object.getPrototypeOf(serializableClass);\n  const lcNameIsSubclassed =\n    typeof serializableClass.lc_name === \"function\" &&\n    (typeof parentClass.lc_name !== \"function\" ||\n      serializableClass.lc_name() !== parentClass.lc_name());\n  if (lcNameIsSubclassed) {\n    return serializableClass.lc_name();\n  } else {\n    return serializableClass.name;\n  }\n}\n\nexport interface SerializableInterface {\n  get lc_id(): string[];\n}\n\nexport abstract class Serializable implements SerializableInterface {\n  lc_serializable = false;\n\n  lc_kwargs: SerializedFields;\n\n  /**\n   * A path to the module that contains the class, eg. [\"langchain\", \"llms\"]\n   * Usually should be the same as the entrypoint the class is exported from.\n   */\n  abstract lc_namespace: string[];\n\n  /**\n   * The name of the serializable. Override to provide an alias or\n   * to preserve the serialized module name in minified environments.\n   *\n   * Implemented as a static method to support loading logic.\n   */\n  static lc_name(): string {\n    return this.name;\n  }\n\n  /**\n   * The final serialized identifier for the module.\n   */\n  get lc_id(): string[] {\n    return [\n      ...this.lc_namespace,\n      get_lc_unique_name(this.constructor as typeof Serializable),\n    ];\n  }\n\n  /**\n   * A map of secrets, which will be omitted from serialization.\n   * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n   * Values are the secret ids, which will be used when deserializing.\n   */\n  get lc_secrets(): { [key: string]: string } | undefined {\n    return undefined;\n  }\n\n  /**\n   * A map of additional attributes to merge with constructor args.\n   * Keys are the attribute names, e.g. \"foo\".\n   * Values are the attribute values, which will be serialized.\n   * These attributes need to be accepted by the constructor as arguments.\n   */\n  get lc_attributes(): SerializedFields | undefined {\n    return undefined;\n  }\n\n  /**\n   * A map of aliases for constructor args.\n   * Keys are the attribute names, e.g. \"foo\".\n   * Values are the alias that will replace the key in serialization.\n   * This is used to eg. make argument names match Python.\n   */\n  get lc_aliases(): { [key: string]: string } | undefined {\n    return undefined;\n  }\n\n  /**\n   * A manual list of keys that should be serialized.\n   * If not overridden, all fields passed into the constructor will be serialized.\n   */\n  get lc_serializable_keys(): string[] | undefined {\n    return undefined;\n  }\n\n  constructor(kwargs?: SerializedFields, ..._args: never[]) {\n    if (this.lc_serializable_keys !== undefined) {\n      this.lc_kwargs = Object.fromEntries(\n        Object.entries(kwargs || {}).filter(([key]) =>\n          this.lc_serializable_keys?.includes(key)\n        )\n      );\n    } else {\n      this.lc_kwargs = kwargs ?? {};\n    }\n  }\n\n  toJSON(): Serialized {\n    if (!this.lc_serializable) {\n      return this.toJSONNotImplemented();\n    }\n    if (\n      // eslint-disable-next-line no-instanceof/no-instanceof\n      this.lc_kwargs instanceof Serializable ||\n      typeof this.lc_kwargs !== \"object\" ||\n      Array.isArray(this.lc_kwargs)\n    ) {\n      // We do not support serialization of classes with arg not a POJO\n      // I'm aware the check above isn't as strict as it could be\n      return this.toJSONNotImplemented();\n    }\n\n    const aliases: { [key: string]: string } = {};\n    const secrets: { [key: string]: string } = {};\n    const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n      acc[key] = key in this ? this[key as keyof this] : this.lc_kwargs[key];\n      return acc;\n    }, {} as SerializedFields);\n    // get secrets, attributes and aliases from all superclasses\n    for (\n      let current = Object.getPrototypeOf(this);\n      current;\n      current = Object.getPrototypeOf(current)\n    ) {\n      Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n      Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n      Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n    }\n\n    // include all secrets used, even if not in kwargs,\n    // will be replaced with sentinel value in replaceSecrets\n    Object.keys(secrets).forEach((keyPath) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      let read: any = this;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      let write: any = kwargs;\n\n      const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n      for (const key of partsReverse.reverse()) {\n        if (!(key in read) || read[key] === undefined) return;\n        if (!(key in write) || write[key] === undefined) {\n          if (typeof read[key] === \"object\" && read[key] != null) {\n            write[key] = {};\n          } else if (Array.isArray(read[key])) {\n            write[key] = [];\n          }\n        }\n\n        read = read[key];\n        write = write[key];\n      }\n\n      if (last in read && read[last] !== undefined) {\n        write[last] = write[last] || read[last];\n      }\n    });\n\n    return {\n      lc: 1,\n      type: \"constructor\",\n      id: this.lc_id,\n      kwargs: mapKeys(\n        Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs,\n        keyToJson,\n        aliases\n      ),\n    };\n  }\n\n  toJSONNotImplemented(): SerializedNotImplemented {\n    return {\n      lc: 1,\n      type: \"not_implemented\",\n      id: this.lc_id,\n    };\n  }\n}\n"],"names":["obj: T","root: SerializedFields","secretsMap: { [key: string]: string }","current: any","serializableClass: typeof Serializable","kwargs?: SerializedFields","aliases: { [key: string]: string }","secrets: { [key: string]: string }","read: any","write: any"],"mappings":"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","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tools/utils.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tools/utils.ts"],"sourcesContent":["import { ToolCall } from \"../messages/tool.js\";\n\nexport function _isToolCall(toolCall?: unknown): toolCall is ToolCall {\n  return !!(\n    toolCall &&\n    typeof toolCall === \"object\" &&\n    \"type\" in toolCall &&\n    toolCall.type === \"tool_call\"\n  );\n}\n\nexport function _configHasToolCallId(\n  config?: unknown\n): config is { toolCall: { id?: string } } {\n  return !!(\n    config &&\n    typeof config === \"object\" &&\n    \"toolCall\" in config &&\n    config.toolCall != null &&\n    typeof config.toolCall === \"object\" &&\n    \"id\" in config.toolCall &&\n    typeof config.toolCall.id === \"string\"\n  );\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n  output?: string;\n\n  constructor(message: string, output?: string) {\n    super(message);\n    this.output = output;\n  }\n}\n"],"names":["toolCall?: unknown","config?: unknown","message: string","output?: string"],"mappings":";;;;;;;;;AAEA,SAAgB,YAAYA,QAAAA,EAA0C;IACpE,OAAO,CAAC,CAAA,CACN,YACA,OAAO,aAAa,YACpB,UAAU,YACV,SAAS,IAAA,KAAS,WAAA;AAErB;AAED,SAAgB,qBACdC,MAAAA,EACyC;IACzC,OAAO,CAAC,CAAA,CACN,UACA,OAAO,WAAW,YAClB,cAAc,UACd,OAAO,QAAA,IAAY,QACnB,OAAO,OAAO,QAAA,KAAa,YAC3B,QAAQ,OAAO,QAAA,IACf,OAAO,OAAO,QAAA,CAAS,EAAA,KAAO,QAAA;AAEjC;;;;;GAMD,IAAa,4BAAb,cAA+C,MAAM;IACnD,OAAA;IAEA,YAAYC,OAAAA,EAAiBC,MAAAA,CAAiB;QAC5C,KAAA,CAAM,QAAQ;QACd,IAAA,CAAK,MAAA,GAAS;IACf;AACF","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/async_local_storage/globals.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/async_local_storage/globals.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AsyncLocalStorageInterface {\n  getStore: () => any | undefined;\n\n  run: <T>(store: any, callback: () => T) => T;\n\n  enterWith: (store: any) => void;\n}\n\nexport const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\n\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n\nexport const setGlobalAsyncLocalStorageInstance = (\n  instance: AsyncLocalStorageInterface\n) => {\n  (globalThis as any)[TRACING_ALS_KEY] = instance;\n};\n\nexport const getGlobalAsyncLocalStorageInstance = ():\n  | AsyncLocalStorageInterface\n  | undefined => {\n  return (globalThis as any)[TRACING_ALS_KEY];\n};\n"],"names":["instance: AsyncLocalStorageInterface"],"mappings":";;;;;;;;;AASA,MAAa,kBAAkB,OAAO,GAAA,CAAI,iCAAiC;AAE3E,MAAa,yBAAyB,OAAO,GAAA,CAAI,uBAAuB;AAExE,MAAa,qCAAqC,CAChDA,aACG;IACF,UAAA,CAAmB,gBAAA,GAAmB;AACxC;AAED,MAAa,qCAAqC,MAEjC;IACf,OAAQ,UAAA,CAAmB,gBAAA;AAC5B","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/content/data.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/content/data.ts"],"sourcesContent":["import { BaseContentBlock } from \"./base.js\";\n\n/**\n * @deprecated\n * Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport type ImageDetail = \"auto\" | \"low\" | \"high\";\n\n/**\n * @deprecated\n * Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport type MessageContentText = {\n  type: \"text\";\n  text: string;\n};\n\n/**\n * @deprecated\n * Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport type MessageContentImageUrl = {\n  type: \"image_url\";\n  image_url: string | { url: string; detail?: ImageDetail };\n};\n\n/**\n * @deprecated\n * Use {@link ContentBlock} instead.\n */\nexport type MessageContentComplex =\n  | MessageContentText\n  | MessageContentImageUrl\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | (Record<string, any> & { type?: \"text\" | \"image_url\" | string })\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | (Record<string, any> & { type?: never });\n\nexport type Data = never;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport declare namespace Data {\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export interface BaseDataContentBlock extends BaseContentBlock {\n    mime_type?: string;\n    metadata?: Record<string, unknown>;\n  }\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export interface URLContentBlock extends BaseDataContentBlock {\n    type: \"image\" | \"audio\" | \"file\";\n    source_type: \"url\";\n    url: string;\n  }\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export interface Base64ContentBlock extends BaseDataContentBlock {\n    type: \"image\" | \"audio\" | \"file\";\n    source_type: \"base64\";\n    data: string;\n  }\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export interface PlainTextContentBlock extends BaseDataContentBlock {\n    type: \"file\" | \"text\";\n    source_type: \"text\";\n    text: string;\n  }\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export interface IDContentBlock extends BaseDataContentBlock {\n    type: \"image\" | \"audio\" | \"file\";\n    source_type: \"id\";\n    id: string;\n  }\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Standard} instead\n   */\n  export type DataContentBlock =\n    | URLContentBlock\n    | Base64ContentBlock\n    | PlainTextContentBlock\n    | IDContentBlock;\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Standard} instead\n   */\n  export type StandardImageBlock = (\n    | URLContentBlock\n    | Base64ContentBlock\n    | IDContentBlock\n  ) & {\n    type: \"image\";\n  };\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Standard} instead\n   */\n  export type StandardAudioBlock = (\n    | URLContentBlock\n    | Base64ContentBlock\n    | IDContentBlock\n  ) & {\n    type: \"audio\";\n  };\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Standard} instead\n   */\n  export type StandardFileBlock = (\n    | URLContentBlock\n    | Base64ContentBlock\n    | IDContentBlock\n    | PlainTextContentBlock\n  ) & {\n    type: \"file\";\n  };\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Standard} instead\n   */\n  export type StandardTextBlock = PlainTextContentBlock & {\n    type: \"text\";\n  };\n\n  /**\n   * @deprecated\n   * Use {@link ContentBlock.Multimodal.Data} instead\n   */\n  export type DataContentBlockType = DataContentBlock[\"type\"];\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function isDataContentBlock(\n  content_block: object\n): content_block is Data.DataContentBlock {\n  return (\n    typeof content_block === \"object\" &&\n    content_block !== null &&\n    \"type\" in content_block &&\n    typeof content_block.type === \"string\" &&\n    \"source_type\" in content_block &&\n    (content_block.source_type === \"url\" ||\n      content_block.source_type === \"base64\" ||\n      content_block.source_type === \"text\" ||\n      content_block.source_type === \"id\")\n  );\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function isURLContentBlock(\n  content_block: object\n): content_block is Data.URLContentBlock {\n  return (\n    isDataContentBlock(content_block) &&\n    content_block.source_type === \"url\" &&\n    \"url\" in content_block &&\n    typeof content_block.url === \"string\"\n  );\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function isBase64ContentBlock(\n  content_block: object\n): content_block is Data.Base64ContentBlock {\n  return (\n    isDataContentBlock(content_block) &&\n    content_block.source_type === \"base64\" &&\n    \"data\" in content_block &&\n    typeof content_block.data === \"string\"\n  );\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function isPlainTextContentBlock(\n  content_block: object\n): content_block is Data.PlainTextContentBlock {\n  return (\n    isDataContentBlock(content_block) &&\n    content_block.source_type === \"text\" &&\n    \"text\" in content_block &&\n    typeof content_block.text === \"string\"\n  );\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function isIDContentBlock(\n  content_block: object\n): content_block is Data.IDContentBlock {\n  return (\n    isDataContentBlock(content_block) &&\n    content_block.source_type === \"id\" &&\n    \"id\" in content_block &&\n    typeof content_block.id === \"string\"\n  );\n}\n\n/**\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function convertToOpenAIImageBlock(\n  content_block: Data.URLContentBlock | Data.Base64ContentBlock\n) {\n  if (isDataContentBlock(content_block)) {\n    if (content_block.source_type === \"url\") {\n      return {\n        type: \"image_url\",\n        image_url: {\n          url: content_block.url,\n        },\n      };\n    }\n    if (content_block.source_type === \"base64\") {\n      if (!content_block.mime_type) {\n        throw new Error(\"mime_type key is required for base64 data.\");\n      }\n      const mime_type = content_block.mime_type;\n      return {\n        type: \"image_url\",\n        image_url: {\n          url: `data:${mime_type};base64,${content_block.data}`,\n        },\n      };\n    }\n  }\n  throw new Error(\n    \"Unsupported source type. Only 'url' and 'base64' are supported.\"\n  );\n}\n\n/**\n * Utility function for ChatModelProviders. Parses a mime type into a type, subtype, and parameters.\n *\n * @param mime_type - The mime type to parse.\n * @returns An object containing the type, subtype, and parameters.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function parseMimeType(mime_type: string): {\n  type: string;\n  subtype: string;\n  parameters: Record<string, string>;\n} {\n  const parts = mime_type.split(\";\")[0].split(\"/\");\n  if (parts.length !== 2) {\n    throw new Error(\n      `Invalid mime type: \"${mime_type}\" - does not match type/subtype format.`\n    );\n  }\n\n  const type = parts[0].trim();\n  const subtype = parts[1].trim();\n\n  if (type === \"\" || subtype === \"\") {\n    throw new Error(\n      `Invalid mime type: \"${mime_type}\" - type or subtype is empty.`\n    );\n  }\n\n  const parameters: Record<string, string> = {};\n\n  for (const parameterKvp of mime_type.split(\";\").slice(1)) {\n    const parameterParts = parameterKvp.split(\"=\");\n    if (parameterParts.length !== 2) {\n      throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n    }\n    const key = parameterParts[0].trim();\n    const value = parameterParts[1].trim();\n    if (key === \"\") {\n      throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n    }\n\n    parameters[key] = value;\n  }\n\n  return {\n    type,\n    subtype,\n    parameters,\n  };\n}\n\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns An object containing the parsed data and mime type, or undefined if the data URL is invalid.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function parseBase64DataUrl({\n  dataUrl,\n  asTypedArray,\n}: {\n  dataUrl: string;\n  asTypedArray: true;\n}): { data: Uint8Array; mime_type: string } | undefined;\n\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns The parsed data and mime type, or undefined if the data URL is invalid.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function parseBase64DataUrl({\n  dataUrl,\n  asTypedArray,\n}: {\n  dataUrl: string;\n  asTypedArray?: false;\n}): { data: string; mime_type: string } | undefined;\n\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns The parsed data and mime type, or undefined if the data URL is invalid.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function parseBase64DataUrl({\n  dataUrl: data_url,\n  asTypedArray = false,\n}: {\n  dataUrl: string;\n  asTypedArray?: boolean;\n}): { data: string | Uint8Array; mime_type: string } | undefined {\n  const formatMatch = data_url.match(\n    /^data:(\\w+\\/\\w+);base64,([A-Za-z0-9+/]+=*)$/\n  );\n  let mime_type: string | undefined;\n\n  if (formatMatch) {\n    mime_type = formatMatch[1].toLowerCase();\n    const data = asTypedArray\n      ? Uint8Array.from(atob(formatMatch[2]), (c) => c.charCodeAt(0))\n      : formatMatch[2];\n    return {\n      mime_type,\n      data,\n    };\n  }\n\n  return undefined;\n}\n\n/**\n * A bag of provider-specific content block types.\n *\n * Allows implementations of {@link StandardContentBlockConverter} and related to be defined only in\n * terms of the types they support. Also allows for forward compatibility as the set of known\n * standard types grows, as the set of types can be extended without breaking existing\n * implementations of the aforementioned interfaces.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport type ProviderFormatTypes<\n  TextFormat = unknown,\n  ImageFormat = unknown,\n  AudioFormat = unknown,\n  FileFormat = unknown,\n  VideoFormat = unknown\n> = {\n  text: TextFormat;\n  image: ImageFormat;\n  audio: AudioFormat;\n  file: FileFormat;\n  video: VideoFormat;\n};\n\n/**\n * Utility interface for converting between standard and provider-specific data content blocks, to be\n * used when implementing chat model providers.\n *\n * Meant to be used with {@link convertToProviderContentBlock} and\n * {@link convertToStandardContentBlock} rather than being consumed directly.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport interface StandardContentBlockConverter<\n  Formats extends Partial<ProviderFormatTypes>\n> {\n  /**\n   * The name of the provider type that corresponds to the provider-specific content block types\n   * that this converter supports.\n   */\n  providerName: string;\n\n  /**\n   * Convert from a standard image block to a provider's proprietary image block format.\n   * @param block - The standard image block to convert.\n   * @returns The provider image block.\n   */\n  fromStandardImageBlock?(block: Data.StandardImageBlock): Formats[\"image\"];\n\n  /**\n   * Convert from a standard audio block to a provider's proprietary audio block format.\n   * @param block - The standard audio block to convert.\n   * @returns The provider audio block.\n   */\n  fromStandardAudioBlock?(block: Data.StandardAudioBlock): Formats[\"audio\"];\n\n  /**\n   * Convert from a standard file block to a provider's proprietary file block format.\n   * @param block - The standard file block to convert.\n   * @returns The provider file block.\n   */\n  fromStandardFileBlock?(block: Data.StandardFileBlock): Formats[\"file\"];\n\n  /**\n   * Convert from a standard text block to a provider's proprietary text block format.\n   * @param block - The standard text block to convert.\n   * @returns The provider text block.\n   */\n  fromStandardTextBlock?(block: Data.StandardTextBlock): Formats[\"text\"];\n}\n\n/**\n * Convert from a standard data content block to a provider's proprietary data content block format.\n *\n * Don't override this method. Instead, override the more specific conversion methods and use this\n * method unmodified.\n *\n * @param block - The standard data content block to convert.\n * @returns The provider data content block.\n * @throws An error if the standard data content block type is not supported.\n *\n * @deprecated Don't use data content blocks. Use {@link ContentBlock.Multimodal.Data} instead.\n */\nexport function convertToProviderContentBlock<\n  Formats extends Partial<ProviderFormatTypes>\n>(\n  block: Data.DataContentBlock,\n  converter: StandardContentBlockConverter<Formats>\n): Formats[keyof Formats] {\n  if (block.type === \"text\") {\n    if (!converter.fromStandardTextBlock) {\n      throw new Error(\n        `Converter for ${converter.providerName} does not implement \\`fromStandardTextBlock\\` method.`\n      );\n    }\n    return converter.fromStandardTextBlock(block as Data.StandardTextBlock);\n  }\n  if (block.type === \"image\") {\n    if (!converter.fromStandardImageBlock) {\n      throw new Error(\n        `Converter for ${converter.providerName} does not implement \\`fromStandardImageBlock\\` method.`\n      );\n    }\n    return converter.fromStandardImageBlock(block as Data.StandardImageBlock);\n  }\n  if (block.type === \"audio\") {\n    if (!converter.fromStandardAudioBlock) {\n      throw new Error(\n        `Converter for ${converter.providerName} does not implement \\`fromStandardAudioBlock\\` method.`\n      );\n    }\n    return converter.fromStandardAudioBlock(block as Data.StandardAudioBlock);\n  }\n  if (block.type === \"file\") {\n    if (!converter.fromStandardFileBlock) {\n      throw new Error(\n        `Converter for ${converter.providerName} does not implement \\`fromStandardFileBlock\\` method.`\n      );\n    }\n    return converter.fromStandardFileBlock(block as Data.StandardFileBlock);\n  }\n  throw new Error(\n    `Unable to convert content block type '${block.type}' to provider-specific format: not recognized.`\n  );\n}\n"],"names":["content_block: object","content_block: Data.URLContentBlock | Data.Base64ContentBlock","mime_type: string","parameters: Record<string, string>","mime_type: string | undefined","block: Data.DataContentBlock","converter: StandardContentBlockConverter<Formats>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/utils.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/utils.ts"],"sourcesContent":["import type { ContentBlock } from \"../content/index.js\";\n\nexport function _isContentBlock<T extends string>(\n  block: unknown,\n  type: T\n): block is ContentBlock & { type: T } {\n  return _isObject(block) && block.type === type;\n}\n\nexport function _isObject(value: unknown): value is Record<string, unknown> {\n  return typeof value === \"object\" && value !== null;\n}\n\nexport function _isArray<T>(value: unknown): value is T[] {\n  return Array.isArray(value);\n}\n\nexport function _isString(value: unknown): value is string {\n  return typeof value === \"string\";\n}\n\nexport function _isNumber(value: unknown): value is number {\n  return typeof value === \"number\";\n}\n\nexport function _isBytesArray(value: unknown): value is Uint8Array {\n  // eslint-disable-next-line no-instanceof/no-instanceof\n  return value instanceof Uint8Array;\n}\n\nexport function safeParseJson<T = unknown>(value: string): T | undefined {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return undefined;\n  }\n}\n\nexport const iife = <T>(fn: () => T): T => fn();\n"],"names":["block: unknown","type: T","value: unknown","value: string","fn: () => T"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,SAAgB,gBACdA,KAAAA,EACAC,IAAAA,EACqC;IACrC,OAAO,UAAU,MAAM,IAAI,MAAM,IAAA,KAAS;AAC3C;AAED,SAAgB,UAAUC,KAAAA,EAAkD;IAC1E,OAAO,OAAO,UAAU,YAAY,UAAU;AAC/C;AAED,SAAgB,SAAYA,KAAAA,EAA8B;IACxD,OAAO,MAAM,OAAA,CAAQ,MAAM;AAC5B;AAED,SAAgB,UAAUA,KAAAA,EAAiC;IACzD,OAAO,OAAO,UAAU;AACzB;AAED,SAAgB,UAAUA,KAAAA,EAAiC;IACzD,OAAO,OAAO,UAAU;AACzB;AAED,SAAgB,cAAcA,KAAAA,EAAqC;IAEjE,OAAO,iBAAiB;AACzB;AAED,SAAgB,cAA2BC,KAAAA,EAA8B;IACvE,IAAI;QACF,OAAO,KAAK,KAAA,CAAM,MAAM;IACzB,EAAA,OAAO;QACN,OAAO,KAAA;IACR;AACF;AAED,MAAa,OAAO,CAAIC,KAAmB,IAAI","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/anthropic.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/anthropic.ts"],"sourcesContent":["import type { StandardContentBlockTranslator } from \"./index.js\";\nimport type { ContentBlock } from \"../content/index.js\";\nimport type { AIMessageChunk, AIMessage } from \"../ai.js\";\nimport type { BaseMessage, BaseMessageChunk } from \"../base.js\";\nimport {\n  _isArray,\n  _isContentBlock,\n  _isNumber,\n  _isObject,\n  _isString,\n  safeParseJson,\n  iife,\n} from \"./utils.js\";\n\nfunction convertAnthropicAnnotation(\n  citation: ContentBlock\n): ContentBlock.Citation | undefined {\n  if (\n    citation.type === \"char_location\" &&\n    _isString(citation.document_title) &&\n    _isNumber(citation.start_char_index) &&\n    _isNumber(citation.end_char_index) &&\n    _isString(citation.cited_text)\n  ) {\n    const {\n      document_title,\n      start_char_index,\n      end_char_index,\n      cited_text,\n      ...rest\n    } = citation;\n    return {\n      ...rest,\n      type: \"citation\",\n      source: \"char\",\n      title: document_title ?? undefined,\n      startIndex: start_char_index,\n      endIndex: end_char_index,\n      citedText: cited_text,\n    };\n  }\n  if (\n    citation.type === \"page_location\" &&\n    _isString(citation.document_title) &&\n    _isNumber(citation.start_page_number) &&\n    _isNumber(citation.end_page_number) &&\n    _isString(citation.cited_text)\n  ) {\n    const {\n      document_title,\n      start_page_number,\n      end_page_number,\n      cited_text,\n      ...rest\n    } = citation;\n    return {\n      ...rest,\n      type: \"citation\",\n      source: \"page\",\n      title: document_title ?? undefined,\n      startIndex: start_page_number,\n      endIndex: end_page_number,\n      citedText: cited_text,\n    };\n  }\n  if (\n    citation.type === \"content_block_location\" &&\n    _isString(citation.document_title) &&\n    _isNumber(citation.start_block_index) &&\n    _isNumber(citation.end_block_index) &&\n    _isString(citation.cited_text)\n  ) {\n    const {\n      document_title,\n      start_block_index,\n      end_block_index,\n      cited_text,\n      ...rest\n    } = citation;\n    return {\n      ...rest,\n      type: \"citation\",\n      source: \"block\",\n      title: document_title ?? undefined,\n      startIndex: start_block_index,\n      endIndex: end_block_index,\n      citedText: cited_text,\n    };\n  }\n  if (\n    citation.type === \"web_search_result_location\" &&\n    _isString(citation.url) &&\n    _isString(citation.title) &&\n    _isString(citation.encrypted_index) &&\n    _isString(citation.cited_text)\n  ) {\n    const { url, title, encrypted_index, cited_text, ...rest } = citation;\n    return {\n      ...rest,\n      type: \"citation\",\n      source: \"url\",\n      url,\n      title,\n      startIndex: Number(encrypted_index),\n      endIndex: Number(encrypted_index),\n      citedText: cited_text,\n    };\n  }\n  if (\n    citation.type === \"search_result_location\" &&\n    _isString(citation.source) &&\n    _isString(citation.title) &&\n    _isNumber(citation.start_block_index) &&\n    _isNumber(citation.end_block_index) &&\n    _isString(citation.cited_text)\n  ) {\n    const {\n      source,\n      title,\n      start_block_index,\n      end_block_index,\n      cited_text,\n      ...rest\n    } = citation;\n    return {\n      ...rest,\n      type: \"citation\",\n      source: \"search\",\n      url: source,\n      title: title ?? undefined,\n      startIndex: start_block_index,\n      endIndex: end_block_index,\n      citedText: cited_text,\n    };\n  }\n  return undefined;\n}\n\n/**\n * Converts an Anthropic content block to a standard V1 content block.\n *\n * This function handles the conversion of Anthropic-specific content blocks\n * (document and image blocks) to the standardized V1 format. It supports\n * various source types including base64 data, URLs, file IDs, and text data.\n *\n * @param block - The Anthropic content block to convert\n * @returns A standard V1 content block if conversion is successful, undefined otherwise\n *\n * @example\n * ```typescript\n * const anthropicBlock = {\n *   type: \"image\",\n *   source: {\n *     type: \"base64\",\n *     media_type: \"image/png\",\n *     data: \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==\"\n *   }\n * };\n *\n * const standardBlock = convertToV1FromAnthropicContentBlock(anthropicBlock);\n * // Returns: { type: \"image\", mimeType: \"image/png\", data: \"...\" }\n * ```\n */\nexport function convertToV1FromAnthropicContentBlock(\n  block: ContentBlock\n): ContentBlock.Standard | undefined {\n  if (\n    _isContentBlock(block, \"document\") &&\n    _isObject(block.source) &&\n    \"type\" in block.source\n  ) {\n    if (\n      block.source.type === \"base64\" &&\n      _isString(block.source.media_type) &&\n      _isString(block.source.data)\n    ) {\n      return {\n        type: \"file\",\n        mimeType: block.source.media_type,\n        data: block.source.data,\n      };\n    } else if (block.source.type === \"url\" && _isString(block.source.url)) {\n      return {\n        type: \"file\",\n        url: block.source.url,\n      };\n    } else if (\n      block.source.type === \"file\" &&\n      _isString(block.source.file_id)\n    ) {\n      return {\n        type: \"file\",\n        fileId: block.source.file_id,\n      };\n    } else if (block.source.type === \"text\" && _isString(block.source.data)) {\n      return {\n        type: \"file\",\n        mimeType: String(block.source.media_type ?? \"text/plain\"),\n        data: block.source.data,\n      };\n    }\n  } else if (\n    _isContentBlock(block, \"image\") &&\n    _isObject(block.source) &&\n    \"type\" in block.source\n  ) {\n    if (\n      block.source.type === \"base64\" &&\n      _isString(block.source.media_type) &&\n      _isString(block.source.data)\n    ) {\n      return {\n        type: \"image\",\n        mimeType: block.source.media_type,\n        data: block.source.data,\n      };\n    } else if (block.source.type === \"url\" && _isString(block.source.url)) {\n      return {\n        type: \"image\",\n        url: block.source.url,\n      };\n    } else if (\n      block.source.type === \"file\" &&\n      _isString(block.source.file_id)\n    ) {\n      return {\n        type: \"image\",\n        fileId: block.source.file_id,\n      };\n    }\n  }\n  return undefined;\n}\n\n/**\n * Converts an array of content blocks from Anthropic format to v1 standard format.\n *\n * This function processes each content block in the input array, attempting to convert\n * Anthropic-specific block formats (like image blocks with source objects, document blocks, etc.)\n * to the standardized v1 content block format. If a block cannot be converted, it is\n * passed through as-is with a type assertion to ContentBlock.Standard.\n *\n * @param content - Array of content blocks in Anthropic format to be converted\n * @returns Array of content blocks in v1 standard format\n */\nexport function convertToV1FromAnthropicInput(\n  content: Array<ContentBlock>\n): Array<ContentBlock.Standard> {\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    for (const block of content) {\n      const stdBlock = convertToV1FromAnthropicContentBlock(block);\n      if (stdBlock) {\n        yield stdBlock;\n      } else {\n        yield block as ContentBlock.Standard;\n      }\n    }\n  }\n  return Array.from(iterateContent());\n}\n\n/**\n * Converts an Anthropic AI message to an array of v1 standard content blocks.\n *\n * This function processes an AI message containing Anthropic-specific content blocks\n * and converts them to the standardized v1 content block format.\n *\n * @param message - The AI message containing Anthropic-formatted content blocks\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const message = new AIMessage([\n *   { type: \"text\", text: \"Hello world\" },\n *   { type: \"thinking\", text: \"Let me think about this...\" },\n *   { type: \"tool_use\", id: \"123\", name: \"calculator\", input: { a: 1, b: 2 } }\n * ]);\n *\n * const standardBlocks = convertToV1FromAnthropicMessage(message);\n * // Returns:\n * // [\n * //   { type: \"text\", text: \"Hello world\" },\n * //   { type: \"reasoning\", reasoning: \"Let me think about this...\" },\n * //   { type: \"tool_call\", id: \"123\", name: \"calculator\", args: { a: 1, b: 2 } }\n * // ]\n * ```\n */\nexport function convertToV1FromAnthropicMessage(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    for (const block of content) {\n      // TextBlock\n      if (_isContentBlock(block, \"text\") && _isString(block.text)) {\n        const { text, citations, ...rest } = block;\n        if (_isArray(citations) && citations.length) {\n          const _citations = citations.reduce<ContentBlock.Citation[]>(\n            (acc, item) => {\n              const citation = convertAnthropicAnnotation(item as ContentBlock);\n              if (citation) {\n                return [...acc, citation];\n              }\n              return acc;\n            },\n            []\n          );\n          yield {\n            ...rest,\n            type: \"text\",\n            text,\n            annotations: _citations,\n          };\n          continue;\n        } else {\n          yield {\n            ...rest,\n            type: \"text\",\n            text,\n          };\n          continue;\n        }\n      }\n      // ThinkingBlock\n      else if (\n        _isContentBlock(block, \"thinking\") &&\n        _isString(block.thinking)\n      ) {\n        const { thinking, signature, ...rest } = block;\n        yield {\n          ...rest,\n          type: \"reasoning\",\n          reasoning: thinking,\n          signature,\n        };\n        continue;\n      }\n      // RedactedThinkingBlock\n      else if (_isContentBlock(block, \"redacted_thinking\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      }\n      // ToolUseBlock\n      else if (\n        _isContentBlock(block, \"tool_use\") &&\n        _isString(block.name) &&\n        _isString(block.id)\n      ) {\n        yield {\n          type: \"tool_call\",\n          id: block.id,\n          name: block.name,\n          args: block.input,\n        };\n        continue;\n      }\n      // message chunks can have input_json_delta contents\n      else if (_isContentBlock(block, \"input_json_delta\")) {\n        if (_isAIMessageChunk(message) && message.tool_call_chunks?.length) {\n          const tool_call_chunk = message.tool_call_chunks[0];\n          yield {\n            type: \"tool_call_chunk\",\n            id: tool_call_chunk.id,\n            name: tool_call_chunk.name,\n            args: tool_call_chunk.args,\n            index: tool_call_chunk.index,\n          };\n          continue;\n        }\n      }\n      // ServerToolUseBlock\n      else if (\n        _isContentBlock(block, \"server_tool_use\") &&\n        _isString(block.name) &&\n        _isString(block.id)\n      ) {\n        const { name, id } = block;\n        if (name === \"web_search\") {\n          const query = iife(() => {\n            if (typeof block.input === \"string\") {\n              return block.input;\n            } else if (_isObject(block.input) && _isString(block.input.query)) {\n              return block.input.query;\n            } else if (_isString(block.partial_json)) {\n              const json = safeParseJson<{ query?: string }>(\n                block.partial_json\n              );\n              if (json?.query) {\n                return json.query;\n              }\n            }\n            return \"\";\n          });\n          yield {\n            id,\n            type: \"server_tool_call\",\n            name: \"web_search\",\n            args: { query },\n          };\n          continue;\n        } else if (block.name === \"code_execution\") {\n          const code = iife(() => {\n            if (typeof block.input === \"string\") {\n              return block.input;\n            } else if (_isObject(block.input) && _isString(block.input.code)) {\n              return block.input.code;\n            } else if (_isString(block.partial_json)) {\n              const json = safeParseJson<{ code?: string }>(block.partial_json);\n              if (json?.code) {\n                return json.code;\n              }\n            }\n            return \"\";\n          });\n          yield {\n            id,\n            type: \"server_tool_call\",\n            name: \"code_execution\",\n            args: { code },\n          };\n          continue;\n        }\n      }\n      // WebSearchToolResultBlock\n      else if (\n        _isContentBlock(block, \"web_search_tool_result\") &&\n        _isString(block.tool_use_id) &&\n        _isArray(block.content)\n      ) {\n        const { content, tool_use_id } = block;\n        const urls = content.reduce<string[]>((acc, content) => {\n          if (_isContentBlock(content, \"web_search_result\")) {\n            return [...acc, content.url as string];\n          }\n          return acc;\n        }, []);\n        yield {\n          type: \"server_tool_call_result\",\n          name: \"web_search\",\n          toolCallId: tool_use_id,\n          status: \"success\",\n          output: {\n            urls,\n          },\n        };\n        continue;\n      }\n      // CodeExecutionToolResultBlock\n      else if (\n        _isContentBlock(block, \"code_execution_tool_result\") &&\n        _isString(block.tool_use_id) &&\n        _isObject(block.content)\n      ) {\n        yield {\n          type: \"server_tool_call_result\",\n          name: \"code_execution\",\n          toolCallId: block.tool_use_id,\n          status: \"success\",\n          output: block.content,\n        };\n        continue;\n      }\n      // MCPToolUseBlock\n      else if (_isContentBlock(block, \"mcp_tool_use\")) {\n        yield {\n          id: block.id,\n          type: \"server_tool_call\",\n          name: \"mcp_tool_use\",\n          args: block.input,\n        };\n        continue;\n      }\n      // MCPToolResultBlock\n      else if (\n        _isContentBlock(block, \"mcp_tool_result\") &&\n        _isString(block.tool_use_id) &&\n        _isObject(block.content)\n      ) {\n        yield {\n          type: \"server_tool_call_result\",\n          name: \"mcp_tool_use\",\n          toolCallId: block.tool_use_id,\n          status: \"success\",\n          output: block.content,\n        };\n        continue;\n      }\n      // ContainerUploadBlock\n      else if (_isContentBlock(block, \"container_upload\")) {\n        yield {\n          type: \"server_tool_call\",\n          name: \"container_upload\",\n          args: block.input,\n        };\n        continue;\n      }\n      // SearchResultBlockParam\n      else if (_isContentBlock(block, \"search_result\")) {\n        yield { id: block.id, type: \"non_standard\", value: block };\n        continue;\n      }\n      // ToolResultBlockParam\n      else if (_isContentBlock(block, \"tool_result\")) {\n        yield { id: block.id, type: \"non_standard\", value: block };\n        continue;\n      } else {\n        // For all other blocks, we try to convert them to a standard block\n        const stdBlock = convertToV1FromAnthropicContentBlock(block);\n        if (stdBlock) {\n          yield stdBlock;\n          continue;\n        }\n      }\n      yield { type: \"non_standard\", value: block };\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nexport const ChatAnthropicTranslator: StandardContentBlockTranslator = {\n  translateContent: convertToV1FromAnthropicMessage,\n  translateContentChunk: convertToV1FromAnthropicMessage,\n};\n\nfunction _isAIMessageChunk(message: unknown): message is AIMessageChunk {\n  return (\n    typeof (message as BaseMessage)?._getType === \"function\" &&\n    typeof (message as BaseMessageChunk).concat === \"function\" &&\n    (message as BaseMessageChunk)._getType() === \"ai\"\n  );\n}\n"],"names":["citation: ContentBlock","block: ContentBlock","content: Array<ContentBlock>","message: AIMessage","content","ChatAnthropicTranslator: StandardContentBlockTranslator","message: unknown"],"mappings":"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","debugId":null}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/data.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/data.ts"],"sourcesContent":["import {\n  parseBase64DataUrl,\n  isBase64ContentBlock,\n  isIDContentBlock,\n  isURLContentBlock,\n} from \"../content/data.js\";\nimport type { ContentBlock } from \"../content/index.js\";\nimport { _isContentBlock, _isObject, _isString } from \"./utils.js\";\n\nexport function convertToV1FromDataContentBlock(\n  block: ContentBlock\n): ContentBlock.Standard {\n  if (isURLContentBlock(block)) {\n    return {\n      type: block.type,\n      mimeType: block.mime_type,\n      url: block.url,\n      metadata: block.metadata,\n    };\n  }\n  if (isBase64ContentBlock(block)) {\n    return {\n      type: block.type,\n      mimeType: block.mime_type ?? \"application/octet-stream\",\n      data: block.data,\n      metadata: block.metadata,\n    };\n  }\n  if (isIDContentBlock(block)) {\n    return {\n      type: block.type,\n      mimeType: block.mime_type,\n      fileId: block.id,\n      metadata: block.metadata,\n    };\n  }\n  return block as ContentBlock.Standard;\n}\n\nexport function convertToV1FromDataContent(\n  content: Array<ContentBlock>\n): Array<ContentBlock.Standard> {\n  return content.map(convertToV1FromDataContentBlock);\n}\n\nexport function isOpenAIDataBlock(block: ContentBlock): boolean {\n  if (_isContentBlock(block, \"image_url\") && _isObject(block.image_url)) {\n    return true;\n  }\n  if (_isContentBlock(block, \"input_audio\") && _isObject(block.input_audio)) {\n    return true;\n  }\n  if (_isContentBlock(block, \"file\") && _isObject(block.file)) {\n    return true;\n  }\n  return false;\n}\n\nexport function convertToV1FromOpenAIDataBlock(\n  block: ContentBlock\n): ContentBlock.Standard {\n  if (\n    _isContentBlock(block, \"image_url\") &&\n    _isObject(block.image_url) &&\n    _isString(block.image_url.url)\n  ) {\n    const parsed = parseBase64DataUrl({ dataUrl: block.image_url.url });\n    if (parsed) {\n      return {\n        type: \"image\",\n        mimeType: parsed.mime_type,\n        data: parsed.data,\n      };\n    } else {\n      return {\n        type: \"image\",\n        url: block.image_url.url,\n      };\n    }\n  } else if (\n    _isContentBlock(block, \"input_audio\") &&\n    _isObject(block.input_audio) &&\n    _isString(block.input_audio.data) &&\n    _isString(block.input_audio.format)\n  ) {\n    return {\n      type: \"audio\",\n      data: block.input_audio.data,\n      mimeType: `audio/${block.input_audio.format}`,\n    };\n  } else if (\n    _isContentBlock(block, \"file\") &&\n    _isObject(block.file) &&\n    _isString(block.file.data)\n  ) {\n    const parsed = parseBase64DataUrl({ dataUrl: block.file.data });\n    if (parsed) {\n      return {\n        type: \"file\",\n        data: parsed.data,\n        mimeType: parsed.mime_type,\n      };\n    } else if (_isString(block.file.file_id)) {\n      return {\n        type: \"file\",\n        fileId: block.file.file_id,\n      };\n    }\n  }\n  return block as ContentBlock.Standard;\n}\n"],"names":["block: ContentBlock","content: Array<ContentBlock>"],"mappings":";;;;;;;;;;;;;AASA,SAAgB,gCACdA,KAAAA,EACuB;IACvB,QAAI,2SAAA,EAAkB,MAAM,CAC1B,CAAA,OAAO;QACL,MAAM,MAAM,IAAA;QACZ,UAAU,MAAM,SAAA;QAChB,KAAK,MAAM,GAAA;QACX,UAAU,MAAM,QAAA;IACjB;IAEH,QAAI,8SAAA,EAAqB,MAAM,CAC7B,CAAA,OAAO;QACL,MAAM,MAAM,IAAA;QACZ,UAAU,MAAM,SAAA,IAAa;QAC7B,MAAM,MAAM,IAAA;QACZ,UAAU,MAAM,QAAA;IACjB;IAEH,QAAI,0SAAA,EAAiB,MAAM,CACzB,CAAA,OAAO;QACL,MAAM,MAAM,IAAA;QACZ,UAAU,MAAM,SAAA;QAChB,QAAQ,MAAM,EAAA;QACd,UAAU,MAAM,QAAA;IACjB;IAEH,OAAO;AACR;AAED,SAAgB,2BACdC,OAAAA,EAC8B;IAC9B,OAAO,QAAQ,GAAA,CAAI,gCAAgC;AACpD;AAED,SAAgB,kBAAkBD,KAAAA,EAA8B;IAC9D,QAAI,oTAAA,EAAgB,OAAO,YAAY,QAAI,8SAAA,EAAU,MAAM,SAAA,CAAU,CACnE,CAAA,OAAO;IAET,QAAI,oTAAA,EAAgB,OAAO,cAAc,QAAI,8SAAA,EAAU,MAAM,WAAA,CAAY,CACvE,CAAA,OAAO;IAET,QAAI,oTAAA,EAAgB,OAAO,OAAO,QAAI,8SAAA,EAAU,MAAM,IAAA,CAAK,CACzD,CAAA,OAAO;IAET,OAAO;AACR;AAED,SAAgB,+BACdA,KAAAA,EACuB;IACvB,QACE,oTAAA,EAAgB,OAAO,YAAY,QACnC,8SAAA,EAAU,MAAM,SAAA,CAAU,QAC1B,8SAAA,EAAU,MAAM,SAAA,CAAU,GAAA,CAAI,EAC9B;QACA,MAAM,aAAS,4SAAA,EAAmB;YAAE,SAAS,MAAM,SAAA,CAAU,GAAA;QAAK,EAAC;QACnE,IAAI,OACF,CAAA,OAAO;YACL,MAAM;YACN,UAAU,OAAO,SAAA;YACjB,MAAM,OAAO,IAAA;QACd;aAED,OAAO;YACL,MAAM;YACN,KAAK,MAAM,SAAA,CAAU,GAAA;QACtB;IAEJ,OAAA,QACC,oTAAA,EAAgB,OAAO,cAAc,QACrC,8SAAA,EAAU,MAAM,WAAA,CAAY,QAC5B,8SAAA,EAAU,MAAM,WAAA,CAAY,IAAA,CAAK,QACjC,8SAAA,EAAU,MAAM,WAAA,CAAY,MAAA,CAAO,CAEnC,CAAA,OAAO;QACL,MAAM;QACN,MAAM,MAAM,WAAA,CAAY,IAAA;QACxB,UAAU,CAAC,MAAM,EAAE,MAAM,WAAA,CAAY,MAAA,EAAQ;IAC9C;iBAED,oTAAA,EAAgB,OAAO,OAAO,QAC9B,8SAAA,EAAU,MAAM,IAAA,CAAK,QACrB,8SAAA,EAAU,MAAM,IAAA,CAAK,IAAA,CAAK,EAC1B;QACA,MAAM,aAAS,4SAAA,EAAmB;YAAE,SAAS,MAAM,IAAA,CAAK,IAAA;QAAM,EAAC;QAC/D,IAAI,OACF,CAAA,OAAO;YACL,MAAM;YACN,MAAM,OAAO,IAAA;YACb,UAAU,OAAO,SAAA;QAClB;qBACQ,8SAAA,EAAU,MAAM,IAAA,CAAK,OAAA,CAAQ,CACtC,CAAA,OAAO;YACL,MAAM;YACN,QAAQ,MAAM,IAAA,CAAK,OAAA;QACpB;IAEJ;IACD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/openai.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/openai.ts"],"sourcesContent":["import type { ContentBlock } from \"../content/index.js\";\nimport type { AIMessageChunk, AIMessage } from \"../ai.js\";\nimport type { StandardContentBlockTranslator } from \"./index.js\";\nimport { convertToV1FromOpenAIDataBlock, isOpenAIDataBlock } from \"./data.js\";\nimport {\n  _isArray,\n  _isContentBlock,\n  _isObject,\n  _isString,\n  iife,\n} from \"./utils.js\";\n\n/**\n * Converts a ChatOpenAICompletions message to an array of v1 standard content blocks.\n *\n * This function processes an AI message from ChatOpenAICompletions API format\n * and converts it to the standardized v1 content block format. It handles both\n * string content and structured content blocks, as well as tool calls.\n *\n * @param message - The AI message containing ChatOpenAICompletions formatted content\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const message = new AIMessage(\"Hello world\");\n * const standardBlocks = convertToV1FromChatCompletions(message);\n * // Returns: [{ type: \"text\", text: \"Hello world\" }]\n * ```\n *\n * @example\n * ```typescript\n * const message = new AIMessage([\n *   { type: \"text\", text: \"Hello\" },\n *   { type: \"image_url\", image_url: { url: \"https://example.com/image.png\" } }\n * ]);\n * message.tool_calls = [\n *   { id: \"call_123\", name: \"calculator\", args: { a: 1, b: 2 } }\n * ];\n *\n * const standardBlocks = convertToV1FromChatCompletions(message);\n * // Returns:\n * // [\n * //   { type: \"text\", text: \"Hello\" },\n * //   { type: \"image\", url: \"https://example.com/image.png\" },\n * //   { type: \"tool_call\", id: \"call_123\", name: \"calculator\", args: { a: 1, b: 2 } }\n * // ]\n * ```\n */\nexport function convertToV1FromChatCompletions(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  const blocks: Array<ContentBlock.Standard> = [];\n  if (typeof message.content === \"string\") {\n    blocks.push({\n      type: \"text\",\n      text: message.content,\n    });\n  } else {\n    blocks.push(...convertToV1FromChatCompletionsInput(message.content));\n  }\n  for (const toolCall of message.tool_calls ?? []) {\n    blocks.push({\n      type: \"tool_call\",\n      id: toolCall.id,\n      name: toolCall.name,\n      args: toolCall.args,\n    });\n  }\n  return blocks;\n}\n\n/**\n * Converts a ChatOpenAICompletions message chunk to an array of v1 standard content blocks.\n *\n * This function processes an AI message chunk from OpenAI's chat completions API and converts\n * it to the standardized v1 content block format. It handles both string and array content,\n * as well as tool calls that may be present in the chunk.\n *\n * @param message - The AI message chunk containing OpenAI-formatted content blocks\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const chunk = new AIMessage(\"Hello\");\n * const standardBlocks = convertToV1FromChatCompletionsChunk(chunk);\n * // Returns: [{ type: \"text\", text: \"Hello\" }]\n * ```\n *\n * @example\n * ```typescript\n * const chunk = new AIMessage([\n *   { type: \"text\", text: \"Processing...\" }\n * ]);\n * chunk.tool_calls = [\n *   { id: \"call_456\", name: \"search\", args: { query: \"test\" } }\n * ];\n *\n * const standardBlocks = convertToV1FromChatCompletionsChunk(chunk);\n * // Returns:\n * // [\n * //   { type: \"text\", text: \"Processing...\" },\n * //   { type: \"tool_call\", id: \"call_456\", name: \"search\", args: { query: \"test\" } }\n * // ]\n * ```\n */\nexport function convertToV1FromChatCompletionsChunk(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  const blocks: Array<ContentBlock.Standard> = [];\n  if (typeof message.content === \"string\") {\n    blocks.push({\n      type: \"text\",\n      text: message.content,\n    });\n  } else {\n    blocks.push(...convertToV1FromChatCompletionsInput(message.content));\n  }\n\n  // TODO: parse chunk position information\n  for (const toolCall of message.tool_calls ?? []) {\n    blocks.push({\n      type: \"tool_call\",\n      id: toolCall.id,\n      name: toolCall.name,\n      args: toolCall.args,\n    });\n  }\n  return blocks;\n}\n\n/**\n * Converts an array of ChatOpenAICompletions content blocks to v1 standard content blocks.\n *\n * This function processes content blocks from OpenAI's Chat Completions API format\n * and converts them to the standardized v1 content block format. It handles both\n * OpenAI-specific data blocks (which require conversion) and standard blocks\n * (which are passed through with type assertion).\n *\n * @param blocks - Array of content blocks in ChatOpenAICompletions format\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const openaiBlocks = [\n *   { type: \"text\", text: \"Hello world\" },\n *   { type: \"image_url\", image_url: { url: \"https://example.com/image.png\" } }\n * ];\n *\n * const standardBlocks = convertToV1FromChatCompletionsInput(openaiBlocks);\n * // Returns:\n * // [\n * //   { type: \"text\", text: \"Hello world\" },\n * //   { type: \"image\", url: \"https://example.com/image.png\" }\n * // ]\n * ```\n */\nexport function convertToV1FromChatCompletionsInput(\n  blocks: Array<ContentBlock>\n): Array<ContentBlock.Standard> {\n  const convertedBlocks: Array<ContentBlock.Standard> = [];\n  for (const block of blocks) {\n    if (isOpenAIDataBlock(block)) {\n      convertedBlocks.push(convertToV1FromOpenAIDataBlock(block));\n    } else {\n      convertedBlocks.push(block as ContentBlock.Standard);\n    }\n  }\n  return convertedBlocks;\n}\n\nfunction convertResponsesAnnotation(\n  annotation: ContentBlock\n): ContentBlock | ContentBlock.Citation {\n  if (annotation.type === \"url_citation\") {\n    const { url, title, start_index, end_index } = annotation;\n    return {\n      type: \"citation\",\n      url,\n      title,\n      startIndex: start_index,\n      endIndex: end_index,\n    };\n  }\n  if (annotation.type === \"file_citation\") {\n    const { file_id, filename, index } = annotation;\n    return {\n      type: \"citation\",\n      title: filename,\n      startIndex: index,\n      endIndex: index,\n      fileId: file_id,\n    };\n  }\n  return annotation;\n}\n\n/**\n * Converts a ChatOpenAIResponses message to an array of v1 standard content blocks.\n *\n * This function processes an AI message containing OpenAI Responses-specific content blocks\n * and converts them to the standardized v1 content block format. It handles reasoning summaries,\n * text content with annotations, tool calls, and various tool outputs including code interpreter,\n * web search, file search, computer calls, and MCP-related blocks.\n *\n * @param message - The AI message containing OpenAI Responses-formatted content blocks\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const message = new AIMessage({\n *   content: [{ type: \"text\", text: \"Hello world\", annotations: [] }],\n *   tool_calls: [{ id: \"123\", name: \"calculator\", args: { a: 1, b: 2 } }],\n *   additional_kwargs: {\n *     reasoning: { summary: [{ text: \"Let me calculate this...\" }] },\n *     tool_outputs: [\n *       {\n *         type: \"code_interpreter_call\",\n *         code: \"print('hello')\",\n *         outputs: [{ type: \"logs\", logs: \"hello\" }]\n *       }\n *     ]\n *   }\n * });\n *\n * const standardBlocks = convertToV1FromResponses(message);\n * // Returns:\n * // [\n * //   { type: \"reasoning\", reasoning: \"Let me calculate this...\" },\n * //   { type: \"text\", text: \"Hello world\", annotations: [] },\n * //   { type: \"tool_call\", id: \"123\", name: \"calculator\", args: { a: 1, b: 2 } },\n * //   { type: \"code_interpreter_call\", code: \"print('hello')\" },\n * //   { type: \"code_interpreter_result\", output: [{ type: \"code_interpreter_output\", returnCode: 0, stdout: \"hello\" }] }\n * // ]\n * ```\n */\nexport function convertToV1FromResponses(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    if (\n      _isObject(message.additional_kwargs?.reasoning) &&\n      _isArray(message.additional_kwargs.reasoning.summary)\n    ) {\n      const summary =\n        message.additional_kwargs.reasoning.summary.reduce<string>(\n          (acc, item) => {\n            if (_isObject(item) && _isString(item.text)) {\n              return `${acc}${item.text}`;\n            }\n            return acc;\n          },\n          \"\"\n        );\n      yield {\n        type: \"reasoning\",\n        reasoning: summary,\n      };\n    }\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    for (const block of content) {\n      if (_isContentBlock(block, \"text\")) {\n        const { text, annotations, ...rest } = block;\n        if (Array.isArray(annotations)) {\n          yield {\n            ...rest,\n            type: \"text\",\n            text: String(text),\n            annotations: annotations.map(convertResponsesAnnotation),\n          };\n        } else {\n          yield {\n            ...rest,\n            type: \"text\",\n            text: String(text),\n          };\n        }\n      }\n    }\n    for (const toolCall of message.tool_calls ?? []) {\n      yield {\n        type: \"tool_call\",\n        id: toolCall.id,\n        name: toolCall.name,\n        args: toolCall.args,\n      };\n    }\n    if (\n      _isObject(message.additional_kwargs) &&\n      _isArray(message.additional_kwargs.tool_outputs)\n    ) {\n      for (const toolOutput of message.additional_kwargs.tool_outputs) {\n        if (_isContentBlock(toolOutput, \"web_search_call\")) {\n          yield {\n            id: toolOutput.id,\n            type: \"server_tool_call\",\n            name: \"web_search\",\n            args: { query: toolOutput.query },\n          };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"file_search_call\")) {\n          yield {\n            id: toolOutput.id,\n            type: \"server_tool_call\",\n            name: \"file_search\",\n            args: { query: toolOutput.query },\n          };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"computer_call\")) {\n          yield { type: \"non_standard\", value: toolOutput };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"code_interpreter_call\")) {\n          if (_isString(toolOutput.code)) {\n            yield {\n              id: toolOutput.id,\n              type: \"server_tool_call\",\n              name: \"code_interpreter\",\n              args: { code: toolOutput.code },\n            };\n          }\n          if (_isArray(toolOutput.outputs)) {\n            const returnCode = iife(() => {\n              if (toolOutput.status === \"in_progress\") return undefined;\n              if (toolOutput.status === \"completed\") return 0;\n              if (toolOutput.status === \"incomplete\") return 127;\n              if (toolOutput.status === \"interpreting\") return undefined;\n              if (toolOutput.status === \"failed\") return 1;\n              return undefined;\n            });\n            for (const output of toolOutput.outputs) {\n              if (_isContentBlock(output, \"logs\")) {\n                yield {\n                  type: \"server_tool_call_result\",\n                  toolCallId: toolOutput.id ?? \"\",\n                  status: \"success\",\n                  output: {\n                    type: \"code_interpreter_output\",\n                    returnCode: returnCode ?? 0,\n                    stderr: [0, undefined].includes(returnCode)\n                      ? undefined\n                      : String(output.logs),\n                    stdout: [0, undefined].includes(returnCode)\n                      ? String(output.logs)\n                      : undefined,\n                  },\n                };\n                continue;\n              }\n            }\n          }\n          continue;\n        } else if (_isContentBlock(toolOutput, \"mcp_call\")) {\n          yield {\n            id: toolOutput.id,\n            type: \"server_tool_call\",\n            name: \"mcp_call\",\n            args: toolOutput.input,\n          };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"mcp_list_tools\")) {\n          yield {\n            id: toolOutput.id,\n            type: \"server_tool_call\",\n            name: \"mcp_list_tools\",\n            args: toolOutput.input,\n          };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"mcp_approval_request\")) {\n          yield { type: \"non_standard\", value: toolOutput };\n          continue;\n        } else if (_isContentBlock(toolOutput, \"image_generation_call\")) {\n          yield { type: \"non_standard\", value: toolOutput };\n          continue;\n        }\n        if (_isObject(toolOutput)) {\n          yield { type: \"non_standard\", value: toolOutput };\n        }\n      }\n    }\n  }\n  return Array.from(iterateContent());\n}\n\n/**\n * Converts a ChatOpenAIResponses message chunk to an array of v1 standard content blocks.\n *\n * This function processes an AI message chunk containing OpenAI-specific content blocks\n * and converts them to the standardized v1 content block format. It handles both the\n * regular message content and tool call chunks that are specific to streaming responses.\n *\n * @param message - The AI message chunk containing OpenAI-formatted content blocks\n * @returns Array of content blocks in v1 standard format\n *\n * @example\n * ```typescript\n * const messageChunk = new AIMessageChunk({\n *   content: [{ type: \"text\", text: \"Hello\" }],\n *   tool_call_chunks: [\n *     { id: \"call_123\", name: \"calculator\", args: '{\"a\": 1' }\n *   ]\n * });\n *\n * const standardBlocks = convertToV1FromResponsesChunk(messageChunk);\n * // Returns:\n * // [\n * //   { type: \"text\", text: \"Hello\" },\n * //   { type: \"tool_call_chunk\", id: \"call_123\", name: \"calculator\", args: '{\"a\": 1' }\n * // ]\n * ```\n */\nexport function convertToV1FromResponsesChunk(\n  message: AIMessageChunk\n): Array<ContentBlock.Standard> {\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    yield* convertToV1FromResponses(message);\n    for (const toolCallChunk of message.tool_call_chunks ?? []) {\n      yield {\n        type: \"tool_call_chunk\",\n        id: toolCallChunk.id,\n        name: toolCallChunk.name,\n        args: toolCallChunk.args,\n      };\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nexport const ChatOpenAITranslator: StandardContentBlockTranslator = {\n  translateContent: (message) => {\n    if (typeof message.content === \"string\") {\n      return convertToV1FromChatCompletions(message);\n    }\n    return convertToV1FromResponses(message);\n  },\n  translateContentChunk: (message) => {\n    if (typeof message.content === \"string\") {\n      return convertToV1FromChatCompletionsChunk(message);\n    }\n    return convertToV1FromResponsesChunk(message);\n  },\n};\n"],"names":["message: AIMessage","blocks: Array<ContentBlock.Standard>","blocks: Array<ContentBlock>","convertedBlocks: Array<ContentBlock.Standard>","annotation: ContentBlock","message: AIMessageChunk","ChatOpenAITranslator: StandardContentBlockTranslator"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1361, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/message.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/message.ts"],"sourcesContent":["import type { ContentBlock } from \"./content/index.js\";\nimport type { ResponseMetadata, UsageMetadata } from \"./metadata.js\";\nimport type { $MergeDiscriminatedUnion, $MergeObjects } from \"./utils.js\";\n\n/**\n * Represents the possible types of messages in the system.\n * Includes standard message types (\"ai\", \"human\", \"tool\", \"system\")\n * and allows for custom string types that are non-null.\n *\n * @example\n * ```ts\n * // Standard message types\n * const messageType1: MessageType = \"ai\";\n * const messageType2: MessageType = \"human\";\n *\n * // Custom message type\n * const messageType3: MessageType = \"custom_type\";\n * ```\n */\nexport type MessageType =\n  | \"ai\"\n  | \"human\"\n  | \"tool\"\n  | \"system\"\n  | (string & NonNullable<unknown>);\n\n/**\n * Represents the output version format for message content.\n *\n * This type determines how the content field is structured in a message:\n * - \"v0\": Content is represented as a simple string or array of content blocks\n *   - provides backward compatibility with simpler content representations\n * - \"v1\": Content follows the structured ContentBlock format with typed discriminated unions\n *   - enables full type safety and structured content block handling\n *\n * @example\n * ```ts\n * // v0 format - simple content representation\n * const v0Message: Message<{ outputVersion: \"v0\", content: ... }> = {\n *   type: \"human\",\n *   content: \"Hello world\" // string | Array<ContentBlock | ContentBlock.Text>\n * };\n *\n * // v1 format - structured content blocks\n * const v1Message: Message<{ outputVersion: \"v1\", content: ... }> = {\n *   type: \"human\",\n *   content: [\n *     { type: \"text\", text: \"Hello world\" },\n *     { type: \"image\", image_url: \"...\" }\n *   ] // Array<ContentBlock | ...> (determined by the structure)\n * };\n * ```\n */\nexport type MessageOutputVersion = \"v0\" | \"v1\";\n\n/**\n * Represents the input and output types of a tool that can be used in messages.\n *\n * @template TInput - The type of input the tool accepts.\n * @template TOutput - The type of output the tool produces.\n *\n * @example\n * ```ts\n * // Tool that takes a string input and returns a number\n * interface StringToNumberTool extends MessageToolDefinition<string, number> {\n *   input: string;\n *   output: number;\n * }\n * ```\n */\nexport interface MessageToolDefinition<TInput = unknown, TOutput = unknown> {\n  input: TInput;\n  output: TOutput;\n}\n\n/**\n * Represents a structured set of tools by mapping tool names to definitions\n * that can be used in messages.\n *\n * @example\n * ```ts\n * interface MyToolSet extends MessageToolSet {\n *   calculator: MessageToolDefinition<\n *     { operation: string; numbers: number[] },\n *     number\n *   >;\n *   translator: MessageToolDefinition<\n *     { text: string; targetLanguage: string },\n *     string\n *   >;\n * }\n * ```\n */\nexport interface MessageToolSet {\n  [key: string]: MessageToolDefinition;\n}\n\n/**\n * Represents a tool call block within a message structure by mapping tool names to their\n * corresponding tool call formats, including the input arguments and an optional identifier.\n *\n * @template TStructure - A message structure type that may contain tool definitions\n *\n * @example\n * ```ts\n * // Given a message structure with a calculator tool:\n * interface MyStructure extends MessageStructure {\n *   tools: {\n *     calculator: MessageToolDefinition<{ operation: string, numbers: number[] }, number>\n *   }\n * }\n *\n * // The tool call block would be:\n * type CalcToolCall = $MessageToolCallBlock<MyStructure>;\n * // Resolves to:\n * // {\n * //   type: \"tool_call\";\n * //   name: \"calculator\";\n * //   args: { operation: string, numbers: number[] };\n * //   id?: string;\n * // }\n * ```\n */\nexport type $MessageToolCallBlock<TStructure extends MessageStructure> =\n  TStructure[\"tools\"] extends MessageToolSet\n    ? {\n        [K in keyof TStructure[\"tools\"]]: K extends string\n          ? TStructure[\"tools\"][K] extends MessageToolDefinition\n            ? ContentBlock.Tools.ToolCall<K, TStructure[\"tools\"][K][\"input\"]>\n            : never\n          : never;\n      }[keyof TStructure[\"tools\"]]\n    : never;\n\n/**\n * Core interface that defines the structure of messages.\n *\n * @example\n * ```ts\n * // Basic message structure with just content blocks\n * interface SimpleMessageStructure extends MessageStructure {\n *   content: {\n *     human: ContentBlock.Text;\n *     // allows for text + reasoning blocks in ai messages\n *     ai: ContentBlock.Text | ContentBlock.Reasoning;\n *   }\n * }\n *\n * // Message structure with tools and properties\n * interface AdvancedMessageStructure extends MessageStructure {\n *   tools: {\n *     calculator: MessageToolDefinition<\n *       { operation: string; numbers: number[] },\n *       number\n *     >;\n *   };\n *   content: {\n *     // allows for text + image blocks in human messages\n *     human: ContentBlock.Text | ContentBlock.Multimodal.Image;\n *     // only allows for text blocks in ai messages\n *     ai: ContentBlock.Text;\n *   };\n *   properties: {\n *     // pins properties to ai messages\n *     ai: {\n *       response_metadata: {\n *         confidence: number;\n *         model: string;\n *       };\n *     };\n *   }\n * }\n *\n * // Using with $MergeMessageStructure to combine structures\n * // The resulting type when passed into BaseMessage will have a calculator tool,\n * // allow for text + image blocks in human messages,\n * // and text + reasoning blocks + additional arbitrary properties in ai messages.\n * type CombinedStructure = $MergeMessageStructure<\n *   SimpleMessageStructure,\n *   AdvancedMessageStructure\n * >;\n *\n * // Using in a Message object\n * const message: Message<CombinedStructure> = {\n *   id: \"msg-123\",\n *   type: \"human\",\n *   content: [\n *     { type: \"text\", text: \"Hello!\" }\n *     { type: \"image\", mimeType: \"image/jpeg\", url: \"https://example.com/image.jpg\" }\n *     // this block will throw an error because it's not defined in the structure\n *     { type: \"reasoning\", reasoning: \"The answer is 42\" }\n *   ]\n * };\n * ```\n */\nexport interface MessageStructure {\n  /**\n   * Optional output version for the message structure.\n   * If not provided, defaults to \"v0\".\n   */\n  readonly outputVersion?: MessageOutputVersion;\n  /**\n   * Optional set of tool definitions that can be used in messages.\n   * Each tool is defined with input/output types and can be referenced in tool messages.\n   */\n  readonly tools?: MessageToolSet;\n  /**\n   * Optional mapping of message types to their allowed content blocks.\n   * Each message type can specify what content block types it supports (text, images, etc).\n   */\n  readonly content?: Partial<{\n    [key in MessageType]: ContentBlock;\n  }>;\n  /**\n   * Optional mapping of message types to arbitrary property objects.\n   * Allows attaching custom metadata or other information to specific message types.\n   */\n  readonly properties?: Partial<{\n    [key in MessageType]: Record<string, unknown>;\n  }>;\n}\n\n/**\n * Normalizes an arbitrary type to a message output version or undefined.\n * Accepts unknown and narrows to a valid MessageOutputVersion if present.\n */\ntype $NormalizeMessageOutputVersion<T> =\n  | Extract<T, MessageOutputVersion>\n  | undefined;\n\n/**\n * Merges two output version types from message structures.\n *\n * This utility type determines the resulting output version when combining two message structures.\n * The merge logic follows these rules:\n *\n * - If both T and U are undefined, defaults to \"v0\" for backwards compatibility\n * - If T is undefined but U is defined, uses U's version\n * - If U is undefined but T is defined, uses T's version\n * - If both T and U are defined, U takes precedence (later structure wins)\n *\n * @template T - The output version from the first message structure\n * @template U - The output version from the second message structure\n *\n * @example\n * ```ts\n * // Both undefined - defaults to \"v0\"\n * type Result1 = $MergeOutputVersion<undefined, undefined>; // \"v0\"\n *\n * // One defined - uses the defined version\n * type Result2 = $MergeOutputVersion<undefined, \"v1\">; // \"v1\"\n * type Result3 = $MergeOutputVersion<\"v0\", undefined>; // \"v0\"\n *\n * // Both defined - second takes precedence\n * type Result4 = $MergeOutputVersion<\"v0\", \"v1\">; // \"v1\"\n * ```\n */\nexport type $MergeOutputVersion<T, U> =\n  $NormalizeMessageOutputVersion<T> extends infer TV\n    ? $NormalizeMessageOutputVersion<U> extends infer UV\n      ? [TV, UV] extends [undefined, undefined]\n        ? \"v0\"\n        : [TV] extends [undefined]\n        ? Exclude<UV, undefined>\n        : [UV] extends [undefined]\n        ? Exclude<TV, undefined>\n        : UV\n      : never\n    : never;\n\n/**\n * Merges two content definition objects from message structures.\n *\n * This utility type combines content definitions from two message structures, handling\n * the merging of content block types for each message type. The merge logic follows\n * these rules:\n *\n * - For keys that exist in both T and U: Merges the content blocks using discriminated\n *   union merging based on the \"type\" property. This allows combining different content\n *   block types (e.g., text + image) for the same message type.\n * - For keys that exist only in T: Uses T's content definition as-is\n * - For keys that exist only in U: Uses U's content definition as-is\n *\n * @template T - The content definition from the first message structure\n * @template U - The content definition from the second message structure\n *\n * @example\n * ```ts\n * // T allows text content for human messages\n * type ContentA = {\n *   human: ContentBlock.Text;\n * };\n *\n * // U allows image content for human messages and text for AI messages\n * type ContentB = {\n *   human: ContentBlock.Multimodal.Image;\n *   ai: ContentBlock.Text;\n * };\n *\n * // Merged result allows both text and images for human messages, text for AI\n * type Merged = $MergeContentDefinition<ContentA, ContentB>;\n * // Result: {\n * //   human: ContentBlock.Text | ContentBlock.Multimodal.Image;\n * //   ai: ContentBlock.Text;\n * // }\n * ```\n */\nexport type $MergeContentDefinition<T, U> = {\n  [K in keyof T | keyof U as Extract<\n    (K extends keyof T ? T[K] : never) | (K extends keyof U ? U[K] : never),\n    ContentBlock\n  > extends never\n    ? never\n    : K]: K extends keyof T\n    ? K extends keyof U\n      ? $MergeDiscriminatedUnion<\n          Extract<T[K], ContentBlock>,\n          Extract<U[K], ContentBlock>,\n          \"type\"\n        >\n      : Extract<T[K], ContentBlock>\n    : K extends keyof U\n    ? Extract<U[K], ContentBlock>\n    : never;\n};\n\n/**\n * Merges two message structures A and B into a combined structure.\n * This is a type utility that handles merging of tools, content blocks, and properties\n * from two message structures. The resulting type is usable as its own message structure.\n *\n * @example\n * ```ts\n * // Structure A allows text in human messages and has a confidence property on AI messages\n * interface StructureA extends MessageStructure {\n *   content: {\n *     human: ContentBlock.Text;\n *   };\n *   properties: {\n *     ai: { confidence: number };\n *   }\n * }\n *\n * // Structure B allows images in human messages and has a model property on AI messages\n * interface StructureB extends MessageStructure {\n *   content: {\n *     human: ContentBlock.Multimodal.Image;\n *   };\n *   properties: {\n *     ai: { model: string };\n *   }\n * }\n *\n * // Merged structure allows both text and images in human messages\n * // AI messages have both confidence and model properties\n * type Merged = $MergeMessageStructure<StructureA, StructureB>;\n * ```\n *\n * @template A - First message structure to merge\n * @template B - Second message structure to merge (takes precedence over A)\n */\nexport type $MergeMessageStructure<\n  T extends MessageStructure,\n  U extends MessageStructure\n> = {\n  outputVersion: $MergeOutputVersion<T[\"outputVersion\"], U[\"outputVersion\"]>;\n  tools: $MergeObjects<T[\"tools\"], U[\"tools\"]>;\n  content: $MergeContentDefinition<T[\"content\"], U[\"content\"]>;\n  properties: $MergeObjects<T[\"properties\"], U[\"properties\"]>;\n};\n\n/**\n * Standard message structured used to define the most basic message structure that's\n * used throughout the library.\n *\n * This is also the message structure that's used when a message structure is not provided.\n */\nexport interface StandardMessageStructure extends MessageStructure {\n  content: {\n    /** Text content for AI messages */\n    ai: ContentBlock.Text;\n    /** Text content for human messages */\n    human: ContentBlock.Text;\n    /** Text content for system messages */\n    system: ContentBlock.Text;\n    /** Text content for tool messages */\n    tool: ContentBlock.Text;\n  };\n  properties: {\n    /** Properties specific to AI messages */\n    ai: {\n      /** Metadata about the AI model response */\n      response_metadata: ResponseMetadata;\n      /** Usage statistics for the AI response */\n      usage_metadata: UsageMetadata;\n    };\n    human: {\n      /** Metadata about the human message */\n      response_metadata: Record<string, unknown>;\n    };\n    system: {\n      /** Metadata about the system message */\n      response_metadata: Record<string, unknown>;\n    };\n    tool: {\n      /** Metadata about the tool message */\n      response_metadata: Record<string, unknown>;\n    };\n  };\n}\n\n/**\n * Takes a message structure type T and normalizes it by merging it with the standard message structure.\n * If T is already a standard message structure, returns T unchanged.\n *\n * This ensures that any custom message structure includes all the standard message structure fields\n * by default while allowing overrides and extensions.\n *\n * @template T - The message structure type to normalize, must extend MessageStructure\n * @returns Either T if it's already a standard structure, or the merged result of T with standard structure\n */\nexport type $NormalizedMessageStructure<T extends MessageStructure> =\n  T extends StandardMessageStructure\n    ? T\n    : $MergeMessageStructure<StandardMessageStructure, T>;\n\n/**\n * Infers the content blocks for a specific message type in a message structure.\n *\n * This utility type extracts the content block type that corresponds to a given message type\n * from the message structure's content definition.\n *\n * @template TStructure - The message structure to infer content from\n * @template TRole - The message role/type to get content for (e.g., \"ai\", \"human\", \"system\", \"tool\")\n * @returns The content block type for the specified type, or never if its not defined in the structure\n *\n * @example\n * ```ts\n * interface MyStructure extends MessageStructure {\n *   content: {\n *     human: ContentBlock.Text;\n *     ai: ContentBlock.Text | ContentBlock.ToolCall;\n *   };\n * }\n *\n * type HumanContent = $InferMessageContentBlocks<MyStructure, \"human\">;\n * // HumanContent = ContentBlock.Text\n *\n * type AIContent = $InferMessageContentBlocks<MyStructure, \"ai\">;\n * // AIContent = ContentBlock.Text | ContentBlock.ToolCall\n * ```\n */\nexport type $InferMessageContentBlocks<\n  TStructure extends MessageStructure,\n  TRole extends MessageType\n> = $NormalizedMessageStructure<TStructure> extends infer S\n  ? S extends MessageStructure\n    ? S[\"content\"] extends infer C\n      ? C extends Record<PropertyKey, ContentBlock>\n        ? TRole extends keyof C\n          ? [$MessageToolCallBlock<TStructure>] extends [never]\n            ? C[TRole]\n            : $MergeDiscriminatedUnion<\n                NonNullable<C[TRole]>,\n                $MessageToolCallBlock<TStructure>,\n                \"type\"\n              >\n          : never\n        : never\n      : never\n    : never\n  : never;\n\n/**\n * Infers the content type for a specific message type from a message structure.\n *\n * This utility type determines the appropriate content type based on the message structure's\n * output version and the specified message type. The content type varies depending on the\n * output version (see {@link MessageOutputVersion})\n *\n * @template TStructure - The message structure to infer content from\n * @template TRole - The message role/type to get content for (e.g., \"ai\", \"human\", \"system\", \"tool\")\n * @returns The content type for the specified role based on the output version\n *\n * @example\n * ```ts\n * interface MyStructure extends MessageStructure {\n *   outputVersion: \"v0\";\n *   content: {\n *     human: ContentBlock.Text;\n *     ai: ContentBlock.Text | ContentBlock.ToolCall;\n *   };\n * }\n *\n * type HumanContentV0 = $InferMessageContent<MyStructure, \"human\">;\n * // HumanContentV0 = string | Array<ContentBlock | ContentBlock.Text>\n *\n * interface MyStructureV1 extends MessageStructure {\n *   outputVersion: \"v1\";\n *   content: {\n *     human: ContentBlock.Text;\n *     ai: ContentBlock.Text | ContentBlock.Reasoning;\n *   };\n * }\n *\n * type HumanContentV1 = $InferMessageContent<MyStructureV1, \"human\">;\n * // HumanContentV1 = ContentBlock.Text\n *\n * type AIContentV1 = $InferMessageContent<MyStructureV1, \"ai\">;\n * // AIContentV1 = ContentBlock.Text | ContentBlock.Reasoning\n * ```\n */\nexport type $InferMessageContent<\n  TStructure extends MessageStructure,\n  TRole extends MessageType\n> = TStructure[\"outputVersion\"] extends \"v1\"\n  ? Array<$InferMessageContentBlocks<TStructure, TRole>>\n  : string | Array<ContentBlock | ContentBlock.Text>;\n\n/**\n * Infers the properties for a specific message type from a message structure.\n *\n * This utility type extracts the properties object that corresponds to a given message type\n * from the message structure's properties definition, and excludes the reserved\n * \"content\" and \"type\" properties to avoid conflicts with the core message structure.\n *\n * If the specified type is not defined in the message structure's properties, it returns\n * a generic Record<string, unknown> type to allow for arbitrary properties.\n *\n * @template TStructure - The message structure to infer properties from\n * @template TRole - The message type/role to get properties for (e.g., \"ai\", \"human\", \"system\", \"tool\")\n * @returns The properties object type for the specified type, excluding \"content\" and \"type\"\n *\n * @example\n * ```ts\n * interface MyStructure extends MessageStructure {\n *   properties: {\n *     ai: {\n *       response_metadata: { model: string };\n *       usage_metadata: { tokens: number };\n *       content: string; // This will be omitted\n *       type: string;    // This will be omitted\n *     };\n *     human: { metadata: Record<string, unknown> };\n *   };\n * }\n *\n * type AIProperties = $InferMessageProperties<MyStructure, \"ai\">;\n * // AIProperties = { response_metadata: { model: string }; usage_metadata: { tokens: number } }\n *\n * type HumanProperties = $InferMessageProperties<MyStructure, \"human\">;\n * // HumanProperties = { metadata: Record<string, unknown> }\n *\n * type SystemProperties = $InferMessageProperties<MyStructure, \"system\">;\n * // SystemProperties = Record<string, unknown> (fallback for undefined role)\n * ```\n */\nexport type $InferMessageProperties<\n  TStructure extends MessageStructure,\n  TRole extends MessageType\n> = $NormalizedMessageStructure<TStructure> extends infer S\n  ? S extends MessageStructure\n    ? S[\"properties\"] extends infer P | undefined\n      ? P extends Record<PropertyKey, unknown>\n        ? TRole extends keyof P\n          ? Omit<P[TRole], \"content\" | \"type\">\n          : Record<string, unknown>\n        : Record<string, unknown>\n      : Record<string, unknown>\n    : never\n  : never;\n\n/**\n * Infers the type of a specific property for a message type from a message structure.\n *\n * This utility type extracts the type of a single property by name from the properties\n * object that corresponds to a given message type. If the specified property key does\n * not exist in the type's properties, it returns `never`.\n *\n * @template TStructure - The message structure to infer the property from\n * @template TRole - The message type/role to get the property for (e.g., \"ai\", \"human\", \"system\", \"tool\")\n * @template K - The property key to extract the type for\n * @returns The type of the specified property, or `never` if the property doesn't exist\n *\n * @example\n * ```ts\n * interface MyStructure extends MessageStructure {\n *   properties: {\n *     ai: {\n *       response_metadata: { model: string; temperature: number };\n *       usage_metadata: { input_tokens: number; output_tokens: number };\n *     };\n *     human: { metadata: Record<string, unknown> };\n *   };\n * }\n *\n * type ResponseMetadata = $InferMessageProperty<MyStructure, \"ai\", \"response_metadata\">;\n * // ResponseMetadata = { model: string; temperature: number }\n *\n * type UsageMetadata = $InferMessageProperty<MyStructure, \"ai\", \"usage_metadata\">;\n * // UsageMetadata = { input_tokens: number; output_tokens: number }\n *\n * type NonExistentProperty = $InferMessageProperty<MyStructure, \"ai\", \"nonExistent\">;\n * // NonExistentProperty = Record<string, unknown>\n *\n * type HumanMetadata = $InferMessageProperty<MyStructure, \"human\", \"metadata\">;\n * // HumanMetadata = Record<string, unknown>\n * ```\n */\nexport type $InferMessageProperty<\n  TStructure extends MessageStructure,\n  TRole extends MessageType,\n  K extends string\n> = K extends keyof $InferMessageProperties<TStructure, TRole>\n  ? $InferMessageProperties<TStructure, TRole>[K]\n  : never;\n\n/**\n * Infers the response metadata type for a specific message type from a message structure.\n *\n * This utility type extracts the `response_metadata` property type for a given message type.\n *\n * @template TStructure - The message structure to infer the response metadata from\n * @template TRole - The message type/role to get the response metadata for (e.g., \"ai\", \"human\", \"system\", \"tool\")\n * @returns The type of the response_metadata property, or `Record<string, unknown>` as fallback\n *\n * @example\n * ```ts\n * interface MyStructure extends MessageStructure {\n *   properties: {\n *     ai: {\n *       response_metadata: { model: string; temperature: number; tokens: number };\n *     };\n *     human: { metadata: Record<string, unknown> };\n *   };\n * }\n *\n * type AIResponseMetadata = $InferResponseMetadata<MyStructure, \"ai\">;\n * // AIResponseMetadata = { model: string; temperature: number; tokens: number }\n *\n * type HumanResponseMetadata = $InferResponseMetadata<MyStructure, \"human\">;\n * // HumanResponseMetadata = Record<string, unknown> (fallback since not defined)\n * ```\n */\nexport type $InferResponseMetadata<\n  TStructure extends MessageStructure,\n  TRole extends MessageType\n> = $InferMessageProperty<\n  TStructure,\n  TRole,\n  \"response_metadata\"\n> extends infer P\n  ? [P] extends [never]\n    ? Record<string, unknown>\n    : P\n  : never;\n\n/**\n * Represents a message object that organizes context for an LLM.\n *\n * @example\n * ```ts\n * // Basic message with text content\n * const message: Message = {\n *   id: \"msg-123\",\n *   name: \"user\",\n *   type: \"human\",\n *   content: [{ type: \"text\", text: \"Hello!\" }]\n * };\n *\n * // Basic ai message interface extension\n * interface MyMessage extends Message<StandardMessageStructure, \"ai\"> {\n *   // Additional AI-specific properties can be added here\n * }\n *`\n * // Custom message structure\n * interface CustomStructure extends MessageStructure {\n *   content: {\n *     ai: ContentBlock.Text | ContentBlock.ToolCall<\"search\", { query: string }>;\n *     human: ContentBlock.Text | ContentBlock.Multimodal.Image;\n *   };\n * }\n *\n * // Create a message with custom structure\n * const message: Message<CustomStructure> = {\n *   id: \"msg-123\",\n *   name: \"user\",\n *   type: \"ai\",\n *   content: [\n *     { type: \"text\", text: \"Hello!\" },\n *     {\n *       type: \"tool_call\",\n *       name: \"search\",\n *       args: { query: \"What is the capital of France?\" }\n *     }\n *   ]\n * };\n * ```\n */\nexport interface Message<\n  TStructure extends MessageStructure = StandardMessageStructure,\n  TRole extends MessageType = MessageType\n> {\n  /** The message type/role */\n  readonly type: TRole;\n  /** Unique identifier for this message */\n  id?: string;\n  /** Optional name/identifier for the entity that created this message */\n  name?: string;\n  /** Array of content blocks that make up the message content */\n  content: $InferMessageContent<TStructure, TRole>;\n  /** Metadata about the message */\n  response_metadata?: Partial<$InferResponseMetadata<TStructure, TRole>>;\n}\n\n/**\n * Type guard to check if a value is a valid Message object.\n *\n * @param message - The value to check\n * @returns true if the value is a valid Message object, false otherwise\n */\nexport function isMessage(message: unknown): message is Message {\n  return (\n    typeof message === \"object\" &&\n    message !== null &&\n    \"type\" in message &&\n    \"content\" in message &&\n    (typeof message.content === \"string\" || Array.isArray(message.content))\n  );\n}\n"],"names":["message: unknown"],"mappings":";;;;;;;;;;AAitBA,SAAgB,UAAUA,OAAAA,EAAsC;IAC9D,OACE,OAAO,YAAY,YACnB,YAAY,QACZ,UAAU,WACV,aAAa,WAAA,CACZ,OAAO,QAAQ,OAAA,KAAY,YAAY,MAAM,OAAA,CAAQ,QAAQ,OAAA,CAAQ;AAEzE","debugId":null}},
    {"offset": {"line": 1380, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/base.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/base.ts"],"sourcesContent":["import { Serializable, SerializedConstructor } from \"../load/serializable.js\";\nimport { ContentBlock } from \"./content/index.js\";\nimport { isDataContentBlock } from \"./content/data.js\";\nimport { convertToV1FromAnthropicInput } from \"./block_translators/anthropic.js\";\nimport { convertToV1FromDataContent } from \"./block_translators/data.js\";\nimport { convertToV1FromChatCompletionsInput } from \"./block_translators/openai.js\";\nimport {\n  $InferMessageContent,\n  $InferResponseMetadata,\n  MessageStructure,\n  MessageType,\n  isMessage,\n  Message,\n} from \"./message.js\";\n\n/** @internal */\nconst MESSAGE_SYMBOL = Symbol.for(\"langchain.message\");\n\nexport interface StoredMessageData {\n  content: string;\n  role: string | undefined;\n  name: string | undefined;\n  tool_call_id: string | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  additional_kwargs?: Record<string, any>;\n  /** Response metadata. For example: response headers, logprobs, token counts, model name. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  response_metadata?: Record<string, any>;\n  id?: string;\n}\n\nexport interface StoredMessage {\n  type: string;\n  data: StoredMessageData;\n}\n\nexport interface StoredGeneration {\n  text: string;\n  message?: StoredMessage;\n}\n\nexport interface StoredMessageV1 {\n  type: string;\n  role: string | undefined;\n  text: string;\n}\n\nexport type MessageContent = string | Array<ContentBlock>;\n\nexport interface FunctionCall {\n  /**\n   * The arguments to call the function with, as generated by the model in JSON\n   * format. Note that the model does not always generate valid JSON, and may\n   * hallucinate parameters not defined by your function schema. Validate the\n   * arguments in your code before calling your function.\n   */\n  arguments: string;\n\n  /**\n   * The name of the function to call.\n   */\n  name: string;\n}\n\nexport type BaseMessageFields<\n  TStructure extends MessageStructure = MessageStructure,\n  TRole extends MessageType = MessageType\n> = {\n  id?: string;\n  name?: string;\n  content?: $InferMessageContent<TStructure, TRole>;\n  contentBlocks?: Array<ContentBlock.Standard>;\n  /** @deprecated */\n  additional_kwargs?: {\n    /**\n     * @deprecated Use \"tool_calls\" field on AIMessages instead\n     */\n    function_call?: FunctionCall;\n    /**\n     * @deprecated Use \"tool_calls\" field on AIMessages instead\n     */\n    tool_calls?: OpenAIToolCall[];\n    [key: string]: unknown;\n  };\n  response_metadata?: Partial<$InferResponseMetadata<TStructure, TRole>>;\n};\n\nexport function mergeContent(\n  firstContent: MessageContent,\n  secondContent: MessageContent\n): MessageContent {\n  // If first content is a string\n  if (typeof firstContent === \"string\") {\n    if (firstContent === \"\") {\n      return secondContent;\n    }\n    if (typeof secondContent === \"string\") {\n      return firstContent + secondContent;\n    } else if (\n      Array.isArray(secondContent) &&\n      secondContent.some((c) => isDataContentBlock(c))\n    ) {\n      return [\n        {\n          type: \"text\",\n          source_type: \"text\",\n          text: firstContent,\n        },\n        ...secondContent,\n      ];\n    } else {\n      return [{ type: \"text\", text: firstContent }, ...secondContent];\n    }\n    // If both are arrays\n  } else if (Array.isArray(secondContent)) {\n    return (\n      _mergeLists(firstContent, secondContent) ?? [\n        ...firstContent,\n        ...secondContent,\n      ]\n    );\n  } else {\n    if (secondContent === \"\") {\n      return firstContent;\n    } else if (\n      Array.isArray(firstContent) &&\n      firstContent.some((c) => isDataContentBlock(c))\n    ) {\n      return [\n        ...firstContent,\n        {\n          type: \"file\",\n          source_type: \"text\",\n          text: secondContent,\n        },\n      ];\n    } else {\n      return [...firstContent, { type: \"text\", text: secondContent }];\n    }\n  }\n}\n\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(\n  left?: \"success\" | \"error\",\n  right?: \"success\" | \"error\"\n): \"success\" | \"error\" | undefined {\n  if (left === \"error\" || right === \"error\") {\n    return \"error\";\n  }\n  return \"success\";\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj: any, depthLimit: number): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function helper(obj: any, currentDepth: number): any {\n    if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n      return obj;\n    }\n    if (currentDepth >= depthLimit) {\n      if (Array.isArray(obj)) {\n        return \"[Array]\";\n      }\n      return \"[Object]\";\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map((item) => helper(item, currentDepth + 1));\n    }\n\n    const result: Record<string, unknown> = {};\n    for (const key of Object.keys(obj)) {\n      result[key] = helper(obj[key], currentDepth + 1);\n    }\n    return result;\n  }\n\n  return JSON.stringify(helper(obj, 0), null, 2);\n}\n\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport abstract class BaseMessage<\n    TStructure extends MessageStructure = MessageStructure,\n    TRole extends MessageType = MessageType\n  >\n  extends Serializable\n  implements Message<TStructure, TRole>\n{\n  lc_namespace = [\"langchain_core\", \"messages\"];\n\n  lc_serializable = true;\n\n  get lc_aliases(): Record<string, string> {\n    // exclude snake case conversion to pascal case\n    return {\n      additional_kwargs: \"additional_kwargs\",\n      response_metadata: \"response_metadata\",\n    };\n  }\n\n  readonly [MESSAGE_SYMBOL] = true as const;\n\n  abstract readonly type: TRole;\n\n  id?: string;\n\n  name?: string;\n\n  content: $InferMessageContent<TStructure, TRole>;\n\n  additional_kwargs: NonNullable<\n    BaseMessageFields<TStructure, TRole>[\"additional_kwargs\"]\n  >;\n\n  response_metadata: NonNullable<\n    BaseMessageFields<TStructure, TRole>[\"response_metadata\"]\n  >;\n\n  /**\n   * @deprecated Use .getType() instead or import the proper typeguard.\n   * For example:\n   *\n   * ```ts\n   * import { isAIMessage } from \"@langchain/core/messages\";\n   *\n   * const message = new AIMessage(\"Hello!\");\n   * isAIMessage(message); // true\n   * ```\n   */\n  _getType(): MessageType {\n    return this.type;\n  }\n\n  /**\n   * @deprecated Use .type instead\n   * The type of the message.\n   */\n  getType(): MessageType {\n    return this._getType();\n  }\n\n  constructor(\n    arg:\n      | $InferMessageContent<TStructure, TRole>\n      | BaseMessageFields<TStructure, TRole>\n  ) {\n    const fields: BaseMessageFields<TStructure, TRole> =\n      typeof arg === \"string\" || Array.isArray(arg) ? { content: arg } : arg;\n    if (!fields.additional_kwargs) {\n      fields.additional_kwargs = {};\n    }\n    if (!fields.response_metadata) {\n      fields.response_metadata = {};\n    }\n    super(fields);\n    this.name = fields.name;\n    if (fields.content === undefined && fields.contentBlocks !== undefined) {\n      this.content = fields.contentBlocks as $InferMessageContent<\n        TStructure,\n        TRole\n      >;\n      this.response_metadata = {\n        output_version: \"v1\",\n        ...fields.response_metadata,\n      };\n    } else if (fields.content !== undefined) {\n      this.content = fields.content ?? [];\n      this.response_metadata = fields.response_metadata;\n    } else {\n      this.content = [] as $InferMessageContent<TStructure, TRole>;\n      this.response_metadata = fields.response_metadata;\n    }\n    this.additional_kwargs = fields.additional_kwargs;\n    this.id = fields.id;\n  }\n\n  /** Get text content of the message. */\n  get text(): string {\n    if (typeof this.content === \"string\") {\n      return this.content;\n    }\n    if (!Array.isArray(this.content)) return \"\";\n    return this.content\n      .map((c) => {\n        if (typeof c === \"string\") return c;\n        if (c.type === \"text\") return c.text;\n        return \"\";\n      })\n      .join(\"\");\n  }\n\n  get contentBlocks(): Array<ContentBlock.Standard> {\n    const blocks: Array<ContentBlock> =\n      typeof this.content === \"string\"\n        ? [{ type: \"text\", text: this.content }]\n        : this.content;\n    const parsingSteps = [\n      convertToV1FromDataContent,\n      convertToV1FromChatCompletionsInput,\n      convertToV1FromAnthropicInput,\n    ];\n    const parsedBlocks = parsingSteps.reduce(\n      (blocks, step) => step(blocks),\n      blocks\n    );\n    return parsedBlocks as Array<ContentBlock.Standard>;\n  }\n\n  toDict(): StoredMessage {\n    return {\n      type: this.getType(),\n      data: (this.toJSON() as SerializedConstructor)\n        .kwargs as StoredMessageData,\n    };\n  }\n\n  static lc_name() {\n    return \"BaseMessage\";\n  }\n\n  // Can't be protected for silly reasons\n  get _printableFields(): Record<string, unknown> {\n    return {\n      id: this.id,\n      content: this.content,\n      name: this.name,\n      additional_kwargs: this.additional_kwargs,\n      response_metadata: this.response_metadata,\n    };\n  }\n\n  static isInstance(obj: unknown): obj is BaseMessage {\n    return (\n      typeof obj === \"object\" &&\n      obj !== null &&\n      MESSAGE_SYMBOL in obj &&\n      obj[MESSAGE_SYMBOL] === true &&\n      isMessage(obj)\n    );\n  }\n\n  // this private method is used to update the ID for the runtime\n  // value as well as in lc_kwargs for serialisation\n  _updateId(value: string | undefined) {\n    this.id = value;\n\n    // lc_attributes wouldn't work here, because jest compares the\n    // whole object\n    this.lc_kwargs.id = value;\n  }\n\n  get [Symbol.toStringTag]() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (this.constructor as any).lc_name();\n  }\n\n  // Override the default behavior of console.log\n  [Symbol.for(\"nodejs.util.inspect.custom\")](depth: number | null) {\n    if (depth === null) {\n      return this;\n    }\n    const printable = stringifyWithDepthLimit(\n      this._printableFields,\n      Math.max(4, depth)\n    );\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return `${(this.constructor as any).lc_name()} ${printable}`;\n  }\n}\n\n/**\n * @deprecated Use \"tool_calls\" field on AIMessages instead\n */\nexport type OpenAIToolCall = {\n  /**\n   * The ID of the tool call.\n   */\n  id: string;\n\n  /**\n   * The function that the model called.\n   */\n  function: FunctionCall;\n\n  /**\n   * The type of the tool. Currently, only `function` is supported.\n   */\n  type: \"function\";\n\n  index?: number;\n};\n\nexport function isOpenAIToolCallArray(\n  value?: unknown\n): value is OpenAIToolCall[] {\n  return (\n    Array.isArray(value) &&\n    value.every((v) => typeof (v as OpenAIToolCall).index === \"number\")\n  );\n}\n\nexport function _mergeDicts(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  left: Record<string, any> = {},\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  right: Record<string, any> = {}\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Record<string, any> {\n  const merged = { ...left };\n  for (const [key, value] of Object.entries(right)) {\n    if (merged[key] == null) {\n      merged[key] = value;\n    } else if (value == null) {\n      continue;\n    } else if (\n      typeof merged[key] !== typeof value ||\n      Array.isArray(merged[key]) !== Array.isArray(value)\n    ) {\n      throw new Error(\n        `field[${key}] already exists in the message chunk, but with a different type.`\n      );\n    } else if (typeof merged[key] === \"string\") {\n      if (key === \"type\") {\n        // Do not merge 'type' fields\n        continue;\n      } else if (\n        [\"id\", \"name\", \"output_version\", \"model_provider\"].includes(key)\n      ) {\n        // Keep the incoming value for these fields\n        merged[key] = value;\n      } else {\n        merged[key] += value;\n      }\n    } else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n      merged[key] = _mergeDicts(merged[key], value);\n    } else if (Array.isArray(merged[key])) {\n      merged[key] = _mergeLists(merged[key], value);\n    } else if (merged[key] === value) {\n      continue;\n    } else {\n      console.warn(\n        `field[${key}] already exists in this message chunk and value has unsupported type.`\n      );\n    }\n  }\n  return merged;\n}\n\nexport function _mergeLists<Content extends ContentBlock>(\n  left?: Content[],\n  right?: Content[]\n): Content[] | undefined {\n  if (left === undefined && right === undefined) {\n    return undefined;\n  } else if (left === undefined || right === undefined) {\n    return left || right;\n  } else {\n    const merged = [...left];\n    for (const item of right) {\n      if (\n        typeof item === \"object\" &&\n        item !== null &&\n        \"index\" in item &&\n        typeof item.index === \"number\"\n      ) {\n        const toMerge = merged.findIndex((leftItem) => {\n          const isObject = typeof leftItem === \"object\";\n          const indiciesMatch =\n            \"index\" in leftItem && leftItem.index === item.index;\n          const idsMatch =\n            \"id\" in leftItem && \"id\" in item && leftItem?.id === item?.id;\n          const eitherItemMissingID =\n            !(\"id\" in leftItem) ||\n            !leftItem?.id ||\n            !(\"id\" in item) ||\n            !item?.id;\n          return isObject && indiciesMatch && (idsMatch || eitherItemMissingID);\n        });\n        if (\n          toMerge !== -1 &&\n          typeof merged[toMerge] === \"object\" &&\n          merged[toMerge] !== null\n        ) {\n          merged[toMerge] = _mergeDicts(\n            merged[toMerge] as Record<string, unknown>,\n            item as Record<string, unknown>\n          ) as Content;\n        } else {\n          merged.push(item);\n        }\n      } else if (\n        typeof item === \"object\" &&\n        item !== null &&\n        \"text\" in item &&\n        item.text === \"\"\n      ) {\n        // No-op - skip empty text blocks\n        continue;\n      } else {\n        merged.push(item);\n      }\n    }\n    return merged;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj<T = any>(\n  left: T | undefined,\n  right: T | undefined\n): T {\n  if (!left && !right) {\n    throw new Error(\"Cannot merge two undefined objects.\");\n  }\n  if (!left || !right) {\n    return left || (right as T);\n  } else if (typeof left !== typeof right) {\n    throw new Error(\n      `Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`\n    );\n  } else if (typeof left === \"string\" && typeof right === \"string\") {\n    return (left + right) as T;\n  } else if (Array.isArray(left) && Array.isArray(right)) {\n    return _mergeLists(left, right) as T;\n  } else if (typeof left === \"object\" && typeof right === \"object\") {\n    return _mergeDicts(left, right) as T;\n  } else if (left === right) {\n    return left;\n  } else {\n    throw new Error(\n      `Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`\n    );\n  }\n}\n\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport abstract class BaseMessageChunk<\n  TStructure extends MessageStructure = MessageStructure,\n  TRole extends MessageType = MessageType\n> extends BaseMessage<TStructure, TRole> {\n  abstract concat(chunk: BaseMessageChunk): BaseMessageChunk<TStructure, TRole>;\n\n  static isInstance(obj: unknown): obj is BaseMessageChunk {\n    return (\n      super.isInstance(obj) &&\n      \"concat\" in obj &&\n      typeof obj.concat === \"function\"\n    );\n  }\n}\n\nexport type MessageFieldWithRole = {\n  role: MessageType;\n  content: MessageContent;\n  name?: string;\n} & Record<string, unknown>;\n\nexport function _isMessageFieldWithRole(\n  x: BaseMessageLike\n): x is MessageFieldWithRole {\n  return typeof (x as MessageFieldWithRole).role === \"string\";\n}\n\nexport type BaseMessageLike =\n  | BaseMessage\n  | MessageFieldWithRole\n  | [MessageType, MessageContent]\n  | string\n  /**\n   * @deprecated Specifying \"type\" is deprecated and will be removed in 0.4.0.\n   */\n  | ({\n      type: MessageType | \"user\" | \"assistant\" | \"placeholder\";\n    } & BaseMessageFields &\n      Record<string, unknown>)\n  | SerializedConstructor;\n\n/**\n * @deprecated Use {@link BaseMessage.isInstance} instead\n */\nexport function isBaseMessage(\n  messageLike?: unknown\n): messageLike is BaseMessage {\n  return typeof (messageLike as BaseMessage)?._getType === \"function\";\n}\n\n/**\n * @deprecated Use {@link BaseMessageChunk.isInstance} instead\n */\nexport function isBaseMessageChunk(\n  messageLike?: unknown\n): messageLike is BaseMessageChunk {\n  return (\n    isBaseMessage(messageLike) &&\n    typeof (messageLike as BaseMessageChunk).concat === \"function\"\n  );\n}\n"],"names":["firstContent: MessageContent","secondContent: MessageContent","left?: \"success\" | \"error\"","right?: \"success\" | \"error\"","obj: any","depthLimit: number","currentDepth: number","obj","result: Record<string, unknown>","arg:\n      | $InferMessageContent<TStructure, TRole>\n      | BaseMessageFields<TStructure, TRole>","fields: BaseMessageFields<TStructure, TRole>","blocks: Array<ContentBlock>","blocks","obj: unknown","value: string | undefined","depth: number | null","value?: unknown","left: Record<string, any>","right: Record<string, any>","left?: Content[]","right?: Content[]","left: T | undefined","right: T | undefined","x: BaseMessageLike","messageLike?: unknown"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/tool.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/tool.ts"],"sourcesContent":["import {\n  BaseMessage,\n  BaseMessageChunk,\n  type BaseMessageFields,\n  mergeContent,\n  _mergeDicts,\n  _mergeObj,\n  _mergeStatus,\n} from \"./base.js\";\nimport { $InferMessageContent, MessageStructure } from \"./message.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface ToolMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"tool\"> {\n  /**\n   * Artifact of the Tool execution which is not meant to be sent to the model.\n   *\n   * Should only be specified if it is different from the message content, e.g. if only\n   * a subset of the full tool output is being passed as message content but the full\n   * output is needed in other parts of the code.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  artifact?: any;\n  tool_call_id: string;\n  status?: \"success\" | \"error\";\n  metadata?: Record<string, unknown>;\n}\n\n/**\n * Marker parameter for objects that tools can return directly.\n *\n * If a custom BaseTool is invoked with a ToolCall and the output of custom code is\n * not an instance of DirectToolOutput, the output will automatically be coerced to\n * a string and wrapped in a ToolMessage.\n */\nexport interface DirectToolOutput {\n  readonly lc_direct_tool_output: true;\n}\n\nexport function isDirectToolOutput(x: unknown): x is DirectToolOutput {\n  return (\n    x != null &&\n    typeof x === \"object\" &&\n    \"lc_direct_tool_output\" in x &&\n    x.lc_direct_tool_output === true\n  );\n}\n\n/**\n * Represents a tool message in a conversation.\n */\nexport class ToolMessage<TStructure extends MessageStructure = MessageStructure>\n  extends BaseMessage<TStructure, \"tool\">\n  implements DirectToolOutput\n{\n  static lc_name() {\n    return \"ToolMessage\";\n  }\n\n  get lc_aliases(): Record<string, string> {\n    // exclude snake case conversion to pascal case\n    return { tool_call_id: \"tool_call_id\" };\n  }\n\n  lc_direct_tool_output = true as const;\n\n  readonly type = \"tool\" as const;\n\n  /**\n   * Status of the tool invocation.\n   * @version 0.2.19\n   */\n  status?: \"success\" | \"error\";\n\n  tool_call_id: string;\n\n  metadata?: Record<string, unknown>;\n\n  /**\n   * Artifact of the Tool execution which is not meant to be sent to the model.\n   *\n   * Should only be specified if it is different from the message content, e.g. if only\n   * a subset of the full tool output is being passed as message content but the full\n   * output is needed in other parts of the code.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  artifact?: any;\n\n  constructor(\n    fields: $InferMessageContent<TStructure, \"tool\"> | ToolMessageFields,\n    tool_call_id: string,\n    name?: string\n  );\n\n  constructor(fields: ToolMessageFields<TStructure>);\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"tool\">\n      | ToolMessageFields<TStructure>,\n    tool_call_id?: string,\n    name?: string\n  ) {\n    const toolMessageFields: ToolMessageFields<TStructure> =\n      typeof fields === \"string\" || Array.isArray(fields)\n        ? { content: fields, name, tool_call_id: tool_call_id! }\n        : fields;\n    super(toolMessageFields);\n    this.tool_call_id = toolMessageFields.tool_call_id;\n    this.artifact = toolMessageFields.artifact;\n    this.status = toolMessageFields.status;\n    this.metadata = toolMessageFields.metadata;\n  }\n\n  static isInstance(message: unknown): message is ToolMessage {\n    return super.isInstance(message) && message.type === \"tool\";\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      tool_call_id: this.tool_call_id,\n      artifact: this.artifact,\n    };\n  }\n}\n\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nexport class ToolMessageChunk<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageChunk<TStructure, \"tool\"> {\n  readonly type = \"tool\" as const;\n\n  tool_call_id: string;\n\n  /**\n   * Status of the tool invocation.\n   * @version 0.2.19\n   */\n  status?: \"success\" | \"error\";\n\n  /**\n   * Artifact of the Tool execution which is not meant to be sent to the model.\n   *\n   * Should only be specified if it is different from the message content, e.g. if only\n   * a subset of the full tool output is being passed as message content but the full\n   * output is needed in other parts of the code.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  artifact?: any;\n\n  constructor(fields: ToolMessageFields<TStructure>) {\n    super(fields);\n    this.tool_call_id = fields.tool_call_id;\n    this.artifact = fields.artifact;\n    this.status = fields.status;\n  }\n\n  static lc_name() {\n    return \"ToolMessageChunk\";\n  }\n\n  concat(chunk: ToolMessageChunk<TStructure>) {\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: _mergeDicts(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      artifact: _mergeObj(this.artifact, chunk.artifact),\n      tool_call_id: this.tool_call_id,\n      id: this.id ?? chunk.id,\n      status: _mergeStatus(this.status, chunk.status),\n    });\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      tool_call_id: this.tool_call_id,\n      artifact: this.artifact,\n    };\n  }\n}\n\nexport interface ToolCall<\n  TName extends string = string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  TArgs extends Record<string, any> = Record<string, any>\n> {\n  readonly type?: \"tool_call\";\n  /**\n   * If provided, an identifier associated with the tool call\n   */\n  id?: string;\n  /**\n   * The name of the tool being called\n   */\n  name: TName;\n  /**\n   * The arguments to the tool call\n   */\n  args: TArgs;\n}\n\n/**\n * A chunk of a tool call (e.g., as part of a stream).\n * When merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\n * all string attributes are concatenated. Chunks are only merged if their\n * values of `index` are equal and not None.\n *\n * @example\n * ```ts\n * const leftChunks = [\n *   {\n *     name: \"foo\",\n *     args: '{\"a\":',\n *     index: 0\n *   }\n * ];\n *\n * const leftAIMessageChunk = new AIMessageChunk({\n *   content: \"\",\n *   tool_call_chunks: leftChunks\n * });\n *\n * const rightChunks = [\n *   {\n *     name: undefined,\n *     args: '1}',\n *     index: 0\n *   }\n * ];\n *\n * const rightAIMessageChunk = new AIMessageChunk({\n *   content: \"\",\n *   tool_call_chunks: rightChunks\n * });\n *\n * const result = leftAIMessageChunk.concat(rightAIMessageChunk);\n * // result.tool_call_chunks is equal to:\n * // [\n * //   {\n * //     name: \"foo\",\n * //     args: '{\"a\":1}'\n * //     index: 0\n * //   }\n * // ]\n * ```\n */\nexport interface ToolCallChunk<TName extends string = string> {\n  readonly type?: \"tool_call_chunk\";\n  /**\n   * If provided, a substring of an identifier for the tool call\n   */\n  id?: string;\n  /**\n   * If provided, a substring of the name of the tool to be called\n   */\n  name?: TName;\n  /**\n   * If provided, a JSON substring of the arguments to the tool call\n   */\n  args?: string;\n  /**\n   * If provided, the index of the tool call in a sequence\n   */\n  index?: number;\n}\n\nexport interface InvalidToolCall<TName extends string = string> {\n  readonly type?: \"invalid_tool_call\";\n  /**\n   * If provided, an identifier associated with the tool call\n   */\n  id?: string;\n  /**\n      /**\n     * The name of the tool being called\n     */\n  name?: TName;\n  /**\n   * The arguments to the tool call\n   */\n  args?: string;\n  /**\n   * An error message associated with the tool call\n   */\n  error?: string;\n  /**\n   * Index of block in aggregate response\n   */\n  index?: string | number;\n}\n\nexport function defaultToolCallParser(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rawToolCalls: Record<string, any>[]\n): [ToolCall[], InvalidToolCall[]] {\n  const toolCalls: ToolCall[] = [];\n  const invalidToolCalls: InvalidToolCall[] = [];\n  for (const toolCall of rawToolCalls) {\n    if (!toolCall.function) {\n      continue;\n    } else {\n      const functionName = toolCall.function.name;\n      try {\n        const functionArgs = JSON.parse(toolCall.function.arguments);\n        toolCalls.push({\n          name: functionName || \"\",\n          args: functionArgs || {},\n          id: toolCall.id,\n        });\n      } catch {\n        invalidToolCalls.push({\n          name: functionName,\n          args: toolCall.function.arguments,\n          id: toolCall.id,\n          error: \"Malformed args.\",\n        });\n      }\n    }\n  }\n  return [toolCalls, invalidToolCalls];\n}\n\n/**\n * @deprecated Use {@link ToolMessage.isInstance} instead\n */\nexport function isToolMessage(x: unknown): x is ToolMessage {\n  return (\n    typeof x === \"object\" &&\n    x !== null &&\n    \"getType\" in x &&\n    typeof x.getType === \"function\" &&\n    x.getType() === \"tool\"\n  );\n}\n\n/**\n * @deprecated Use {@link ToolMessageChunk.isInstance} instead\n */\nexport function isToolMessageChunk(x: BaseMessageChunk): x is ToolMessageChunk {\n  return x._getType() === \"tool\";\n}\n"],"names":["x: unknown","fields:\n      | $InferMessageContent<TStructure, \"tool\">\n      | ToolMessageFields<TStructure>","tool_call_id?: string","name?: string","toolMessageFields: ToolMessageFields<TStructure>","message: unknown","fields: ToolMessageFields<TStructure>","chunk: ToolMessageChunk<TStructure>","rawToolCalls: Record<string, any>[]","toolCalls: ToolCall[]","invalidToolCalls: InvalidToolCall[]","x: BaseMessageChunk"],"mappings":"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","debugId":null}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/json.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/json.ts"],"sourcesContent":["export function parseJsonMarkdown(s: string, parser = parsePartialJson) {\n  // eslint-disable-next-line no-param-reassign\n  s = s.trim();\n\n  const firstFenceIndex = s.indexOf(\"```\");\n  if (firstFenceIndex === -1) {\n    return parser(s);\n  }\n\n  let contentAfterFence = s.substring(firstFenceIndex + 3);\n\n  if (contentAfterFence.startsWith(\"json\\n\")) {\n    contentAfterFence = contentAfterFence.substring(5);\n  } else if (contentAfterFence.startsWith(\"json\")) {\n    contentAfterFence = contentAfterFence.substring(4);\n  } else if (contentAfterFence.startsWith(\"\\n\")) {\n    contentAfterFence = contentAfterFence.substring(1);\n  }\n\n  const closingFenceIndex = contentAfterFence.indexOf(\"```\");\n  let finalContent = contentAfterFence;\n  if (closingFenceIndex !== -1) {\n    finalContent = contentAfterFence.substring(0, closingFenceIndex);\n  }\n\n  return parser(finalContent.trim());\n}\n\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s: string) {\n  // If the input is undefined, return null to indicate failure.\n  if (typeof s === \"undefined\") {\n    return null;\n  }\n\n  // Attempt to parse the string as-is.\n  try {\n    return JSON.parse(s);\n  } catch {\n    // Pass\n  }\n\n  // Initialize variables.\n  let new_s = \"\";\n  const stack = [];\n  let isInsideString = false;\n  let escaped = false;\n\n  // Process each character in the string one at a time.\n  for (let char of s) {\n    if (isInsideString) {\n      if (char === '\"' && !escaped) {\n        isInsideString = false;\n      } else if (char === \"\\n\" && !escaped) {\n        char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n      } else if (char === \"\\\\\") {\n        escaped = !escaped;\n      } else {\n        escaped = false;\n      }\n    } else {\n      if (char === '\"') {\n        isInsideString = true;\n        escaped = false;\n      } else if (char === \"{\") {\n        stack.push(\"}\");\n      } else if (char === \"[\") {\n        stack.push(\"]\");\n      } else if (char === \"}\" || char === \"]\") {\n        if (stack && stack[stack.length - 1] === char) {\n          stack.pop();\n        } else {\n          // Mismatched closing character; the input is malformed.\n          return null;\n        }\n      }\n    }\n\n    // Append the processed character to the new string.\n    new_s += char;\n  }\n\n  // If we're still inside a string at the end of processing,\n  // we need to close the string.\n  if (isInsideString) {\n    new_s += '\"';\n  }\n\n  // Close any remaining open structures in the reverse order that they were opened.\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    new_s += stack[i];\n  }\n\n  // Attempt to parse the modified string as JSON.\n  try {\n    return JSON.parse(new_s);\n  } catch {\n    // If we still can't parse the string as JSON, return null to indicate failure.\n    return null;\n  }\n}\n"],"names":["s: string"],"mappings":";;;;;;;AAAA,SAAgB,kBAAkBA,CAAAA,EAAW,SAAS,gBAAA,EAAkB;IAEtE,IAAI,EAAE,IAAA,EAAM;IAEZ,MAAM,kBAAkB,EAAE,OAAA,CAAQ,MAAM;IACxC,IAAI,oBAAoB,CAAA,EACtB,CAAA,OAAO,OAAO,EAAE;IAGlB,IAAI,oBAAoB,EAAE,SAAA,CAAU,kBAAkB,EAAE;IAExD,IAAI,kBAAkB,UAAA,CAAW,SAAS,EACxC,oBAAoB,kBAAkB,SAAA,CAAU,EAAE;aACzC,kBAAkB,UAAA,CAAW,OAAO,EAC7C,oBAAoB,kBAAkB,SAAA,CAAU,EAAE;aACzC,kBAAkB,UAAA,CAAW,KAAK,EAC3C,oBAAoB,kBAAkB,SAAA,CAAU,EAAE;IAGpD,MAAM,oBAAoB,kBAAkB,OAAA,CAAQ,MAAM;IAC1D,IAAI,eAAe;IACnB,IAAI,sBAAsB,CAAA,GACxB,eAAe,kBAAkB,SAAA,CAAU,GAAG,kBAAkB;IAGlE,OAAO,OAAO,aAAa,IAAA,EAAM,CAAC;AACnC;AAID,SAAgB,iBAAiBA,CAAAA,EAAW;IAE1C,IAAI,OAAO,MAAM,YACf,CAAA,OAAO;IAIT,IAAI;QACF,OAAO,KAAK,KAAA,CAAM,EAAE;IACrB,EAAA,OAAO,CAEP;IAGD,IAAI,QAAQ;IACZ,MAAM,QAAQ,CAAE,CAAA;IAChB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IAGd,KAAK,IAAI,QAAQ,EAAG;QAClB,IAAI,eACF,CAAA,IAAI,SAAS,QAAO,CAAC,SACnB,iBAAiB;iBACR,SAAS,QAAQ,CAAC,SAC3B,OAAO;iBACE,SAAS,MAClB,UAAU,CAAC;aAEX,UAAU;iBAGR,SAAS,MAAK;YAChB,iBAAiB;YACjB,UAAU;QACX,OAAA,IAAU,SAAS,KAClB,MAAM,IAAA,CAAK,IAAI;iBACN,SAAS,KAClB,MAAM,IAAA,CAAK,IAAI;iBACN,SAAS,OAAO,SAAS,IAClC,CAAA,IAAI,SAAS,KAAA,CAAM,MAAM,MAAA,GAAS,EAAA,KAAO,MACvC,MAAM,GAAA,EAAK;aAGX,OAAO;QAMb,SAAS;IACV;IAID,IAAI,gBACF,SAAS;IAIX,IAAK,IAAI,IAAI,MAAM,MAAA,GAAS,GAAG,KAAK,GAAG,KAAK,EAC1C,SAAS,KAAA,CAAM,EAAA;IAIjB,IAAI;QACF,OAAO,KAAK,KAAA,CAAM,MAAM;IACzB,EAAA,OAAO;QAEN,OAAO;IACR;AACF","debugId":null}},
    {"offset": {"line": 1920, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/bedrock_converse.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/bedrock_converse.ts"],"sourcesContent":["import { AIMessage } from \"../ai.js\";\nimport { ContentBlock } from \"../content/index.js\";\nimport { KNOWN_BLOCK_TYPES } from \"../content/tools.js\";\nimport type { StandardContentBlockTranslator } from \"./index.js\";\nimport {\n  _isArray,\n  _isBytesArray,\n  _isContentBlock,\n  _isNumber,\n  _isObject,\n  _isString,\n  iife,\n} from \"./utils.js\";\n\n// see `/libs/providers/langchain-aws/src/utils/compat.ts:convertFileFormatToMimeType`\nfunction convertFileFormatToMimeType(format: string): string {\n  switch (format) {\n    // DocumentBlock\n    case \"csv\":\n      return \"text/csv\";\n    case \"doc\":\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    case \"docx\":\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    case \"html\":\n      return \"text/html\";\n    case \"md\":\n      return \"text/markdown\";\n    case \"pdf\":\n      return \"application/pdf\";\n    case \"txt\":\n      return \"text/plain\";\n    case \"xls\":\n      return \"application/vnd.ms-excel\";\n    case \"xlsx\":\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    // ImageBlock\n    case \"gif\":\n      return \"image/gif\";\n    case \"jpeg\":\n      return \"image/jpeg\";\n    case \"jpg\":\n      return \"image/jpeg\";\n    case \"png\":\n      return \"image/png\";\n    case \"webp\":\n      return \"image/webp\";\n    // VideoBlock\n    case \"flv\":\n      return \"video/flv\";\n    case \"mkv\":\n      return \"video/mkv\";\n    case \"mov\":\n      return \"video/mov\";\n    case \"mp4\":\n      return \"video/mp4\";\n    case \"mpeg\":\n      return \"video/mpeg\";\n    case \"mpg\":\n      return \"video/mpg\";\n    case \"three_gp\":\n      return \"video/three_gp\";\n    case \"webm\":\n      return \"video/webm\";\n    case \"wmv\":\n      return \"video/wmv\";\n    default:\n      return \"application/octet-stream\";\n  }\n}\n\nfunction convertConverseDocumentBlock(\n  block: ContentBlock\n): ContentBlock.Standard {\n  if (_isObject(block.document) && _isObject(block.document.source)) {\n    const format =\n      _isObject(block.document) && _isString(block.document.format)\n        ? block.document.format\n        : \"\";\n    const mimeType = convertFileFormatToMimeType(format);\n\n    if (_isObject(block.document.source)) {\n      if (\n        _isObject(block.document.source.s3Location) &&\n        _isString(block.document.source.s3Location.uri)\n      ) {\n        return {\n          type: \"file\",\n          mimeType,\n          fileId: block.document.source.s3Location.uri,\n        };\n      }\n      if (_isBytesArray(block.document.source.bytes)) {\n        return {\n          type: \"file\",\n          mimeType,\n          data: block.document.source.bytes,\n        };\n      }\n      if (_isString(block.document.source.text)) {\n        return {\n          type: \"file\",\n          mimeType,\n          data: Buffer.from(block.document.source.text).toString(\"base64\"),\n        };\n      }\n      if (_isArray(block.document.source.content)) {\n        const data = block.document.source.content.reduce(\n          (acc: string, item) => {\n            if (_isObject(item) && _isString(item.text)) {\n              return acc + item.text;\n            }\n            return acc;\n          },\n          \"\"\n        );\n        return {\n          type: \"file\",\n          mimeType,\n          data,\n        };\n      }\n    }\n  }\n  return { type: \"non_standard\", value: block };\n}\n\nfunction convertConverseImageBlock(block: ContentBlock): ContentBlock.Standard {\n  if (_isContentBlock(block, \"image\") && _isObject(block.image)) {\n    const format =\n      _isObject(block.image) && _isString(block.image.format)\n        ? block.image.format\n        : \"\";\n    const mimeType = convertFileFormatToMimeType(format);\n\n    if (_isObject(block.image.source)) {\n      if (\n        _isObject(block.image.source.s3Location) &&\n        _isString(block.image.source.s3Location.uri)\n      ) {\n        return {\n          type: \"image\",\n          mimeType,\n          fileId: block.image.source.s3Location.uri,\n        };\n      }\n      if (_isBytesArray(block.image.source.bytes)) {\n        return {\n          type: \"image\",\n          mimeType,\n          data: block.image.source.bytes,\n        };\n      }\n    }\n  }\n  return { type: \"non_standard\", value: block };\n}\n\nfunction convertConverseVideoBlock(block: ContentBlock): ContentBlock.Standard {\n  if (_isContentBlock(block, \"video\") && _isObject(block.video)) {\n    const format =\n      _isObject(block.video) && _isString(block.video.format)\n        ? block.video.format\n        : \"\";\n    const mimeType = convertFileFormatToMimeType(format);\n\n    if (_isObject(block.video.source)) {\n      if (\n        _isObject(block.video.source.s3Location) &&\n        _isString(block.video.source.s3Location.uri)\n      ) {\n        return {\n          type: \"video\",\n          mimeType,\n          fileId: block.video.source.s3Location.uri,\n        };\n      }\n      if (_isBytesArray(block.video.source.bytes)) {\n        return {\n          type: \"video\",\n          mimeType,\n          data: block.video.source.bytes,\n        };\n      }\n    }\n  }\n  return { type: \"non_standard\", value: block };\n}\n\nexport function convertToV1FromChatBedrockConverseInput(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    const blocks = content.map((block) => {\n      if (_isContentBlock(block, \"non_standard\") && \"value\" in block) {\n        return block.value as ContentBlock;\n      }\n      return block;\n    });\n    for (const block of blocks) {\n      if (_isContentBlock(block, \"text\") && _isString(block.text)) {\n        yield { type: \"text\", text: block.text };\n        continue;\n      } else if (\n        _isContentBlock(block, \"document\") &&\n        _isObject(block.document)\n      ) {\n        yield convertConverseDocumentBlock(block);\n        continue;\n      } else if (_isContentBlock(block, \"image\") && _isObject(block.image)) {\n        yield convertConverseImageBlock(block);\n        continue;\n      } else if (_isContentBlock(block, \"video\") && _isObject(block.video)) {\n        yield convertConverseVideoBlock(block);\n        continue;\n      }\n      if (KNOWN_BLOCK_TYPES.includes(block.type)) {\n        yield block as ContentBlock.Standard;\n      } else {\n        yield { type: \"non_standard\", value: block };\n      }\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nfunction convertToV1FromChatBedrockConverseMessage(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  // see `/libs/providers/langchain-aws/src/utils/message_outputs.ts:convertConverseMessageToLangChainMessage`\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    for (const block of content) {\n      if (_isContentBlock(block, \"cache_point\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      } else if (\n        _isContentBlock(block, \"citations_content\") &&\n        _isObject(block.citationsContent)\n      ) {\n        const text = _isArray(block.citationsContent.content)\n          ? block.citationsContent.content.reduce((acc: string, item) => {\n              if (_isObject(item) && _isString(item.text)) {\n                return acc + item.text;\n              }\n              return acc;\n            }, \"\")\n          : \"\";\n        const annotations = _isArray(block.citationsContent.citations)\n          ? block.citationsContent.citations.reduce(\n              (acc: Array<ContentBlock.Citation>, item) => {\n                if (_isObject(item)) {\n                  const citedText = _isArray(item.sourceContent)\n                    ? item.sourceContent.reduce((acc: string, item) => {\n                        if (_isObject(item) && _isString(item.text)) {\n                          return acc + item.text;\n                        }\n                        return acc;\n                      }, \"\")\n                    : \"\";\n                  const properties = iife(() => {\n                    if (_isObject(item.location)) {\n                      const location =\n                        item.location.documentChar ||\n                        item.location.documentPage ||\n                        item.location.documentChunk;\n                      if (_isObject(location)) {\n                        return {\n                          source: _isNumber(location.documentIndex)\n                            ? location.documentIndex.toString()\n                            : undefined,\n                          startIndex: _isNumber(location.start)\n                            ? location.start\n                            : undefined,\n                          endIndex: _isNumber(location.end)\n                            ? location.end\n                            : undefined,\n                        };\n                      }\n                    }\n                    return {};\n                  });\n                  acc.push({ type: \"citation\", citedText, ...properties });\n                }\n                return acc;\n              },\n              []\n            )\n          : [];\n        yield { type: \"text\", text, annotations };\n        continue;\n      } else if (\n        _isContentBlock(block, \"document\") &&\n        _isObject(block.document)\n      ) {\n        yield convertConverseDocumentBlock(block);\n        continue;\n      } else if (_isContentBlock(block, \"guard_content\")) {\n        yield {\n          type: \"non_standard\",\n          value: block,\n        };\n        continue;\n      } else if (_isContentBlock(block, \"image\") && _isObject(block.image)) {\n        yield convertConverseImageBlock(block);\n        continue;\n      } else if (\n        _isContentBlock(block, \"reasoning_content\") &&\n        _isString(block.reasoningText)\n      ) {\n        yield {\n          type: \"reasoning\",\n          reasoning: block.reasoningText,\n        };\n        continue;\n      } else if (_isContentBlock(block, \"text\") && _isString(block.text)) {\n        yield { type: \"text\", text: block.text };\n        continue;\n      } else if (_isContentBlock(block, \"tool_result\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      } else if (_isContentBlock(block, \"tool_call\")) {\n        // no-op - filtered to tools\n        continue;\n      } else if (_isContentBlock(block, \"video\") && _isObject(block.video)) {\n        yield convertConverseVideoBlock(block);\n        continue;\n      }\n      yield { type: \"non_standard\", value: block };\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nexport const ChatBedrockConverseTranslator: StandardContentBlockTranslator = {\n  translateContent: convertToV1FromChatBedrockConverseMessage,\n  translateContentChunk: convertToV1FromChatBedrockConverseMessage,\n};\n"],"names":["format: string","block: ContentBlock","acc: string","message: AIMessage","acc: Array<ContentBlock.Citation>","item","acc","ChatBedrockConverseTranslator: StandardContentBlockTranslator"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2165, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/google_genai.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/google_genai.ts"],"sourcesContent":["import { AIMessage } from \"../ai.js\";\nimport { ContentBlock } from \"../content/index.js\";\nimport type { StandardContentBlockTranslator } from \"./index.js\";\nimport { _isContentBlock, _isObject, _isString } from \"./utils.js\";\n\nfunction convertToV1FromChatGoogleMessage(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  // see `libs/providers/langchain-google-genai/src/utils/common.ts:mapGenerateContentResultToChatResult\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    for (const block of content) {\n      if (_isContentBlock(block, \"text\") && _isString(block.text)) {\n        yield { type: \"text\", text: block.text };\n        continue;\n      } else if (\n        _isContentBlock(block, \"inlineData\") &&\n        _isObject(block.inlineData) &&\n        _isString(block.inlineData.mimeType) &&\n        _isString(block.inlineData.data)\n      ) {\n        yield {\n          type: \"file\",\n          mimeType: block.inlineData.mimeType,\n          data: block.inlineData.data,\n        };\n        continue;\n      } else if (\n        _isContentBlock(block, \"functionCall\") &&\n        _isObject(block.functionCall) &&\n        _isString(block.functionCall.name) &&\n        _isObject(block.functionCall.args)\n      ) {\n        yield {\n          type: \"tool_call\",\n          id: message.id,\n          name: block.functionCall.name,\n          args: block.functionCall.args,\n        };\n        continue;\n      } else if (_isContentBlock(block, \"functionResponse\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      } else if (\n        _isContentBlock(block, \"fileData\") &&\n        _isObject(block.fileData) &&\n        _isString(block.fileData.mimeType) &&\n        _isString(block.fileData.fileUri)\n      ) {\n        yield {\n          type: \"file\",\n          mimeType: block.fileData.mimeType,\n          fileId: block.fileData.fileUri,\n        };\n        continue;\n      } else if (_isContentBlock(block, \"executableCode\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      } else if (_isContentBlock(block, \"codeExecutionResult\")) {\n        yield { type: \"non_standard\", value: block };\n        continue;\n      }\n      yield { type: \"non_standard\", value: block };\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nexport const ChatGoogleGenAITranslator: StandardContentBlockTranslator = {\n  translateContent: convertToV1FromChatGoogleMessage,\n  translateContentChunk: convertToV1FromChatGoogleMessage,\n};\n"],"names":["message: AIMessage","ChatGoogleGenAITranslator: StandardContentBlockTranslator"],"mappings":";;;;;;;AAKA,SAAS,iCACPA,OAAAA,EAC8B;IAE9B,UAAU,iBAAkD;QAC1D,MAAM,UACJ,OAAO,QAAQ,OAAA,KAAY,WACvB;YAAC;gBAAE,MAAM;gBAAQ,MAAM,QAAQ,OAAA;YAAS,CAAC;SAAA,GACzC,QAAQ,OAAA;QACd,KAAK,MAAM,SAAS,QAAS;YAC3B,QAAI,oTAAA,EAAgB,OAAO,OAAO,QAAI,8SAAA,EAAU,MAAM,IAAA,CAAK,EAAE;gBAC3D,MAAM;oBAAE,MAAM;oBAAQ,MAAM,MAAM,IAAA;gBAAM;gBACxC;YACD,OAAA,QACC,oTAAA,EAAgB,OAAO,aAAa,QACpC,8SAAA,EAAU,MAAM,UAAA,CAAW,QAC3B,8SAAA,EAAU,MAAM,UAAA,CAAW,QAAA,CAAS,QACpC,8SAAA,EAAU,MAAM,UAAA,CAAW,IAAA,CAAK,EAChC;gBACA,MAAM;oBACJ,MAAM;oBACN,UAAU,MAAM,UAAA,CAAW,QAAA;oBAC3B,MAAM,MAAM,UAAA,CAAW,IAAA;gBACxB;gBACD;YACD,OAAA,QACC,oTAAA,EAAgB,OAAO,eAAe,QACtC,8SAAA,EAAU,MAAM,YAAA,CAAa,QAC7B,8SAAA,EAAU,MAAM,YAAA,CAAa,IAAA,CAAK,QAClC,8SAAA,EAAU,MAAM,YAAA,CAAa,IAAA,CAAK,EAClC;gBACA,MAAM;oBACJ,MAAM;oBACN,IAAI,QAAQ,EAAA;oBACZ,MAAM,MAAM,YAAA,CAAa,IAAA;oBACzB,MAAM,MAAM,YAAA,CAAa,IAAA;gBAC1B;gBACD;YACD,OAAA,QAAU,oTAAA,EAAgB,OAAO,mBAAmB,EAAE;gBACrD,MAAM;oBAAE,MAAM;oBAAgB,OAAO;gBAAO;gBAC5C;YACD,OAAA,QACC,oTAAA,EAAgB,OAAO,WAAW,QAClC,8SAAA,EAAU,MAAM,QAAA,CAAS,QACzB,8SAAA,EAAU,MAAM,QAAA,CAAS,QAAA,CAAS,QAClC,8SAAA,EAAU,MAAM,QAAA,CAAS,OAAA,CAAQ,EACjC;gBACA,MAAM;oBACJ,MAAM;oBACN,UAAU,MAAM,QAAA,CAAS,QAAA;oBACzB,QAAQ,MAAM,QAAA,CAAS,OAAA;gBACxB;gBACD;YACD,OAAA,QAAU,oTAAA,EAAgB,OAAO,iBAAiB,EAAE;gBACnD,MAAM;oBAAE,MAAM;oBAAgB,OAAO;gBAAO;gBAC5C;YACD,OAAA,QAAU,oTAAA,EAAgB,OAAO,sBAAsB,EAAE;gBACxD,MAAM;oBAAE,MAAM;oBAAgB,OAAO;gBAAO;gBAC5C;YACD;YACD,MAAM;gBAAE,MAAM;gBAAgB,OAAO;YAAO;QAC7C;IACF;IACD,OAAO,MAAM,IAAA,CAAK,gBAAgB,CAAC;AACpC;AAED,MAAaC,4BAA4D;IACvE,kBAAkB;IAClB,uBAAuB;AACxB","debugId":null}},
    {"offset": {"line": 2246, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/google_vertexai.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/google_vertexai.ts"],"sourcesContent":["import { AIMessage } from \"../ai.js\";\nimport { ContentBlock } from \"../content/index.js\";\nimport type { StandardContentBlockTranslator } from \"./index.js\";\nimport { _isArray, _isContentBlock, _isString, iife } from \"./utils.js\";\n\nfunction convertToV1FromChatVertexMessage(\n  message: AIMessage\n): Array<ContentBlock.Standard> {\n  // see `/libs/providers/langchain-google-common/src/utils/gemini.ts:partsToMessageContent`\n  function* iterateContent(): Iterable<ContentBlock.Standard> {\n    const content =\n      typeof message.content === \"string\"\n        ? [{ type: \"text\", text: message.content }]\n        : message.content;\n    for (const block of content) {\n      if (_isContentBlock(block, \"reasoning\") && _isString(block.reasoning)) {\n        const signature = iife(() => {\n          const reasoningIndex = content.indexOf(block);\n          if (\n            _isArray(message.additional_kwargs?.signatures) &&\n            reasoningIndex >= 0\n          ) {\n            return message.additional_kwargs.signatures.at(reasoningIndex);\n          }\n          return undefined;\n        });\n        if (_isString(signature)) {\n          yield {\n            type: \"reasoning\",\n            reasoning: block.reasoning,\n            signature,\n          };\n        } else {\n          yield {\n            type: \"reasoning\",\n            reasoning: block.reasoning,\n          };\n        }\n        continue;\n      } else if (_isContentBlock(block, \"text\") && _isString(block.text)) {\n        yield { type: \"text\", text: block.text };\n        continue;\n      } else if (_isContentBlock(block, \"image_url\")) {\n        if (_isString(block.image_url)) {\n          if (block.image_url.startsWith(\"data:\")) {\n            const dataUrlRegex = /^data:([^;]+);base64,(.+)$/;\n            const match = block.image_url.match(dataUrlRegex);\n            if (match) {\n              yield { type: \"image\", data: match[2], mimeType: match[1] };\n            } else {\n              yield { type: \"image\", url: block.image_url };\n            }\n          } else {\n            yield { type: \"image\", url: block.image_url };\n          }\n        }\n        continue;\n      } else if (\n        _isContentBlock(block, \"media\") &&\n        _isString(block.mimeType) &&\n        _isString(block.data)\n      ) {\n        yield { type: \"file\", mimeType: block.mimeType, data: block.data };\n        continue;\n      }\n      yield { type: \"non_standard\", value: block };\n    }\n  }\n  return Array.from(iterateContent());\n}\n\nexport const ChatVertexTranslator: StandardContentBlockTranslator = {\n  translateContent: convertToV1FromChatVertexMessage,\n  translateContentChunk: convertToV1FromChatVertexMessage,\n};\n"],"names":["message: AIMessage","ChatVertexTranslator: StandardContentBlockTranslator"],"mappings":";;;;;;;AAKA,SAAS,iCACPA,OAAAA,EAC8B;IAE9B,UAAU,iBAAkD;QAC1D,MAAM,UACJ,OAAO,QAAQ,OAAA,KAAY,WACvB;YAAC;gBAAE,MAAM;gBAAQ,MAAM,QAAQ,OAAA;YAAS,CAAC;SAAA,GACzC,QAAQ,OAAA;QACd,KAAK,MAAM,SAAS,QAAS;YAC3B,QAAI,oTAAA,EAAgB,OAAO,YAAY,QAAI,8SAAA,EAAU,MAAM,SAAA,CAAU,EAAE;gBACrE,MAAM,gBAAY,ySAAA,EAAK,MAAM;oBAC3B,MAAM,iBAAiB,QAAQ,OAAA,CAAQ,MAAM;oBAC7C,QACE,6SAAA,EAAS,QAAQ,iBAAA,EAAmB,WAAW,IAC/C,kBAAkB,EAElB,CAAA,OAAO,QAAQ,iBAAA,CAAkB,UAAA,CAAW,EAAA,CAAG,eAAe;oBAEhE,OAAO,KAAA;gBACR,EAAC;gBACF,QAAI,8SAAA,EAAU,UAAU,EACtB,MAAM;oBACJ,MAAM;oBACN,WAAW,MAAM,SAAA;oBACjB;gBACD;qBAED,MAAM;oBACJ,MAAM;oBACN,WAAW,MAAM,SAAA;gBAClB;gBAEH;YACD,OAAA,QAAU,oTAAA,EAAgB,OAAO,OAAO,QAAI,8SAAA,EAAU,MAAM,IAAA,CAAK,EAAE;gBAClE,MAAM;oBAAE,MAAM;oBAAQ,MAAM,MAAM,IAAA;gBAAM;gBACxC;YACD,OAAA,QAAU,oTAAA,EAAgB,OAAO,YAAY,EAAE;gBAC9C,QAAI,8SAAA,EAAU,MAAM,SAAA,CAAU,CAC5B,CAAA,IAAI,MAAM,SAAA,CAAU,UAAA,CAAW,QAAQ,EAAE;oBACvC,MAAM,eAAe;oBACrB,MAAM,QAAQ,MAAM,SAAA,CAAU,KAAA,CAAM,aAAa;oBACjD,IAAI,OACF,MAAM;wBAAE,MAAM;wBAAS,MAAM,KAAA,CAAM,EAAA;wBAAI,UAAU,KAAA,CAAM,EAAA;oBAAI;yBAE3D,MAAM;wBAAE,MAAM;wBAAS,KAAK,MAAM,SAAA;oBAAW;gBAEhD,OACC,MAAM;oBAAE,MAAM;oBAAS,KAAK,MAAM,SAAA;gBAAW;gBAGjD;YACD,OAAA,QACC,oTAAA,EAAgB,OAAO,QAAQ,QAC/B,8SAAA,EAAU,MAAM,QAAA,CAAS,QACzB,8SAAA,EAAU,MAAM,IAAA,CAAK,EACrB;gBACA,MAAM;oBAAE,MAAM;oBAAQ,UAAU,MAAM,QAAA;oBAAU,MAAM,MAAM,IAAA;gBAAM;gBAClE;YACD;YACD,MAAM;gBAAE,MAAM;gBAAgB,OAAO;YAAO;QAC7C;IACF;IACD,OAAO,MAAM,IAAA,CAAK,gBAAgB,CAAC;AACpC;AAED,MAAaC,uBAAuD;IAClE,kBAAkB;IAClB,uBAAuB;AACxB","debugId":null}},
    {"offset": {"line": 2328, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/block_translators/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/block_translators/index.ts"],"sourcesContent":["import type { AIMessage, AIMessageChunk } from \"../ai.js\";\nimport type { ContentBlock } from \"../content/index.js\";\n\nimport { ChatAnthropicTranslator } from \"./anthropic.js\";\nimport { ChatBedrockConverseTranslator } from \"./bedrock_converse.js\";\nimport { ChatGoogleGenAITranslator } from \"./google_genai.js\";\nimport { ChatVertexTranslator } from \"./google_vertexai.js\";\nimport { ChatOpenAITranslator } from \"./openai.js\";\n\nexport interface StandardContentBlockTranslator {\n  translateContent(message: AIMessage): Array<ContentBlock.Standard>;\n  translateContentChunk(chunk: AIMessageChunk): Array<ContentBlock.Standard>;\n}\n\ntype TranslatorRegistry = Map<string, StandardContentBlockTranslator>;\n\ndeclare global {\n  var lc_block_translators_registry: TranslatorRegistry;\n}\n\nglobalThis.lc_block_translators_registry ??= new Map([\n  [\"anthropic\", ChatAnthropicTranslator],\n  [\"bedrock-converse\", ChatBedrockConverseTranslator],\n  [\"google-genai\", ChatGoogleGenAITranslator],\n  [\"google-vertexai\", ChatVertexTranslator],\n  [\"openai\", ChatOpenAITranslator],\n]);\n\nexport function registerTranslator(\n  modelProvider: string,\n  translator: StandardContentBlockTranslator\n) {\n  globalThis.lc_block_translators_registry.set(modelProvider, translator);\n}\n\nexport function getTranslator(\n  modelProvider: string\n): StandardContentBlockTranslator | undefined {\n  return globalThis.lc_block_translators_registry.get(modelProvider);\n}\n"],"names":["modelProvider: string"],"mappings":";;;;;;;;;;;;;;;AAoBA,WAAW,6BAAA,KAAkC,IAAI,IAAI;IACnD;QAAC;QAAa,gUAAwB;KAAA;IACtC;QAAC;QAAoB,6UAA8B;KAAA;IACnD;QAAC;QAAgB,qUAA0B;KAAA;IAC3C;QAAC;QAAmB,mUAAqB;KAAA;IACzC;QAAC;QAAU,0TAAqB;KAAA;CACjC;AASD,SAAgB,cACdA,aAAAA,EAC4C;IAC5C,OAAO,WAAW,6BAAA,CAA8B,GAAA,CAAI,cAAc;AACnE","debugId":null}},
    {"offset": {"line": 2374, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/metadata.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/metadata.ts"],"sourcesContent":["import { _mergeDicts } from \"./base.js\";\nimport type { MessageOutputVersion } from \"./message.js\";\n\nexport type ResponseMetadata = {\n  model_provider?: string;\n  model_name?: string;\n  output_version?: MessageOutputVersion;\n  [key: string]: unknown;\n};\n\nexport function mergeResponseMetadata(\n  a?: ResponseMetadata,\n  b?: ResponseMetadata\n): ResponseMetadata {\n  const output: ResponseMetadata = _mergeDicts(a ?? {}, b ?? {});\n  return output;\n}\n\nexport type ModalitiesTokenDetails = {\n  /**\n   * Text tokens.\n   * Does not need to be reported, but some models will do so.\n   */\n  text?: number;\n\n  /**\n   * Image (non-video) tokens.\n   */\n  image?: number;\n\n  /**\n   * Audio tokens.\n   */\n  audio?: number;\n\n  /**\n   * Video tokens.\n   */\n  video?: number;\n\n  /**\n   * Document tokens.\n   * e.g. PDF\n   */\n  document?: number;\n};\n\nfunction mergeModalitiesTokenDetails(\n  a?: ModalitiesTokenDetails,\n  b?: ModalitiesTokenDetails\n): ModalitiesTokenDetails {\n  const output: ModalitiesTokenDetails = {};\n  if (a?.audio !== undefined || b?.audio !== undefined) {\n    output.audio = (a?.audio ?? 0) + (b?.audio ?? 0);\n  }\n  if (a?.image !== undefined || b?.image !== undefined) {\n    output.image = (a?.image ?? 0) + (b?.image ?? 0);\n  }\n  if (a?.video !== undefined || b?.video !== undefined) {\n    output.video = (a?.video ?? 0) + (b?.video ?? 0);\n  }\n  if (a?.document !== undefined || b?.document !== undefined) {\n    output.document = (a?.document ?? 0) + (b?.document ?? 0);\n  }\n  if (a?.text !== undefined || b?.text !== undefined) {\n    output.text = (a?.text ?? 0) + (b?.text ?? 0);\n  }\n  return output;\n}\n\n/**\n * Breakdown of input token counts.\n *\n * Does not *need* to sum to full input token count. Does *not* need to have all keys.\n */\nexport type InputTokenDetails = ModalitiesTokenDetails & {\n  /**\n   * Input tokens that were cached and there was a cache hit.\n   *\n   * Since there was a cache hit, the tokens were read from the cache.\n   * More precisely, the model state given these tokens was read from the cache.\n   */\n  cache_read?: number;\n\n  /**\n   * Input tokens that were cached and there was a cache miss.\n   *\n   * Since there was a cache miss, the cache was created from these tokens.\n   */\n  cache_creation?: number;\n};\n\nfunction mergeInputTokenDetails(\n  a?: InputTokenDetails,\n  b?: InputTokenDetails\n): InputTokenDetails {\n  const output: InputTokenDetails = {\n    ...mergeModalitiesTokenDetails(a, b),\n  };\n  if (a?.cache_read !== undefined || b?.cache_read !== undefined) {\n    output.cache_read = (a?.cache_read ?? 0) + (b?.cache_read ?? 0);\n  }\n  if (a?.cache_creation !== undefined || b?.cache_creation !== undefined) {\n    output.cache_creation = (a?.cache_creation ?? 0) + (b?.cache_creation ?? 0);\n  }\n  return output;\n}\n\n/**\n * Breakdown of output token counts.\n *\n * Does *not* need to sum to full output token count. Does *not* need to have all keys.\n */\nexport type OutputTokenDetails = ModalitiesTokenDetails & {\n  /**\n   * Reasoning output tokens.\n   *\n   * Tokens generated by the model in a chain of thought process (i.e. by\n   * OpenAI's o1 models) that are not returned as part of model output.\n   */\n  reasoning?: number;\n};\n\nfunction mergeOutputTokenDetails(\n  a?: OutputTokenDetails,\n  b?: OutputTokenDetails\n): OutputTokenDetails {\n  const output: OutputTokenDetails = {\n    ...mergeModalitiesTokenDetails(a, b),\n  };\n  if (a?.reasoning !== undefined || b?.reasoning !== undefined) {\n    output.reasoning = (a?.reasoning ?? 0) + (b?.reasoning ?? 0);\n  }\n  return output;\n}\n\n/**\n * Usage metadata for a message, such as token counts.\n */\nexport type UsageMetadata = {\n  /**\n   * Count of input (or prompt) tokens. Sum of all input token types.\n   */\n  input_tokens: number;\n  /**\n   * Count of output (or completion) tokens. Sum of all output token types.\n   */\n  output_tokens: number;\n  /**\n   * Total token count. Sum of input_tokens + output_tokens.\n   */\n  total_tokens: number;\n\n  /**\n   * Breakdown of input token counts.\n   *\n   * Does *not* need to sum to full input token count. Does *not* need to have all keys.\n   */\n  input_token_details?: InputTokenDetails;\n\n  /**\n   * Breakdown of output token counts.\n   *\n   * Does *not* need to sum to full output token count. Does *not* need to have all keys.\n   */\n  output_token_details?: OutputTokenDetails;\n};\n\nexport function mergeUsageMetadata(\n  a?: UsageMetadata,\n  b?: UsageMetadata\n): UsageMetadata {\n  return {\n    input_tokens: (a?.input_tokens ?? 0) + (b?.input_tokens ?? 0),\n    output_tokens: (a?.output_tokens ?? 0) + (b?.output_tokens ?? 0),\n    total_tokens: (a?.total_tokens ?? 0) + (b?.total_tokens ?? 0),\n    input_token_details: mergeInputTokenDetails(\n      a?.input_token_details,\n      b?.input_token_details\n    ),\n    output_token_details: mergeOutputTokenDetails(\n      a?.output_token_details,\n      b?.output_token_details\n    ),\n  };\n}\n"],"names":["a?: ResponseMetadata","b?: ResponseMetadata","output: ResponseMetadata","a?: ModalitiesTokenDetails","b?: ModalitiesTokenDetails","output: ModalitiesTokenDetails","a?: InputTokenDetails","b?: InputTokenDetails","output: InputTokenDetails","a?: OutputTokenDetails","b?: OutputTokenDetails","output: OutputTokenDetails","a?: UsageMetadata","b?: UsageMetadata"],"mappings":";;;;;;;;;AAUA,SAAgB,sBACdA,CAAAA,EACAC,CAAAA,EACkB;IAClB,MAAMC,aAA2B,0RAAA,EAAY,KAAK,CAAE,GAAE,KAAK,CAAE,EAAC;IAC9D,OAAO;AACR;AA+BD,SAAS,4BACPC,CAAAA,EACAC,CAAAA,EACwB;IACxB,MAAMC,SAAiC,CAAE;IACzC,IAAI,GAAG,UAAU,KAAA,KAAa,GAAG,UAAU,KAAA,GACzC,OAAO,KAAA,GAAA,CAAS,GAAG,SAAS,CAAA,IAAA,CAAM,GAAG,SAAS,CAAA;IAEhD,IAAI,GAAG,UAAU,KAAA,KAAa,GAAG,UAAU,KAAA,GACzC,OAAO,KAAA,GAAA,CAAS,GAAG,SAAS,CAAA,IAAA,CAAM,GAAG,SAAS,CAAA;IAEhD,IAAI,GAAG,UAAU,KAAA,KAAa,GAAG,UAAU,KAAA,GACzC,OAAO,KAAA,GAAA,CAAS,GAAG,SAAS,CAAA,IAAA,CAAM,GAAG,SAAS,CAAA;IAEhD,IAAI,GAAG,aAAa,KAAA,KAAa,GAAG,aAAa,KAAA,GAC/C,OAAO,QAAA,GAAA,CAAY,GAAG,YAAY,CAAA,IAAA,CAAM,GAAG,YAAY,CAAA;IAEzD,IAAI,GAAG,SAAS,KAAA,KAAa,GAAG,SAAS,KAAA,GACvC,OAAO,IAAA,GAAA,CAAQ,GAAG,QAAQ,CAAA,IAAA,CAAM,GAAG,QAAQ,CAAA;IAE7C,OAAO;AACR;AAwBD,SAAS,uBACPC,CAAAA,EACAC,CAAAA,EACmB;IACnB,MAAMC,SAA4B;QAChC,GAAG,4BAA4B,GAAG,EAAE;IACrC;IACD,IAAI,GAAG,eAAe,KAAA,KAAa,GAAG,eAAe,KAAA,GACnD,OAAO,UAAA,GAAA,CAAc,GAAG,cAAc,CAAA,IAAA,CAAM,GAAG,cAAc,CAAA;IAE/D,IAAI,GAAG,mBAAmB,KAAA,KAAa,GAAG,mBAAmB,KAAA,GAC3D,OAAO,cAAA,GAAA,CAAkB,GAAG,kBAAkB,CAAA,IAAA,CAAM,GAAG,kBAAkB,CAAA;IAE3E,OAAO;AACR;AAiBD,SAAS,wBACPC,CAAAA,EACAC,CAAAA,EACoB;IACpB,MAAMC,SAA6B;QACjC,GAAG,4BAA4B,GAAG,EAAE;IACrC;IACD,IAAI,GAAG,cAAc,KAAA,KAAa,GAAG,cAAc,KAAA,GACjD,OAAO,SAAA,GAAA,CAAa,GAAG,aAAa,CAAA,IAAA,CAAM,GAAG,aAAa,CAAA;IAE5D,OAAO;AACR;AAkCD,SAAgB,mBACdC,CAAAA,EACAC,CAAAA,EACe;IACf,OAAO;QACL,cAAA,CAAe,GAAG,gBAAgB,CAAA,IAAA,CAAM,GAAG,gBAAgB,CAAA;QAC3D,eAAA,CAAgB,GAAG,iBAAiB,CAAA,IAAA,CAAM,GAAG,iBAAiB,CAAA;QAC9D,cAAA,CAAe,GAAG,gBAAgB,CAAA,IAAA,CAAM,GAAG,gBAAgB,CAAA;QAC3D,qBAAqB,uBACnB,GAAG,qBACH,GAAG,oBACJ;QACD,sBAAsB,wBACpB,GAAG,sBACH,GAAG,qBACJ;IACF;AACF","debugId":null}},
    {"offset": {"line": 2426, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/ai.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/ai.ts"],"sourcesContent":["import { parsePartialJson } from \"../utils/json.js\";\nimport {\n  BaseMessage,\n  BaseMessageChunk,\n  mergeContent,\n  _mergeDicts,\n  _mergeLists,\n  BaseMessageFields,\n} from \"./base.js\";\nimport { getTranslator } from \"./block_translators/index.js\";\nimport { ContentBlock } from \"./content/index.js\";\nimport {\n  $InferMessageContent,\n  $InferMessageProperty,\n  MessageStructure,\n} from \"./message.js\";\nimport { mergeResponseMetadata, mergeUsageMetadata } from \"./metadata.js\";\nimport {\n  InvalidToolCall,\n  ToolCall,\n  ToolCallChunk,\n  defaultToolCallParser,\n} from \"./tool.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface AIMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"ai\"> {\n  tool_calls?: ToolCall[];\n  invalid_tool_calls?: InvalidToolCall[];\n  usage_metadata?: $InferMessageProperty<TStructure, \"ai\", \"usage_metadata\">;\n}\n\nexport class AIMessage<TStructure extends MessageStructure = MessageStructure>\n  extends BaseMessage<TStructure, \"ai\">\n  implements AIMessageFields<TStructure>\n{\n  readonly type = \"ai\" as const;\n\n  tool_calls?: ToolCall[] = [];\n\n  invalid_tool_calls?: InvalidToolCall[] = [];\n\n  usage_metadata?: AIMessageFields<TStructure>[\"usage_metadata\"];\n\n  get lc_aliases(): Record<string, string> {\n    // exclude snake case conversion to pascal case\n    return {\n      ...super.lc_aliases,\n      tool_calls: \"tool_calls\",\n      invalid_tool_calls: \"invalid_tool_calls\",\n    };\n  }\n\n  constructor(\n    fields: $InferMessageContent<TStructure, \"ai\"> | AIMessageFields<TStructure>\n  ) {\n    let initParams: AIMessageFields<TStructure>;\n    if (typeof fields === \"string\" || Array.isArray(fields)) {\n      initParams = {\n        content: fields,\n        tool_calls: [],\n        invalid_tool_calls: [],\n        additional_kwargs: {},\n      };\n    } else {\n      initParams = fields;\n      const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n      const toolCalls = initParams.tool_calls;\n      if (\n        !(rawToolCalls == null) &&\n        rawToolCalls.length > 0 &&\n        (toolCalls === undefined || toolCalls.length === 0)\n      ) {\n        console.warn(\n          [\n            \"New LangChain packages are available that more efficiently handle\",\n            \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n            \"message tool calls. e.g., `pnpm install @langchain/anthropic`,\",\n            \"pnpm install @langchain/openai`, etc.\",\n          ].join(\" \")\n        );\n      }\n      try {\n        if (!(rawToolCalls == null) && toolCalls === undefined) {\n          const [toolCalls, invalidToolCalls] =\n            defaultToolCallParser(rawToolCalls);\n          initParams.tool_calls = toolCalls ?? [];\n          initParams.invalid_tool_calls = invalidToolCalls ?? [];\n        } else {\n          initParams.tool_calls = initParams.tool_calls ?? [];\n          initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n        }\n      } catch {\n        // Do nothing if parsing fails\n        initParams.tool_calls = [];\n        initParams.invalid_tool_calls = [];\n      }\n\n      // Convert content to content blocks if output version is v1\n      if (\n        initParams.response_metadata !== undefined &&\n        \"output_version\" in initParams.response_metadata &&\n        initParams.response_metadata.output_version === \"v1\"\n      ) {\n        initParams.contentBlocks =\n          initParams.content as Array<ContentBlock.Standard>;\n        initParams.content = undefined;\n      }\n\n      if (initParams.contentBlocks !== undefined) {\n        // Add constructor tool calls as content blocks\n        initParams.contentBlocks.push(\n          ...initParams.tool_calls.map((toolCall) => ({\n            type: \"tool_call\" as const,\n            id: toolCall.id,\n            name: toolCall.name,\n            args: toolCall.args,\n          }))\n        );\n        // Add content block tool calls that aren't in the constructor tool calls\n        const missingToolCalls = initParams.contentBlocks\n          .filter<ContentBlock.Tools.ToolCall>(\n            (block): block is ContentBlock.Tools.ToolCall =>\n              block.type === \"tool_call\"\n          )\n          .filter(\n            (block) =>\n              !initParams.tool_calls?.some(\n                (toolCall) =>\n                  toolCall.id === block.id && toolCall.name === block.name\n              )\n          );\n        if (missingToolCalls.length > 0) {\n          initParams.tool_calls = missingToolCalls.map((block) => ({\n            type: \"tool_call\" as const,\n            id: block.id!,\n            name: block.name,\n            args: block.args as Record<string, unknown>,\n          }));\n        }\n      }\n    }\n    // Sadly, TypeScript only allows super() calls at root if the class has\n    // properties with initializers, so we have to check types twice.\n    super(initParams);\n    if (typeof initParams !== \"string\") {\n      this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n      this.invalid_tool_calls =\n        initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n    }\n    this.usage_metadata = initParams.usage_metadata;\n  }\n\n  static lc_name() {\n    return \"AIMessage\";\n  }\n\n  get contentBlocks(): Array<ContentBlock.Standard> {\n    if (\n      this.response_metadata &&\n      \"output_version\" in this.response_metadata &&\n      this.response_metadata.output_version === \"v1\"\n    ) {\n      return this.content as Array<ContentBlock.Standard>;\n    }\n\n    if (\n      this.response_metadata &&\n      \"model_provider\" in this.response_metadata &&\n      typeof this.response_metadata.model_provider === \"string\"\n    ) {\n      const translator = getTranslator(this.response_metadata.model_provider);\n      if (translator) {\n        return translator.translateContent(this);\n      }\n    }\n\n    const blocks = super.contentBlocks;\n\n    if (this.tool_calls) {\n      const missingToolCalls = this.tool_calls.filter(\n        (block) =>\n          !blocks.some((b) => b.id === block.id && b.name === block.name)\n      );\n      blocks.push(\n        ...missingToolCalls.map((block) => ({\n          ...block,\n          type: \"tool_call\" as const,\n          id: block.id,\n          name: block.name,\n          args: block.args,\n        }))\n      );\n    }\n\n    return blocks;\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      tool_calls: this.tool_calls,\n      invalid_tool_calls: this.invalid_tool_calls,\n      usage_metadata: this.usage_metadata,\n    };\n  }\n\n  static isInstance(obj: unknown): obj is AIMessage {\n    return super.isInstance(obj) && obj.type === \"ai\";\n  }\n}\n\n/**\n * @deprecated Use {@link AIMessage.isInstance} instead\n */\nexport function isAIMessage<TStructure extends MessageStructure>(\n  x: BaseMessage\n): x is AIMessage<TStructure> {\n  return x._getType() === \"ai\";\n}\n\n/**\n * @deprecated Use {@link AIMessageChunk.isInstance} instead\n */\nexport function isAIMessageChunk<TStructure extends MessageStructure>(\n  x: BaseMessageChunk\n): x is AIMessageChunk<TStructure> {\n  return x._getType() === \"ai\";\n}\n\nexport type AIMessageChunkFields<\n  TStructure extends MessageStructure = MessageStructure\n> = AIMessageFields<TStructure> & {\n  tool_call_chunks?: ToolCallChunk[];\n};\n\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk<\n    TStructure extends MessageStructure = MessageStructure\n  >\n  extends BaseMessageChunk<TStructure, \"ai\">\n  implements AIMessage<TStructure>, AIMessageChunkFields<TStructure>\n{\n  readonly type = \"ai\" as const;\n\n  tool_calls?: ToolCall[] = [];\n\n  invalid_tool_calls?: InvalidToolCall[] = [];\n\n  tool_call_chunks?: ToolCallChunk[] = [];\n\n  usage_metadata?: AIMessageChunkFields<TStructure>[\"usage_metadata\"];\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"ai\">\n      | AIMessageChunkFields<TStructure>\n  ) {\n    let initParams: AIMessageChunkFields<TStructure>;\n    if (typeof fields === \"string\" || Array.isArray(fields)) {\n      initParams = {\n        content: fields,\n        tool_calls: [],\n        invalid_tool_calls: [],\n        tool_call_chunks: [],\n      };\n    } else if (fields.tool_call_chunks === undefined) {\n      initParams = {\n        ...fields,\n        tool_calls: fields.tool_calls ?? [],\n        invalid_tool_calls: [],\n        tool_call_chunks: [],\n        usage_metadata:\n          fields.usage_metadata !== undefined\n            ? fields.usage_metadata\n            : undefined,\n      };\n    } else {\n      const groupedToolCallChunks = fields.tool_call_chunks.reduce(\n        (acc, chunk) => {\n          const matchedChunkIndex = acc.findIndex(([match]) => {\n            // If chunk has an id and index, match if both are present\n            if (\n              \"id\" in chunk &&\n              chunk.id &&\n              \"index\" in chunk &&\n              chunk.index !== undefined\n            ) {\n              return chunk.id === match.id && chunk.index === match.index;\n            }\n            // If chunk has an id, we match on id\n            if (\"id\" in chunk && chunk.id) {\n              return chunk.id === match.id;\n            }\n            // If chunk has an index, we match on index\n            if (\"index\" in chunk && chunk.index !== undefined) {\n              return chunk.index === match.index;\n            }\n            return false;\n          });\n          if (matchedChunkIndex !== -1) {\n            acc[matchedChunkIndex].push(chunk);\n          } else {\n            acc.push([chunk]);\n          }\n          return acc;\n        },\n        [] as ToolCallChunk[][]\n      );\n\n      const toolCalls: ToolCall[] = [];\n      const invalidToolCalls: InvalidToolCall[] = [];\n      for (const chunks of groupedToolCallChunks) {\n        let parsedArgs: Record<string, unknown> | null = null;\n        const name = chunks[0]?.name ?? \"\";\n        const joinedArgs = chunks.map((c) => c.args || \"\").join(\"\");\n        const argsStr = joinedArgs.length ? joinedArgs : \"{}\";\n        const id = chunks[0]?.id;\n        try {\n          parsedArgs = parsePartialJson(argsStr);\n          if (\n            !id ||\n            parsedArgs === null ||\n            typeof parsedArgs !== \"object\" ||\n            Array.isArray(parsedArgs)\n          ) {\n            throw new Error(\"Malformed tool call chunk args.\");\n          }\n          toolCalls.push({\n            name,\n            args: parsedArgs,\n            id,\n            type: \"tool_call\",\n          });\n        } catch {\n          invalidToolCalls.push({\n            name,\n            args: argsStr,\n            id,\n            error: \"Malformed args.\",\n            type: \"invalid_tool_call\",\n          });\n        }\n      }\n      initParams = {\n        ...fields,\n        tool_calls: toolCalls,\n        invalid_tool_calls: invalidToolCalls,\n        usage_metadata:\n          fields.usage_metadata !== undefined\n            ? fields.usage_metadata\n            : undefined,\n      };\n    }\n    // Sadly, TypeScript only allows super() calls at root if the class has\n    // properties with initializers, so we have to check types twice.\n    super(initParams);\n    this.tool_call_chunks =\n      initParams.tool_call_chunks ?? this.tool_call_chunks;\n    this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n    this.invalid_tool_calls =\n      initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n    this.usage_metadata = initParams.usage_metadata;\n  }\n\n  get lc_aliases(): Record<string, string> {\n    // exclude snake case conversion to pascal case\n    return {\n      ...super.lc_aliases,\n      tool_calls: \"tool_calls\",\n      invalid_tool_calls: \"invalid_tool_calls\",\n      tool_call_chunks: \"tool_call_chunks\",\n    };\n  }\n\n  static lc_name() {\n    return \"AIMessageChunk\";\n  }\n\n  get contentBlocks(): Array<ContentBlock.Standard> {\n    if (\n      this.response_metadata &&\n      \"output_version\" in this.response_metadata &&\n      this.response_metadata.output_version === \"v1\"\n    ) {\n      return this.content as Array<ContentBlock.Standard>;\n    }\n\n    if (\n      this.response_metadata &&\n      \"model_provider\" in this.response_metadata &&\n      typeof this.response_metadata.model_provider === \"string\"\n    ) {\n      const translator = getTranslator(this.response_metadata.model_provider);\n      if (translator) {\n        return translator.translateContent(this);\n      }\n    }\n\n    const blocks = super.contentBlocks;\n\n    if (this.tool_calls) {\n      if (typeof this.content !== \"string\") {\n        const contentToolCalls = this.content\n          .filter((block) => block.type === \"tool_call\")\n          .map((block) => block.id);\n        for (const toolCall of this.tool_calls) {\n          if (toolCall.id && !contentToolCalls.includes(toolCall.id)) {\n            blocks.push({\n              ...toolCall,\n              type: \"tool_call\",\n              id: toolCall.id,\n              name: toolCall.name,\n              args: toolCall.args,\n            });\n          }\n        }\n      }\n    }\n\n    return blocks;\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      tool_calls: this.tool_calls,\n      tool_call_chunks: this.tool_call_chunks,\n      invalid_tool_calls: this.invalid_tool_calls,\n      usage_metadata: this.usage_metadata,\n    };\n  }\n\n  concat(chunk: AIMessageChunk<TStructure>) {\n    const combinedFields: AIMessageChunkFields = {\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: mergeResponseMetadata(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      tool_call_chunks: [],\n      id: this.id ?? chunk.id,\n    };\n    if (\n      this.tool_call_chunks !== undefined ||\n      chunk.tool_call_chunks !== undefined\n    ) {\n      const rawToolCalls = _mergeLists(\n        this.tool_call_chunks as ContentBlock.Tools.ToolCallChunk[],\n        chunk.tool_call_chunks as ContentBlock.Tools.ToolCallChunk[]\n      );\n      if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n        combinedFields.tool_call_chunks = rawToolCalls;\n      }\n    }\n    if (\n      this.usage_metadata !== undefined ||\n      chunk.usage_metadata !== undefined\n    ) {\n      combinedFields.usage_metadata = mergeUsageMetadata(\n        this.usage_metadata,\n        chunk.usage_metadata\n      );\n    }\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls(combinedFields);\n  }\n\n  static isInstance(obj: unknown): obj is AIMessageChunk {\n    return super.isInstance(obj) && obj.type === \"ai\";\n  }\n}\n"],"names":["fields: $InferMessageContent<TStructure, \"ai\"> | AIMessageFields<TStructure>","initParams: AIMessageFields<TStructure>","toolCalls","obj: unknown","x: BaseMessage","x: BaseMessageChunk","fields:\n      | $InferMessageContent<TStructure, \"ai\">\n      | AIMessageChunkFields<TStructure>","initParams: AIMessageChunkFields<TStructure>","toolCalls: ToolCall[]","invalidToolCalls: InvalidToolCall[]","parsedArgs: Record<string, unknown> | null","chunk: AIMessageChunk<TStructure>","combinedFields: AIMessageChunkFields"],"mappings":"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","debugId":null}},
    {"offset": {"line": 2706, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/chat.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/chat.ts"],"sourcesContent":["import {\n  BaseMessage,\n  BaseMessageChunk,\n  type BaseMessageFields,\n  mergeContent,\n  _mergeDicts,\n} from \"./base.js\";\nimport { $InferMessageContent, MessageStructure } from \"./message.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface ChatMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"generic\"> {\n  role: string;\n}\n\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage<TStructure extends MessageStructure = MessageStructure>\n  extends BaseMessage<TStructure, \"generic\">\n  implements ChatMessageFields<TStructure>\n{\n  static lc_name() {\n    return \"ChatMessage\";\n  }\n\n  readonly type = \"generic\" as const;\n\n  role: string;\n\n  static _chatMessageClass(): typeof ChatMessage {\n    return ChatMessage;\n  }\n\n  constructor(\n    content: $InferMessageContent<TStructure, \"generic\">,\n    role: string\n  );\n\n  constructor(fields: ChatMessageFields<TStructure>);\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"generic\">\n      | ChatMessageFields<TStructure>,\n    role?: string\n  ) {\n    if (typeof fields === \"string\" || Array.isArray(fields)) {\n      // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n      fields = { content: fields, role: role! };\n    }\n    super(fields);\n    this.role = fields.role;\n  }\n\n  static isInstance(obj: unknown): obj is ChatMessage {\n    return super.isInstance(obj) && obj.type === \"generic\";\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      role: this.role,\n    };\n  }\n}\n\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageChunk<TStructure, \"generic\"> {\n  static lc_name() {\n    return \"ChatMessageChunk\";\n  }\n\n  readonly type = \"generic\" as const;\n\n  role: string;\n\n  constructor(\n    content: $InferMessageContent<TStructure, \"generic\">,\n    role: string\n  );\n\n  constructor(fields: ChatMessageFields<TStructure>);\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"generic\">\n      | ChatMessageFields<TStructure>,\n    role?: string\n  ) {\n    if (typeof fields === \"string\" || Array.isArray(fields)) {\n      // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n      fields = { content: fields, role: role! };\n    }\n    super(fields);\n    this.role = fields.role;\n  }\n\n  concat(chunk: ChatMessageChunk<TStructure>) {\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: _mergeDicts(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      role: this.role,\n      id: this.id ?? chunk.id,\n    });\n  }\n\n  static isInstance(obj: unknown): obj is ChatMessageChunk {\n    return super.isInstance(obj) && obj.type === \"generic\";\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      role: this.role,\n    };\n  }\n}\n\n/**\n * @deprecated Use {@link ChatMessage.isInstance} instead\n */\nexport function isChatMessage(x: BaseMessage): x is ChatMessage {\n  return x._getType() === \"generic\";\n}\n\n/**\n * @deprecated Use {@link ChatMessageChunk.isInstance} instead\n */\nexport function isChatMessageChunk(x: BaseMessageChunk): x is ChatMessageChunk {\n  return x._getType() === \"generic\";\n}\n"],"names":["fields:\n      | $InferMessageContent<TStructure, \"generic\">\n      | ChatMessageFields<TStructure>","role?: string","obj: unknown","chunk: ChatMessageChunk<TStructure>","x: BaseMessage","x: BaseMessageChunk"],"mappings":";;;;;;;;;;;;;;;GAmBA,IAAa,cAAb,MAAa,oBACH,0RAAA,CAEV;IACE,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,UAAA;IAEhB,KAAA;IAEA,OAAO,oBAAwC;QAC7C,OAAO;IACR;IASD,YACEA,MAAAA,EAGAC,IAAAA,CACA;QACA,IAAI,OAAO,WAAW,YAAY,MAAM,OAAA,CAAQ,OAAO,EAErD,SAAS;YAAE,SAAS;YAAc;QAAO;QAE3C,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;IACpB;IAED,OAAO,WAAWC,GAAAA,EAAkC;QAClD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;IAED,IAAa,mBAA4C;QACvD,OAAO;YACL,GAAG,KAAA,CAAM,gBAAA;YACT,MAAM,IAAA,CAAK,IAAA;QACZ;IACF;AACF;;;;GAMD,IAAa,mBAAb,cAEU,+RAAA,CAAwC;IAChD,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,UAAA;IAEhB,KAAA;IASA,YACEF,MAAAA,EAGAC,IAAAA,CACA;QACA,IAAI,OAAO,WAAW,YAAY,MAAM,OAAA,CAAQ,OAAO,EAErD,SAAS;YAAE,SAAS;YAAc;QAAO;QAE3C,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;IACpB;IAED,OAAOE,KAAAA,EAAqC;QAC1C,MAAM,MAAM,IAAA,CAAK,WAAA;QACjB,OAAO,IAAI,IAAI;YACb,aAAS,2RAAA,EAAa,IAAA,CAAK,OAAA,EAAS,MAAM,OAAA,CAAQ;YAClD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,MAAM,IAAA,CAAK,IAAA;YACX,IAAI,IAAA,CAAK,EAAA,IAAM,MAAM,EAAA;QACtB;IACF;IAED,OAAO,WAAWD,GAAAA,EAAuC;QACvD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;IAED,IAAa,mBAA4C;QACvD,OAAO;YACL,GAAG,KAAA,CAAM,gBAAA;YACT,MAAM,IAAA,CAAK,IAAA;QACZ;IACF;AACF;;;GAKD,SAAgB,cAAcE,CAAAA,EAAkC;IAC9D,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB;;;GAKD,SAAgB,mBAAmBC,CAAAA,EAA4C;IAC7E,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB","debugId":null}},
    {"offset": {"line": 2801, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/function.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/function.ts"],"sourcesContent":["import {\n  BaseMessage,\n  BaseMessageChunk,\n  type BaseMessageFields,\n  mergeContent,\n  _mergeDicts,\n} from \"./base.js\";\nimport { MessageStructure } from \"./message.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface FunctionMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"function\"> {\n  name: string;\n}\n\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage<\n    TStructure extends MessageStructure = MessageStructure\n  >\n  extends BaseMessage<TStructure, \"function\">\n  implements FunctionMessageFields<TStructure>\n{\n  static lc_name() {\n    return \"FunctionMessage\";\n  }\n\n  readonly type = \"function\" as const;\n\n  name: string;\n\n  constructor(fields: FunctionMessageFields<TStructure>) {\n    super(fields);\n    this.name = fields.name;\n  }\n}\n\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageChunk<TStructure, \"function\"> {\n  static lc_name() {\n    return \"FunctionMessageChunk\";\n  }\n\n  readonly type = \"function\" as const;\n\n  concat(chunk: FunctionMessageChunk<TStructure>) {\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: _mergeDicts(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      name: this.name ?? \"\",\n      id: this.id ?? chunk.id,\n    });\n  }\n}\n\nexport function isFunctionMessage(x: BaseMessage): x is FunctionMessage {\n  return x._getType() === \"function\";\n}\n\nexport function isFunctionMessageChunk(\n  x: BaseMessageChunk\n): x is FunctionMessageChunk {\n  return x._getType() === \"function\";\n}\n"],"names":["fields: FunctionMessageFields<TStructure>","chunk: FunctionMessageChunk<TStructure>","x: BaseMessage","x: BaseMessageChunk"],"mappings":";;;;;;;;;;;;;;;GAmBA,IAAa,kBAAb,cAGU,0RAAA,CAEV;IACE,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,WAAA;IAEhB,KAAA;IAEA,YAAYA,MAAAA,CAA2C;QACrD,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;IACpB;AACF;;;;GAMD,IAAa,uBAAb,cAEU,+RAAA,CAAyC;IACjD,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,WAAA;IAEhB,OAAOC,KAAAA,EAAyC;QAC9C,MAAM,MAAM,IAAA,CAAK,WAAA;QACjB,OAAO,IAAI,IAAI;YACb,aAAS,2RAAA,EAAa,IAAA,CAAK,OAAA,EAAS,MAAM,OAAA,CAAQ;YAClD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,MAAM,IAAA,CAAK,IAAA,IAAQ;YACnB,IAAI,IAAA,CAAK,EAAA,IAAM,MAAM,EAAA;QACtB;IACF;AACF;AAED,SAAgB,kBAAkBC,CAAAA,EAAsC;IACtE,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB;AAED,SAAgB,uBACdC,CAAAA,EAC2B;IAC3B,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB","debugId":null}},
    {"offset": {"line": 2858, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/human.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/human.ts"],"sourcesContent":["import {\n  BaseMessage,\n  BaseMessageChunk,\n  mergeContent,\n  _mergeDicts,\n  type BaseMessageFields,\n} from \"./base.js\";\nimport type { $InferMessageContent, MessageStructure } from \"./message.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface HumanMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"human\"> {}\n\n/**\n * Represents a human message in a conversation.\n */\nexport class HumanMessage<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessage<TStructure, \"human\"> {\n  static lc_name() {\n    return \"HumanMessage\";\n  }\n\n  readonly type = \"human\" as const;\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"human\">\n      | HumanMessageFields<TStructure>\n  ) {\n    super(fields);\n  }\n\n  static isInstance(obj: unknown): obj is HumanMessage {\n    return super.isInstance(obj) && obj.type === \"human\";\n  }\n}\n\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport class HumanMessageChunk<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageChunk<TStructure, \"human\"> {\n  static lc_name() {\n    return \"HumanMessageChunk\";\n  }\n\n  readonly type = \"human\" as const;\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"human\">\n      | HumanMessageFields<TStructure>\n  ) {\n    super(fields);\n  }\n\n  concat(chunk: HumanMessageChunk<TStructure>) {\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: _mergeDicts(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      id: this.id ?? chunk.id,\n    });\n  }\n\n  static isInstance(obj: unknown): obj is HumanMessageChunk {\n    return super.isInstance(obj) && obj.type === \"human\";\n  }\n}\n\n/**\n * @deprecated Use {@link HumanMessage.isInstance} instead\n */\nexport function isHumanMessage<TStructure extends MessageStructure>(\n  x: BaseMessage\n): x is HumanMessage<TStructure> {\n  return x.getType() === \"human\";\n}\n\n/**\n * @deprecated Use {@link HumanMessageChunk.isInstance} instead\n */\nexport function isHumanMessageChunk<TStructure extends MessageStructure>(\n  x: BaseMessageChunk\n): x is HumanMessageChunk<TStructure> {\n  return x.getType() === \"human\";\n}\n"],"names":["fields:\n      | $InferMessageContent<TStructure, \"human\">\n      | HumanMessageFields<TStructure>","obj: unknown","chunk: HumanMessageChunk<TStructure>","x: BaseMessage","x: BaseMessageChunk"],"mappings":";;;;;;;;;;;;;;;GAiBA,IAAa,eAAb,cAEU,0RAAA,CAAiC;IACzC,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,QAAA;IAEhB,YACEA,MAAAA,CAGA;QACA,KAAA,CAAM,OAAO;IACd;IAED,OAAO,WAAWC,GAAAA,EAAmC;QACnD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;AACF;;;;GAMD,IAAa,oBAAb,cAEU,+RAAA,CAAsC;IAC9C,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,QAAA;IAEhB,YACED,MAAAA,CAGA;QACA,KAAA,CAAM,OAAO;IACd;IAED,OAAOE,KAAAA,EAAsC;QAC3C,MAAM,MAAM,IAAA,CAAK,WAAA;QACjB,OAAO,IAAI,IAAI;YACb,aAAS,2RAAA,EAAa,IAAA,CAAK,OAAA,EAAS,MAAM,OAAA,CAAQ;YAClD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,IAAI,IAAA,CAAK,EAAA,IAAM,MAAM,EAAA;QACtB;IACF;IAED,OAAO,WAAWD,GAAAA,EAAwC;QACxD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;AACF;;;GAKD,SAAgB,eACdE,CAAAA,EAC+B;IAC/B,OAAO,EAAE,OAAA,EAAS,KAAK;AACxB;;;GAKD,SAAgB,oBACdC,CAAAA,EACoC;IACpC,OAAO,EAAE,OAAA,EAAS,KAAK;AACxB","debugId":null}},
    {"offset": {"line": 2925, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/system.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/system.ts"],"sourcesContent":["import {\n  BaseMessage,\n  BaseMessageChunk,\n  mergeContent,\n  _mergeDicts,\n  type BaseMessageFields,\n} from \"./base.js\";\nimport { $InferMessageContent, MessageStructure } from \"./message.js\";\nimport { Constructor } from \"./utils.js\";\n\nexport interface SystemMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageFields<TStructure, \"system\"> {}\n\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessage<TStructure, \"system\"> {\n  static lc_name() {\n    return \"SystemMessage\";\n  }\n\n  readonly type = \"system\" as const;\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"system\">\n      | SystemMessageFields<TStructure>\n  ) {\n    super(fields);\n  }\n\n  static isInstance(obj: unknown): obj is SystemMessage {\n    return super.isInstance(obj) && obj.type === \"system\";\n  }\n}\n\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessageChunk<TStructure, \"system\"> {\n  static lc_name() {\n    return \"SystemMessageChunk\";\n  }\n\n  readonly type = \"system\" as const;\n\n  constructor(\n    fields:\n      | $InferMessageContent<TStructure, \"system\">\n      | SystemMessageFields<TStructure>\n  ) {\n    super(fields);\n  }\n\n  concat(chunk: SystemMessageChunk<TStructure>) {\n    const Cls = this.constructor as Constructor<this>;\n    return new Cls({\n      content: mergeContent(this.content, chunk.content),\n      additional_kwargs: _mergeDicts(\n        this.additional_kwargs,\n        chunk.additional_kwargs\n      ),\n      response_metadata: _mergeDicts(\n        this.response_metadata,\n        chunk.response_metadata\n      ),\n      id: this.id ?? chunk.id,\n    });\n  }\n\n  static isInstance(obj: unknown): obj is SystemMessageChunk {\n    return super.isInstance(obj) && obj.type === \"system\";\n  }\n}\n\n/**\n * @deprecated Use {@link SystemMessage.isInstance} instead\n */\nexport function isSystemMessage<TStructure extends MessageStructure>(\n  x: BaseMessage\n): x is SystemMessage<TStructure> {\n  return x._getType() === \"system\";\n}\n\n/**\n * @deprecated Use {@link SystemMessageChunk.isInstance} instead\n */\nexport function isSystemMessageChunk<TStructure extends MessageStructure>(\n  x: BaseMessageChunk\n): x is SystemMessageChunk<TStructure> {\n  return x._getType() === \"system\";\n}\n"],"names":["fields:\n      | $InferMessageContent<TStructure, \"system\">\n      | SystemMessageFields<TStructure>","obj: unknown","chunk: SystemMessageChunk<TStructure>","x: BaseMessage","x: BaseMessageChunk"],"mappings":";;;;;;;;;;;;;;;GAiBA,IAAa,gBAAb,cAEU,0RAAA,CAAkC;IAC1C,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,SAAA;IAEhB,YACEA,MAAAA,CAGA;QACA,KAAA,CAAM,OAAO;IACd;IAED,OAAO,WAAWC,GAAAA,EAAoC;QACpD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;AACF;;;;GAMD,IAAa,qBAAb,cAEU,+RAAA,CAAuC;IAC/C,OAAO,UAAU;QACf,OAAO;IACR;IAEQ,OAAO,SAAA;IAEhB,YACED,MAAAA,CAGA;QACA,KAAA,CAAM,OAAO;IACd;IAED,OAAOE,KAAAA,EAAuC;QAC5C,MAAM,MAAM,IAAA,CAAK,WAAA;QACjB,OAAO,IAAI,IAAI;YACb,aAAS,2RAAA,EAAa,IAAA,CAAK,OAAA,EAAS,MAAM,OAAA,CAAQ;YAClD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,uBAAmB,0RAAA,EACjB,IAAA,CAAK,iBAAA,EACL,MAAM,iBAAA,CACP;YACD,IAAI,IAAA,CAAK,EAAA,IAAM,MAAM,EAAA;QACtB;IACF;IAED,OAAO,WAAWD,GAAAA,EAAyC;QACzD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;AACF;;;GAKD,SAAgB,gBACdE,CAAAA,EACgC;IAChC,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB;;;GAKD,SAAgB,qBACdC,CAAAA,EACqC;IACrC,OAAO,EAAE,QAAA,EAAU,KAAK;AACzB","debugId":null}},
    {"offset": {"line": 2992, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/errors/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/errors/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type LangChainErrorCodes =\n  | \"INVALID_PROMPT_INPUT\"\n  | \"INVALID_TOOL_RESULTS\"\n  | \"MESSAGE_COERCION_FAILURE\"\n  | \"MODEL_AUTHENTICATION\"\n  | \"MODEL_NOT_FOUND\"\n  | \"MODEL_RATE_LIMIT\"\n  | \"OUTPUT_PARSING_FAILURE\";\n\nexport function addLangChainErrorFields(\n  error: any,\n  lc_error_code: LangChainErrorCodes\n) {\n  (error as any).lc_error_code = lc_error_code;\n  error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n  return error;\n}\n"],"names":["error: any","lc_error_code: LangChainErrorCodes"],"mappings":";;;;;AAWA,SAAgB,wBACdA,KAAAA,EACAC,aAAAA,EACA;IACC,MAAc,aAAA,GAAgB;IAC/B,MAAM,OAAA,GAAU,GAAG,MAAM,OAAA,CAAQ,8EAA8E,EAAE,cAAc,GAAG,CAAC;IACnI,OAAO;AACR","debugId":null}},
    {"offset": {"line": 3008, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/modifier.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/modifier.ts"],"sourcesContent":["import { BaseMessage, BaseMessageFields } from \"./base.js\";\nimport { MessageStructure } from \"./message.js\";\n\nexport interface RemoveMessageFields<\n  TStructure extends MessageStructure = MessageStructure\n> extends Omit<BaseMessageFields<TStructure, \"remove\">, \"content\"> {\n  /**\n   * The ID of the message to remove.\n   */\n  id: string;\n}\n\n/**\n * Message responsible for deleting other messages.\n */\nexport class RemoveMessage<\n  TStructure extends MessageStructure = MessageStructure\n> extends BaseMessage<TStructure, \"remove\"> {\n  readonly type = \"remove\" as const;\n\n  /**\n   * The ID of the message to remove.\n   */\n  id: string;\n\n  constructor(fields: RemoveMessageFields<TStructure>) {\n    super({\n      ...fields,\n      content: [],\n    });\n    this.id = fields.id;\n  }\n\n  override get _printableFields(): Record<string, unknown> {\n    return {\n      ...super._printableFields,\n      id: this.id,\n    };\n  }\n\n  static isInstance(obj: unknown): obj is RemoveMessage {\n    return super.isInstance(obj) && obj.type === \"remove\";\n  }\n}\n"],"names":["fields: RemoveMessageFields<TStructure>","obj: unknown"],"mappings":";;;;;;;;;GAeA,IAAa,gBAAb,cAEU,0RAAA,CAAkC;IACjC,OAAO,SAAA;;;IAKhB,GAAA;IAEA,YAAYA,MAAAA,CAAyC;QACnD,KAAA,CAAM;YACJ,GAAG,MAAA;YACH,SAAS,CAAE,CAAA;QACZ,EAAC;QACF,IAAA,CAAK,EAAA,GAAK,OAAO,EAAA;IAClB;IAED,IAAa,mBAA4C;QACvD,OAAO;YACL,GAAG,KAAA,CAAM,gBAAA;YACT,IAAI,IAAA,CAAK,EAAA;QACV;IACF;IAED,OAAO,WAAWC,GAAAA,EAAoC;QACpD,OAAO,KAAA,CAAM,WAAW,IAAI,IAAI,IAAI,IAAA,KAAS;IAC9C;AACF","debugId":null}},
    {"offset": {"line": 3045, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/messages/utils.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/messages/utils.ts"],"sourcesContent":["import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { SerializedConstructor } from \"../load/serializable.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk, AIMessageChunkFields } from \"./ai.js\";\nimport {\n  BaseMessageLike,\n  BaseMessage,\n  isBaseMessage,\n  StoredMessage,\n  StoredMessageV1,\n  BaseMessageFields,\n  _isMessageFieldWithRole,\n} from \"./base.js\";\nimport { ChatMessage, ChatMessageFields, ChatMessageChunk } from \"./chat.js\";\nimport {\n  FunctionMessage,\n  FunctionMessageChunk,\n  FunctionMessageFields,\n} from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { RemoveMessage } from \"./modifier.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolCall, ToolMessage, ToolMessageFields } from \"./tool.js\";\n\nexport type $Expand<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;\n\n/**\n * Extracts the explicitly declared keys from a type T.\n *\n * @template T - The type to extract keys from\n * @returns A union of keys that are not string, number, or symbol\n */\ntype $KnownKeys<T> = {\n  [K in keyof T]: string extends K\n    ? never\n    : number extends K\n    ? never\n    : symbol extends K\n    ? never\n    : K;\n}[keyof T];\n\n/**\n * Detects if T has an index signature.\n *\n * @template T - The type to check for index signatures\n * @returns True if T has an index signature, false otherwise\n */\ntype $HasIndexSignature<T> = string extends keyof T\n  ? true\n  : number extends keyof T\n  ? true\n  : symbol extends keyof T\n  ? true\n  : false;\n\n/**\n * Detects if T has an index signature and no known keys.\n *\n * @template T - The type to check for index signatures and no known keys\n * @returns True if T has an index signature and no known keys, false otherwise\n */\ntype $OnlyIndexSignatures<T> = $HasIndexSignature<T> extends true\n  ? [$KnownKeys<T>] extends [never]\n    ? true\n    : false\n  : false;\n\n/**\n * Recursively merges two object types T and U, with U taking precedence over T.\n *\n * This utility type performs a deep merge of two object types:\n * - For keys that exist in both T and U:\n *   - If both values are objects (Record<string, unknown>), recursively merge them\n *   - Otherwise, U's value takes precedence\n * - For keys that exist only in T, use T's value\n * - For keys that exist only in U, use U's value\n *\n * @template T - The first object type to merge\n * @template U - The second object type to merge (takes precedence over T)\n *\n * @example\n * ```ts\n * type ObjectA = {\n *   shared: { a: string; b: number };\n *   onlyInA: boolean;\n * };\n *\n * type ObjectB = {\n *   shared: { b: string; c: Date };\n *   onlyInB: symbol;\n * };\n *\n * type Merged = $MergeObjects<ObjectA, ObjectB>;\n * // Result: {\n * //   shared: { a: string; b: string; c: Date };\n * //   onlyInA: boolean;\n * //   onlyInB: symbol;\n * // }\n * ```\n */\nexport type $MergeObjects<T, U> =\n  // If U is purely index-signature based, prefer U as a whole\n  $OnlyIndexSignatures<U> extends true\n    ? U\n    : // If T is purely index-signature based, prefer U as a whole (prevents leaking broad index signatures)\n    $OnlyIndexSignatures<T> extends true\n    ? U\n    : {\n        [K in keyof T | keyof U]: K extends keyof T\n          ? K extends keyof U\n            ? T[K] extends Record<string, unknown>\n              ? U[K] extends Record<string, unknown>\n                ? $MergeObjects<T[K], U[K]>\n                : U[K]\n              : U[K]\n            : T[K]\n          : K extends keyof U\n          ? U[K]\n          : never;\n      };\n\n/**\n * Merges two discriminated unions A and B based on a discriminator key (defaults to \"type\").\n * For each possible value of the discriminator across both unions:\n * - If B has a member with that discriminator value, use B's member\n * - Otherwise use A's member with that discriminator value\n * This effectively merges the unions while giving B's members precedence over A's members.\n *\n * @template A - First discriminated union type that extends Record<Key, PropertyKey>\n * @template B - Second discriminated union type that extends Record<Key, PropertyKey>\n * @template Key - The discriminator key property, defaults to \"type\"\n */\nexport type $MergeDiscriminatedUnion<\n  A extends Record<Key, PropertyKey>,\n  B extends Record<Key, PropertyKey>,\n  Key extends PropertyKey = \"type\"\n> = {\n  // Create a mapped type over all possible discriminator values from both A and B\n  [T in A[Key] | B[Key]]: [Extract<B, Record<Key, T>>] extends [never] // Check if B has a member with this discriminator value\n    ? // If B doesn't have this discriminator value, use A's member\n      Extract<A, Record<Key, T>>\n    : // If B does have this discriminator value, merge A's and B's members (B takes precedence)\n    [Extract<A, Record<Key, T>>] extends [never]\n    ? Extract<B, Record<Key, T>>\n    : $MergeObjects<Extract<A, Record<Key, T>>, Extract<B, Record<Key, T>>>;\n  // Index into the mapped type with all possible discriminator values\n  // This converts the mapped type back into a union\n}[A[Key] | B[Key]];\n\nexport type Constructor<T> = new (...args: unknown[]) => T;\n\n/**\n * Immediately-invoked function expression.\n *\n * @param fn - The function to execute\n * @returns The result of the function\n */\nexport const iife = <T>(fn: () => T) => fn();\n\nfunction _coerceToolCall(\n  toolCall: ToolCall | Record<string, unknown>\n): ToolCall {\n  if (_isToolCall(toolCall)) {\n    return toolCall;\n  } else if (\n    typeof toolCall.id === \"string\" &&\n    toolCall.type === \"function\" &&\n    typeof toolCall.function === \"object\" &&\n    toolCall.function !== null &&\n    \"arguments\" in toolCall.function &&\n    typeof toolCall.function.arguments === \"string\" &&\n    \"name\" in toolCall.function &&\n    typeof toolCall.function.name === \"string\"\n  ) {\n    // Handle OpenAI tool call format\n    return {\n      id: toolCall.id,\n      args: JSON.parse(toolCall.function.arguments),\n      name: toolCall.function.name,\n      type: \"tool_call\",\n    };\n  } else {\n    // TODO: Throw an error?\n    return toolCall as unknown as ToolCall;\n  }\n}\n\nfunction isSerializedConstructor(x: unknown): x is SerializedConstructor {\n  return (\n    typeof x === \"object\" &&\n    x != null &&\n    (x as SerializedConstructor).lc === 1 &&\n    Array.isArray((x as SerializedConstructor).id) &&\n    (x as SerializedConstructor).kwargs != null &&\n    typeof (x as SerializedConstructor).kwargs === \"object\"\n  );\n}\n\nfunction _constructMessageFromParams(\n  params:\n    | (BaseMessageFields & { type: string } & Record<string, unknown>)\n    | SerializedConstructor\n) {\n  let type: string;\n  let rest: BaseMessageFields & Record<string, unknown>;\n  // Support serialized messages\n  if (isSerializedConstructor(params)) {\n    const className = params.id.at(-1);\n    if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n      type = \"user\";\n    } else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n      type = \"assistant\";\n    } else if (\n      className === \"SystemMessage\" ||\n      className === \"SystemMessageChunk\"\n    ) {\n      type = \"system\";\n    } else if (\n      className === \"FunctionMessage\" ||\n      className === \"FunctionMessageChunk\"\n    ) {\n      type = \"function\";\n    } else if (\n      className === \"ToolMessage\" ||\n      className === \"ToolMessageChunk\"\n    ) {\n      type = \"tool\";\n    } else {\n      type = \"unknown\";\n    }\n    rest = params.kwargs as BaseMessageFields;\n  } else {\n    const { type: extractedType, ...otherParams } = params;\n    type = extractedType;\n    rest = otherParams;\n  }\n  if (type === \"human\" || type === \"user\") {\n    return new HumanMessage(rest);\n  } else if (type === \"ai\" || type === \"assistant\") {\n    const { tool_calls: rawToolCalls, ...other } = rest;\n    if (!Array.isArray(rawToolCalls)) {\n      return new AIMessage(rest);\n    }\n    const tool_calls = rawToolCalls.map(_coerceToolCall);\n    return new AIMessage({ ...other, tool_calls });\n  } else if (type === \"system\") {\n    return new SystemMessage(rest);\n  } else if (type === \"developer\") {\n    return new SystemMessage({\n      ...rest,\n      additional_kwargs: {\n        ...rest.additional_kwargs,\n        __openai_role__: \"developer\",\n      },\n    });\n  } else if (type === \"tool\" && \"tool_call_id\" in rest) {\n    return new ToolMessage({\n      ...rest,\n      content: rest.content,\n      tool_call_id: rest.tool_call_id as string,\n      name: rest.name,\n    });\n  } else if (type === \"remove\" && \"id\" in rest && typeof rest.id === \"string\") {\n    return new RemoveMessage({ ...rest, id: rest.id });\n  } else {\n    const error = addLangChainErrorFields(\n      new Error(\n        `Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(\n          params,\n          null,\n          2\n        )}`\n      ),\n      \"MESSAGE_COERCION_FAILURE\"\n    );\n    throw error;\n  }\n}\n\nexport function coerceMessageLikeToMessage(\n  messageLike: BaseMessageLike\n): BaseMessage {\n  if (typeof messageLike === \"string\") {\n    return new HumanMessage(messageLike);\n  } else if (isBaseMessage(messageLike)) {\n    return messageLike;\n  }\n  if (Array.isArray(messageLike)) {\n    const [type, content] = messageLike;\n    return _constructMessageFromParams({ type, content });\n  } else if (_isMessageFieldWithRole(messageLike)) {\n    const { role: type, ...rest } = messageLike;\n    return _constructMessageFromParams({ ...rest, type });\n  } else {\n    return _constructMessageFromParams(messageLike);\n  }\n}\n\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(\n  messages: BaseMessage[],\n  humanPrefix = \"Human\",\n  aiPrefix = \"AI\"\n): string {\n  const string_messages: string[] = [];\n  for (const m of messages) {\n    let role: string;\n    if (m._getType() === \"human\") {\n      role = humanPrefix;\n    } else if (m._getType() === \"ai\") {\n      role = aiPrefix;\n    } else if (m._getType() === \"system\") {\n      role = \"System\";\n    } else if (m._getType() === \"tool\") {\n      role = \"Tool\";\n    } else if (m._getType() === \"generic\") {\n      role = (m as ChatMessage).role;\n    } else {\n      throw new Error(`Got unsupported message type: ${m._getType()}`);\n    }\n    const nameStr = m.name ? `${m.name}, ` : \"\";\n    const readableContent =\n      typeof m.content === \"string\"\n        ? m.content\n        : JSON.stringify(m.content, null, 2);\n    string_messages.push(`${role}: ${nameStr}${readableContent}`);\n  }\n  return string_messages.join(\"\\n\");\n}\n\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(\n  message: StoredMessage | StoredMessageV1\n): StoredMessage {\n  // TODO: Remove this mapper when we deprecate the old message format.\n  if ((message as StoredMessage).data !== undefined) {\n    return message as StoredMessage;\n  } else {\n    const v1Message = message as StoredMessageV1;\n    return {\n      type: v1Message.type,\n      data: {\n        content: v1Message.text,\n        role: v1Message.role,\n        name: undefined,\n        tool_call_id: undefined,\n      },\n    };\n  }\n}\n\nexport function mapStoredMessageToChatMessage(message: StoredMessage) {\n  const storedMessage = mapV1MessageToStoredMessage(message);\n  switch (storedMessage.type) {\n    case \"human\":\n      return new HumanMessage(storedMessage.data);\n    case \"ai\":\n      return new AIMessage(storedMessage.data);\n    case \"system\":\n      return new SystemMessage(storedMessage.data);\n    case \"function\":\n      if (storedMessage.data.name === undefined) {\n        throw new Error(\"Name must be defined for function messages\");\n      }\n      return new FunctionMessage(storedMessage.data as FunctionMessageFields);\n    case \"tool\":\n      if (storedMessage.data.tool_call_id === undefined) {\n        throw new Error(\"Tool call ID must be defined for tool messages\");\n      }\n      return new ToolMessage(storedMessage.data as ToolMessageFields);\n    case \"generic\": {\n      if (storedMessage.data.role === undefined) {\n        throw new Error(\"Role must be defined for chat messages\");\n      }\n      return new ChatMessage(storedMessage.data as ChatMessageFields);\n    }\n    default:\n      throw new Error(`Got unexpected type: ${storedMessage.type}`);\n  }\n}\n\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(\n  messages: StoredMessage[]\n): BaseMessage[] {\n  return messages.map(mapStoredMessageToChatMessage);\n}\n\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(\n  messages: BaseMessage[]\n): StoredMessage[] {\n  return messages.map((message) => message.toDict());\n}\n\nexport function convertToChunk(message: BaseMessage) {\n  const type = message._getType();\n  if (type === \"human\") {\n    return new HumanMessageChunk({ ...message });\n  } else if (type === \"ai\") {\n    let aiChunkFields: AIMessageChunkFields = {\n      ...message,\n    };\n    if (\"tool_calls\" in aiChunkFields) {\n      aiChunkFields = {\n        ...aiChunkFields,\n        tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n          ...tc,\n          type: \"tool_call_chunk\",\n          index: undefined,\n          args: JSON.stringify(tc.args),\n        })),\n      };\n    }\n    return new AIMessageChunk({ ...aiChunkFields });\n  } else if (type === \"system\") {\n    return new SystemMessageChunk({ ...message });\n  } else if (type === \"function\") {\n    return new FunctionMessageChunk({ ...message });\n  } else if (ChatMessage.isInstance(message)) {\n    return new ChatMessageChunk({ ...message });\n  } else {\n    throw new Error(\"Unknown message type.\");\n  }\n}\n"],"names":["fn: () => T","toolCall: ToolCall | Record<string, unknown>","x: unknown","params:\n    | (BaseMessageFields & { type: string } & Record<string, unknown>)\n    | SerializedConstructor","type: string","rest: BaseMessageFields & Record<string, unknown>","messageLike: BaseMessageLike","messages: BaseMessage[]","string_messages: string[]","role: string","message: StoredMessage | StoredMessageV1","message: StoredMessage","messages: StoredMessage[]","message: BaseMessage","aiChunkFields: AIMessageChunkFields"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3285, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/env.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/env.ts"],"sourcesContent":["// Inlined from https://github.com/flexdinesh/browser-or-node\ndeclare global {\n  const Deno:\n    | {\n        version: {\n          deno: string;\n        };\n        env: {\n          get: (name: string) => string | undefined;\n        };\n      }\n    | undefined;\n}\n\nexport const isBrowser = () =>\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\nexport const isWebWorker = () =>\n  typeof globalThis === \"object\" &&\n  globalThis.constructor &&\n  globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\n\nexport const isJsDom = () =>\n  (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n  (typeof navigator !== \"undefined\" && navigator.userAgent.includes(\"jsdom\"));\n\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () =>\n  typeof process !== \"undefined\" &&\n  typeof process.versions !== \"undefined\" &&\n  typeof process.versions.node !== \"undefined\" &&\n  !isDeno();\n\nexport const getEnv = () => {\n  let env: string;\n  if (isBrowser()) {\n    env = \"browser\";\n  } else if (isNode()) {\n    env = \"node\";\n  } else if (isWebWorker()) {\n    env = \"webworker\";\n  } else if (isJsDom()) {\n    env = \"jsdom\";\n  } else if (isDeno()) {\n    env = \"deno\";\n  } else {\n    env = \"other\";\n  }\n\n  return env;\n};\n\nexport type RuntimeEnvironment = {\n  library: string;\n  libraryVersion?: string;\n  runtime: string;\n  runtimeVersion?: string;\n};\n\nlet runtimeEnvironment: RuntimeEnvironment | undefined;\n\nexport function getRuntimeEnvironment(): RuntimeEnvironment {\n  if (runtimeEnvironment === undefined) {\n    const env = getEnv();\n\n    runtimeEnvironment = {\n      library: \"langchain-js\",\n      runtime: env,\n    };\n  }\n  return runtimeEnvironment;\n}\n\nexport function getEnvironmentVariable(name: string): string | undefined {\n  // Certain Deno setups will throw an error if you try to access environment variables\n  // https://github.com/langchain-ai/langchainjs/issues/1412\n  try {\n    if (typeof process !== \"undefined\") {\n      // eslint-disable-next-line no-process-env\n      return process.env?.[name];\n    } else if (isDeno()) {\n      return Deno?.env.get(name);\n    } else {\n      return undefined;\n    }\n  } catch {\n    return undefined;\n  }\n}\n"],"names":["env: string","runtimeEnvironment: RuntimeEnvironment | undefined","name: string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,MAAa,YAAY,IACvB,OAAO,2CAAW,eAAe,OAAO,OAAO,QAAA,KAAa;AAE9D,MAAa,cAAc,IACzB,OAAO,eAAe,YACtB,WAAW,WAAA,IACX,WAAW,WAAA,CAAY,IAAA,KAAS;AAElC,MAAa,UAAU,IACpB,OAAO,2CAAW,eAAe,OAAO,IAAA,KAAS,YACjD,OAAO,cAAc,eAAe,UAAU,SAAA,CAAU,QAAA,CAAS,QAAQ;AAI5E,MAAa,SAAS,IAAM,OAAO,SAAS;AAG5C,MAAa,SAAS,IACpB,OAAO,YAAY,eACnB,OAAO,QAAQ,QAAA,KAAa,eAC5B,OAAO,QAAQ,QAAA,CAAS,IAAA,KAAS,eACjC,CAAC,QAAQ;AAEX,MAAa,SAAS,MAAM;IAC1B,IAAIA;IACJ,IAAI,WAAW,EACb,MAAM;aACG,QAAQ,EACjB,MAAM;aACG,aAAa,EACtB,MAAM;aACG,SAAS,EAClB,MAAM;aACG,QAAQ,EACjB,MAAM;SAEN,MAAM;IAGR,OAAO;AACR;AASD,IAAIC;AAEJ,SAAgB,wBAA4C;IAC1D,IAAI,uBAAuB,KAAA,GAAW;QACpC,MAAM,MAAM,QAAQ;QAEpB,qBAAqB;YACnB,SAAS;YACT,SAAS;QACV;IACF;IACD,OAAO;AACR;AAED,SAAgB,uBAAuBC,IAAAA,EAAkC;IAGvE,IAAI;QACF,IAAI,OAAO,YAAY,YAErB,CAAA,OAAO,QAAQ,GAAA,EAAA,CAAM,KAAA;iBACZ,QAAQ,CACjB,CAAA,OAAO,MAAM,IAAI,IAAI,KAAK;aAE1B,OAAO,KAAA;IAEV,EAAA,OAAO;QACN,OAAO,KAAA;IACR;AACF","debugId":null}},
    {"offset": {"line": 3360, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/callbacks/base.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/callbacks/base.ts"],"sourcesContent":["import * as uuid from \"uuid\";\nimport type { ChainValues } from \"../utils/types/index.js\";\nimport type { BaseMessage } from \"../messages/base.js\";\nimport type { AgentAction, AgentFinish } from \"../agents.js\";\nimport type {\n  ChatGenerationChunk,\n  GenerationChunk,\n  LLMResult,\n} from \"../outputs.js\";\nimport {\n  Serializable,\n  Serialized,\n  SerializedNotImplemented,\n  get_lc_unique_name,\n} from \"../load/serializable.js\";\nimport type { SerializedFields } from \"../load/map_keys.js\";\nimport type { DocumentInterface } from \"../documents/document.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Error = any;\n\n/**\n * Interface for the input parameters of the BaseCallbackHandler class. It\n * allows to specify which types of events should be ignored by the\n * callback handler.\n */\nexport interface BaseCallbackHandlerInput {\n  ignoreLLM?: boolean;\n  ignoreChain?: boolean;\n  ignoreAgent?: boolean;\n  ignoreRetriever?: boolean;\n  ignoreCustomEvent?: boolean;\n  _awaitHandler?: boolean;\n  raiseError?: boolean;\n}\n\n/**\n * Interface for the indices of a new token produced by an LLM or Chat\n * Model in streaming mode.\n */\nexport interface NewTokenIndices {\n  prompt: number;\n  completion: number;\n}\n\n// TODO: Add all additional callback fields here\nexport type HandleLLMNewTokenCallbackFields = {\n  chunk?: GenerationChunk | ChatGenerationChunk;\n};\n\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nabstract class BaseCallbackHandlerMethodsClass {\n  /**\n   * Called at the start of an LLM or Chat Model run, with the prompt(s)\n   * and the run ID.\n   */\n  handleLLMStart?(\n    llm: Serialized,\n    prompts: string[],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: Record<string, unknown>,\n    tags?: string[],\n    metadata?: Record<string, unknown>,\n    runName?: string\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called when an LLM/ChatModel in `streaming` mode produces a new token\n   */\n  handleLLMNewToken?(\n    token: string,\n    /**\n     * idx.prompt is the index of the prompt that produced the token\n     *   (if there are multiple prompts)\n     * idx.completion is the index of the completion that produced the token\n     *   (if multiple completions per prompt are requested)\n     */\n    idx: NewTokenIndices,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    fields?: HandleLLMNewTokenCallbackFields\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called if an LLM/ChatModel run encounters an error\n   */\n  handleLLMError?(\n    err: Error,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the end of an LLM/ChatModel run, with the output and the run ID.\n   */\n  handleLLMEnd?(\n    output: LLMResult,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the start of a Chat Model run, with the prompt(s)\n   * and the run ID.\n   */\n  handleChatModelStart?(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: Record<string, unknown>,\n    tags?: string[],\n    metadata?: Record<string, unknown>,\n    runName?: string\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the start of a Chain run, with the chain name and inputs\n   * and the run ID.\n   */\n  handleChainStart?(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: Record<string, unknown>,\n    runType?: string,\n    runName?: string\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called if a Chain run encounters an error\n   */\n  handleChainError?(\n    err: Error,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the end of a Chain run, with the outputs and the run ID.\n   */\n  handleChainEnd?(\n    outputs: ChainValues,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the start of a Tool run, with the tool name and input\n   * and the run ID.\n   */\n  handleToolStart?(\n    tool: Serialized,\n    input: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: Record<string, unknown>,\n    runName?: string\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called if a Tool run encounters an error\n   */\n  handleToolError?(\n    err: Error,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  /**\n   * Called at the end of a Tool run, with the tool output and the run ID.\n   */\n  handleToolEnd?(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    output: any,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  handleText?(\n    text: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): Promise<void> | void;\n\n  /**\n   * Called when an agent is about to execute an action,\n   * with the action and the run ID.\n   */\n  handleAgentAction?(\n    action: AgentAction,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): Promise<void> | void;\n\n  /**\n   * Called when an agent finishes execution, before it exits.\n   * with the final output and the run ID.\n   */\n  handleAgentEnd?(\n    action: AgentFinish,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): Promise<void> | void;\n\n  handleRetrieverStart?(\n    retriever: Serialized,\n    query: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: Record<string, unknown>,\n    name?: string\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  handleRetrieverEnd?(\n    documents: DocumentInterface[],\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  handleRetrieverError?(\n    err: Error,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[]\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n\n  handleCustomEvent?(\n    eventName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any,\n    runId: string,\n    tags?: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: Record<string, any>\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> | any;\n}\n\n/**\n * Base interface for callbacks. All methods are optional. If a method is not\n * implemented, it will be ignored. If a method is implemented, it will be\n * called at the appropriate time. All methods are called with the run ID of\n * the LLM/ChatModel/Chain that is running, which is generated by the\n * CallbackManager.\n *\n * @interface\n */\nexport type CallbackHandlerMethods = BaseCallbackHandlerMethodsClass;\n\n/**\n * Interface for handlers that can indicate a preference for streaming responses.\n * When implemented, this allows the handler to signal whether it prefers to receive\n * streaming responses from language models rather than complete responses.\n */\nexport interface CallbackHandlerPrefersStreaming {\n  readonly lc_prefer_streaming: boolean;\n}\n\nexport function callbackHandlerPrefersStreaming(x: BaseCallbackHandler) {\n  return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport abstract class BaseCallbackHandler\n  extends BaseCallbackHandlerMethodsClass\n  implements BaseCallbackHandlerInput, Serializable\n{\n  lc_serializable = false;\n\n  get lc_namespace(): [\"langchain_core\", \"callbacks\", string] {\n    return [\"langchain_core\", \"callbacks\", this.name];\n  }\n\n  get lc_secrets(): { [key: string]: string } | undefined {\n    return undefined;\n  }\n\n  get lc_attributes(): { [key: string]: string } | undefined {\n    return undefined;\n  }\n\n  get lc_aliases(): { [key: string]: string } | undefined {\n    return undefined;\n  }\n\n  get lc_serializable_keys(): string[] | undefined {\n    return undefined;\n  }\n\n  /**\n   * The name of the serializable. Override to provide an alias or\n   * to preserve the serialized module name in minified environments.\n   *\n   * Implemented as a static method to support loading logic.\n   */\n  static lc_name(): string {\n    return this.name;\n  }\n\n  /**\n   * The final serialized identifier for the module.\n   */\n  get lc_id(): string[] {\n    return [\n      ...this.lc_namespace,\n      get_lc_unique_name(this.constructor as typeof BaseCallbackHandler),\n    ];\n  }\n\n  lc_kwargs: SerializedFields;\n\n  abstract name: string;\n\n  ignoreLLM = false;\n\n  ignoreChain = false;\n\n  ignoreAgent = false;\n\n  ignoreRetriever = false;\n\n  ignoreCustomEvent = false;\n\n  raiseError = false;\n\n  awaitHandlers =\n    getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\";\n\n  constructor(input?: BaseCallbackHandlerInput) {\n    super();\n    this.lc_kwargs = input || {};\n    if (input) {\n      this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n      this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n      this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n      this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n      this.ignoreCustomEvent =\n        input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n      this.raiseError = input.raiseError ?? this.raiseError;\n      this.awaitHandlers =\n        this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n    }\n  }\n\n  copy(): BaseCallbackHandler {\n    return new (this.constructor as new (\n      input?: BaseCallbackHandlerInput\n    ) => BaseCallbackHandler)(this);\n  }\n\n  toJSON(): Serialized {\n    return Serializable.prototype.toJSON.call(this);\n  }\n\n  toJSONNotImplemented(): SerializedNotImplemented {\n    return Serializable.prototype.toJSONNotImplemented.call(this);\n  }\n\n  static fromMethods(methods: CallbackHandlerMethods) {\n    class Handler extends BaseCallbackHandler {\n      name = uuid.v4();\n\n      constructor() {\n        super();\n        Object.assign(this, methods);\n      }\n    }\n    return new Handler();\n  }\n}\n\nexport const isBaseCallbackHandler = (x: unknown) => {\n  const callbackHandler = x as BaseCallbackHandler;\n  return (\n    callbackHandler !== undefined &&\n    typeof callbackHandler.copy === \"function\" &&\n    typeof callbackHandler.name === \"string\" &&\n    typeof callbackHandler.awaitHandlers === \"boolean\"\n  );\n};\n"],"names":["x: BaseCallbackHandler","input?: BaseCallbackHandlerInput","methods: CallbackHandlerMethods","x: unknown"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwDA,IAAe,kCAAf,MAA+C;AA4N9C;AAsBD,SAAgB,gCAAgCA,CAAAA,EAAwB;IACtE,OAAO,yBAAyB,KAAK,EAAE,mBAAA;AACxC;;;;;;GAQD,IAAsB,sBAAtB,cACU,gCAEV;IACE,kBAAkB,MAAA;IAElB,IAAI,eAAwD;QAC1D,OAAO;YAAC;YAAkB;YAAa,IAAA,CAAK,IAAA;SAAK;IAClD;IAED,IAAI,aAAoD;QACtD,OAAO,KAAA;IACR;IAED,IAAI,gBAAuD;QACzD,OAAO,KAAA;IACR;IAED,IAAI,aAAoD;QACtD,OAAO,KAAA;IACR;IAED,IAAI,uBAA6C;QAC/C,OAAO,KAAA;IACR;;;;;;IAQD,OAAO,UAAkB;QACvB,OAAO,IAAA,CAAK,IAAA;IACb;;;IAKD,IAAI,QAAkB;QACpB,OAAO,CACL;eAAG,IAAA,CAAK,YAAA;gBACR,qSAAA,EAAmB,IAAA,CAAK,WAAA,CAA0C,AACnE;SAAA;IACF;IAED,UAAA;IAIA,YAAY,MAAA;IAEZ,cAAc,MAAA;IAEd,cAAc,MAAA;IAEd,kBAAkB,MAAA;IAElB,oBAAoB,MAAA;IAEpB,aAAa,MAAA;IAEb,oBACE,iSAAA,EAAuB,iCAAiC,KAAK,QAAA;IAE/D,YAAYC,KAAAA,CAAkC;QAC5C,KAAA,EAAO;QACP,IAAA,CAAK,SAAA,GAAY,SAAS,CAAE;QAC5B,IAAI,OAAO;YACT,IAAA,CAAK,SAAA,GAAY,MAAM,SAAA,IAAa,IAAA,CAAK,SAAA;YACzC,IAAA,CAAK,WAAA,GAAc,MAAM,WAAA,IAAe,IAAA,CAAK,WAAA;YAC7C,IAAA,CAAK,WAAA,GAAc,MAAM,WAAA,IAAe,IAAA,CAAK,WAAA;YAC7C,IAAA,CAAK,eAAA,GAAkB,MAAM,eAAA,IAAmB,IAAA,CAAK,eAAA;YACrD,IAAA,CAAK,iBAAA,GACH,MAAM,iBAAA,IAAqB,IAAA,CAAK,iBAAA;YAClC,IAAA,CAAK,UAAA,GAAa,MAAM,UAAA,IAAc,IAAA,CAAK,UAAA;YAC3C,IAAA,CAAK,aAAA,GACH,IAAA,CAAK,UAAA,IAAA,CAAe,MAAM,aAAA,IAAiB,IAAA,CAAK,aAAA;QACnD;IACF;IAED,OAA4B;QAC1B,OAAO,IAAK,IAAA,CAAK,WAAA,CAES,IAAA;IAC3B;IAED,SAAqB;QACnB,OAAO,+RAAA,CAAa,SAAA,CAAU,MAAA,CAAO,IAAA,CAAK,IAAA,CAAK;IAChD;IAED,uBAAiD;QAC/C,OAAO,+RAAA,CAAa,SAAA,CAAU,oBAAA,CAAqB,IAAA,CAAK,IAAA,CAAK;IAC9D;IAED,OAAO,YAAYC,OAAAA,EAAiC;QAClD,MAAM,gBAAgB,oBAAoB;YACxC,OAAO,KAAK,uOAAA,EAAI,CAAA;YAEhB,aAAc;gBACZ,KAAA,EAAO;gBACP,OAAO,MAAA,CAAO,IAAA,EAAM,QAAQ;YAC7B;QACF;QACD,OAAO,IAAI;IACZ;AACF;AAED,MAAa,wBAAwB,CAACC,MAAe;IACnD,MAAM,kBAAkB;IACxB,OACE,oBAAoB,KAAA,KACpB,OAAO,gBAAgB,IAAA,KAAS,cAChC,OAAO,gBAAgB,IAAA,KAAS,YAChC,OAAO,gBAAgB,aAAA,KAAkB;AAE5C","debugId":null}},
    {"offset": {"line": 3487, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/base.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/base.ts"],"sourcesContent":["import { KVMap, BaseRun } from \"langsmith/schemas\";\nimport { RunTree, convertToDottedOrderFormat } from \"langsmith/run_trees\";\n\nimport type { ChainValues } from \"../utils/types/index.js\";\nimport type { AgentAction, AgentFinish } from \"../agents.js\";\nimport type { LLMResult } from \"../outputs.js\";\nimport type { BaseMessage } from \"../messages/base.js\";\nimport { Serialized } from \"../load/serializable.js\";\nimport {\n  BaseCallbackHandler,\n  BaseCallbackHandlerInput,\n  HandleLLMNewTokenCallbackFields,\n  NewTokenIndices,\n} from \"../callbacks/base.js\";\nimport type { Document } from \"../documents/document.js\";\nimport { getRuntimeEnvironment } from \"../utils/env.js\";\n\nexport type RunType = string;\n\n// TODO: Remove this type and just use the base LangSmith Run type.\nexport interface Run extends BaseRun {\n  // some optional fields are always present here\n  id: string;\n  start_time: number;\n  end_time?: number;\n  execution_order: number;\n  // some additional fields that don't exist in sdk runs\n  child_runs: this[];\n  child_execution_order: number;\n  events: Array<{\n    name: string;\n    time: string;\n    kwargs?: Record<string, unknown>;\n  }>;\n  trace_id?: string;\n  dotted_order?: string;\n  /** @internal */\n  _serialized_start_time?: string;\n}\n\n// TODO: Remove and just use base LangSmith Run type\nconst convertRunTreeToRun = (runTree?: RunTree): Run | undefined => {\n  if (!runTree) {\n    return undefined;\n  }\n  // Important that we return the raw run tree object since the reference\n  // is mutated in other places.\n  // TODO: Remove places where this is being done.\n\n  runTree.events = runTree.events ?? [];\n  runTree.child_runs = runTree.child_runs ?? [];\n  // TODO: Remove this cast and just use the LangSmith RunTree type.\n  return runTree as unknown as Run;\n};\n\nfunction convertRunToRunTree(run?: Run, parentRun?: Run): RunTree | undefined {\n  if (!run) {\n    return undefined;\n  }\n  return new RunTree({\n    ...run,\n    start_time: run._serialized_start_time ?? run.start_time,\n    parent_run: convertRunToRunTree(parentRun),\n    child_runs: run.child_runs\n      .map((r) => convertRunToRunTree(r))\n      .filter((r): r is RunTree => r !== undefined),\n    extra: {\n      ...run.extra,\n      runtime: getRuntimeEnvironment(),\n    },\n    tracingEnabled: false,\n  });\n}\n\nexport interface AgentRun extends Run {\n  actions: AgentAction[];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value: any, defaultKey: string) {\n  return value && !Array.isArray(value) && typeof value === \"object\"\n    ? value\n    : { [defaultKey]: value };\n}\n\nexport function isBaseTracer(x: BaseCallbackHandler): x is BaseTracer {\n  return typeof (x as BaseTracer)._addRunToRunMap === \"function\";\n}\n\nexport abstract class BaseTracer extends BaseCallbackHandler {\n  /** @deprecated Use `runTreeMap` instead. */\n  protected runMap: Map<string, Run> = new Map();\n\n  protected runTreeMap: Map<string, RunTree> = new Map();\n\n  protected usesRunTreeMap = false;\n\n  constructor(_fields?: BaseCallbackHandlerInput) {\n    super(...arguments);\n  }\n\n  copy(): this {\n    return this;\n  }\n\n  protected getRunById(runId?: string): Run | undefined {\n    if (runId === undefined) {\n      return undefined;\n    }\n    return this.usesRunTreeMap\n      ? convertRunTreeToRun(this.runTreeMap.get(runId))\n      : this.runMap.get(runId);\n  }\n\n  protected stringifyError(error: unknown) {\n    // eslint-disable-next-line no-instanceof/no-instanceof\n    if (error instanceof Error) {\n      return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n    }\n\n    if (typeof error === \"string\") {\n      return error;\n    }\n\n    return `${error}`;\n  }\n\n  protected abstract persistRun(run: Run): Promise<void>;\n\n  protected _addChildRun(parentRun: Run, childRun: Run) {\n    parentRun.child_runs.push(childRun);\n  }\n\n  _addRunToRunMap(run: Run) {\n    const { dottedOrder: currentDottedOrder, microsecondPrecisionDatestring } =\n      convertToDottedOrderFormat(\n        new Date(run.start_time).getTime(),\n        run.id,\n        run.execution_order\n      );\n    const storedRun = { ...run };\n    const parentRun = this.getRunById(storedRun.parent_run_id);\n    if (storedRun.parent_run_id !== undefined) {\n      if (parentRun) {\n        this._addChildRun(parentRun, storedRun);\n        parentRun.child_execution_order = Math.max(\n          parentRun.child_execution_order,\n          storedRun.child_execution_order\n        );\n        storedRun.trace_id = parentRun.trace_id;\n        if (parentRun.dotted_order !== undefined) {\n          storedRun.dotted_order = [\n            parentRun.dotted_order,\n            currentDottedOrder,\n          ].join(\".\");\n          storedRun._serialized_start_time = microsecondPrecisionDatestring;\n        } else {\n          // This can happen naturally for callbacks added within a run\n          // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n        }\n      } else {\n        // This can happen naturally for callbacks added within a run\n        // console.debug(\n        //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n        // );\n      }\n    } else {\n      storedRun.trace_id = storedRun.id;\n      storedRun.dotted_order = currentDottedOrder;\n      storedRun._serialized_start_time = microsecondPrecisionDatestring;\n    }\n    if (this.usesRunTreeMap) {\n      const runTree = convertRunToRunTree(storedRun, parentRun);\n      if (runTree !== undefined) {\n        this.runTreeMap.set(storedRun.id, runTree);\n      }\n    } else {\n      this.runMap.set(storedRun.id, storedRun);\n    }\n    return storedRun;\n  }\n\n  protected async _endTrace(run: Run): Promise<void> {\n    const parentRun =\n      run.parent_run_id !== undefined && this.getRunById(run.parent_run_id);\n    if (parentRun) {\n      parentRun.child_execution_order = Math.max(\n        parentRun.child_execution_order,\n        run.child_execution_order\n      );\n    } else {\n      await this.persistRun(run);\n    }\n    await this.onRunUpdate?.(run);\n    if (this.usesRunTreeMap) {\n      this.runTreeMap.delete(run.id);\n    } else {\n      this.runMap.delete(run.id);\n    }\n  }\n\n  protected _getExecutionOrder(parentRunId: string | undefined): number {\n    const parentRun = parentRunId !== undefined && this.getRunById(parentRunId);\n    // If a run has no parent then execution order is 1\n    if (!parentRun) {\n      return 1;\n    }\n\n    return parentRun.child_execution_order + 1;\n  }\n\n  /**\n   * Create and add a run to the run map for LLM start events.\n   * This must sometimes be done synchronously to avoid race conditions\n   * when callbacks are backgrounded, so we expose it as a separate method here.\n   */\n  _createRunForLLMStart(\n    llm: Serialized,\n    prompts: string[],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: KVMap,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ) {\n    const execution_order = this._getExecutionOrder(parentRunId);\n    const start_time = Date.now();\n    const finalExtraParams = metadata\n      ? { ...extraParams, metadata }\n      : extraParams;\n    const run: Run = {\n      id: runId,\n      name: name ?? llm.id[llm.id.length - 1],\n      parent_run_id: parentRunId,\n      start_time,\n      serialized: llm,\n      events: [\n        {\n          name: \"start\",\n          time: new Date(start_time).toISOString(),\n        },\n      ],\n      inputs: { prompts },\n      execution_order,\n      child_runs: [],\n      child_execution_order: execution_order,\n      run_type: \"llm\",\n      extra: finalExtraParams ?? {},\n      tags: tags || [],\n    };\n    return this._addRunToRunMap(run);\n  }\n\n  async handleLLMStart(\n    llm: Serialized,\n    prompts: string[],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: KVMap,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ): Promise<Run> {\n    const run =\n      this.getRunById(runId) ??\n      this._createRunForLLMStart(\n        llm,\n        prompts,\n        runId,\n        parentRunId,\n        extraParams,\n        tags,\n        metadata,\n        name\n      );\n    await this.onRunCreate?.(run);\n    await this.onLLMStart?.(run);\n    return run;\n  }\n\n  /**\n   * Create and add a run to the run map for chat model start events.\n   * This must sometimes be done synchronously to avoid race conditions\n   * when callbacks are backgrounded, so we expose it as a separate method here.\n   */\n  _createRunForChatModelStart(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: KVMap,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ) {\n    const execution_order = this._getExecutionOrder(parentRunId);\n    const start_time = Date.now();\n    const finalExtraParams = metadata\n      ? { ...extraParams, metadata }\n      : extraParams;\n    const run: Run = {\n      id: runId,\n      name: name ?? llm.id[llm.id.length - 1],\n      parent_run_id: parentRunId,\n      start_time,\n      serialized: llm,\n      events: [\n        {\n          name: \"start\",\n          time: new Date(start_time).toISOString(),\n        },\n      ],\n      inputs: { messages },\n      execution_order,\n      child_runs: [],\n      child_execution_order: execution_order,\n      run_type: \"llm\",\n      extra: finalExtraParams ?? {},\n      tags: tags || [],\n    };\n    return this._addRunToRunMap(run);\n  }\n\n  async handleChatModelStart(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string,\n    parentRunId?: string,\n    extraParams?: KVMap,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ): Promise<Run> {\n    const run =\n      this.getRunById(runId) ??\n      this._createRunForChatModelStart(\n        llm,\n        messages,\n        runId,\n        parentRunId,\n        extraParams,\n        tags,\n        metadata,\n        name\n      );\n    await this.onRunCreate?.(run);\n    await this.onLLMStart?.(run);\n    return run;\n  }\n\n  async handleLLMEnd(\n    output: LLMResult,\n    runId: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"llm\") {\n      throw new Error(\"No LLM run to end.\");\n    }\n    run.end_time = Date.now();\n    run.outputs = output;\n    run.events.push({\n      name: \"end\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    run.extra = { ...run.extra, ...extraParams };\n    await this.onLLMEnd?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleLLMError(\n    error: unknown,\n    runId: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"llm\") {\n      throw new Error(\"No LLM run to end.\");\n    }\n    run.end_time = Date.now();\n    run.error = this.stringifyError(error);\n    run.events.push({\n      name: \"error\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    run.extra = { ...run.extra, ...extraParams };\n    await this.onLLMError?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  /**\n   * Create and add a run to the run map for chain start events.\n   * This must sometimes be done synchronously to avoid race conditions\n   * when callbacks are backgrounded, so we expose it as a separate method here.\n   */\n  _createRunForChainStart(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    runType?: string,\n    name?: string\n  ) {\n    const execution_order = this._getExecutionOrder(parentRunId);\n    const start_time = Date.now();\n    const run: Run = {\n      id: runId,\n      name: name ?? chain.id[chain.id.length - 1],\n      parent_run_id: parentRunId,\n      start_time,\n      serialized: chain,\n      events: [\n        {\n          name: \"start\",\n          time: new Date(start_time).toISOString(),\n        },\n      ],\n      inputs,\n      execution_order,\n      child_execution_order: execution_order,\n      run_type: runType ?? \"chain\",\n      child_runs: [],\n      extra: metadata ? { metadata } : {},\n      tags: tags || [],\n    };\n    return this._addRunToRunMap(run);\n  }\n\n  async handleChainStart(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    runType?: string,\n    name?: string\n  ): Promise<Run> {\n    const run =\n      this.getRunById(runId) ??\n      this._createRunForChainStart(\n        chain,\n        inputs,\n        runId,\n        parentRunId,\n        tags,\n        metadata,\n        runType,\n        name\n      );\n    await this.onRunCreate?.(run);\n    await this.onChainStart?.(run);\n    return run;\n  }\n\n  async handleChainEnd(\n    outputs: ChainValues,\n    runId: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run) {\n      throw new Error(\"No chain run to end.\");\n    }\n    run.end_time = Date.now();\n    run.outputs = _coerceToDict(outputs, \"output\");\n    run.events.push({\n      name: \"end\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    if (kwargs?.inputs !== undefined) {\n      run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n    }\n    await this.onChainEnd?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleChainError(\n    error: unknown,\n    runId: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run) {\n      throw new Error(\"No chain run to end.\");\n    }\n    run.end_time = Date.now();\n    run.error = this.stringifyError(error);\n    run.events.push({\n      name: \"error\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    if (kwargs?.inputs !== undefined) {\n      run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n    }\n    await this.onChainError?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  /**\n   * Create and add a run to the run map for tool start events.\n   * This must sometimes be done synchronously to avoid race conditions\n   * when callbacks are backgrounded, so we expose it as a separate method here.\n   */\n  _createRunForToolStart(\n    tool: Serialized,\n    input: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ) {\n    const execution_order = this._getExecutionOrder(parentRunId);\n    const start_time = Date.now();\n    const run: Run = {\n      id: runId,\n      name: name ?? tool.id[tool.id.length - 1],\n      parent_run_id: parentRunId,\n      start_time,\n      serialized: tool,\n      events: [\n        {\n          name: \"start\",\n          time: new Date(start_time).toISOString(),\n        },\n      ],\n      inputs: { input },\n      execution_order,\n      child_execution_order: execution_order,\n      run_type: \"tool\",\n      child_runs: [],\n      extra: metadata ? { metadata } : {},\n      tags: tags || [],\n    };\n    return this._addRunToRunMap(run);\n  }\n\n  async handleToolStart(\n    tool: Serialized,\n    input: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ): Promise<Run> {\n    const run =\n      this.getRunById(runId) ??\n      this._createRunForToolStart(\n        tool,\n        input,\n        runId,\n        parentRunId,\n        tags,\n        metadata,\n        name\n      );\n    await this.onRunCreate?.(run);\n    await this.onToolStart?.(run);\n    return run;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async handleToolEnd(output: any, runId: string): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"tool\") {\n      throw new Error(\"No tool run to end\");\n    }\n    run.end_time = Date.now();\n    run.outputs = { output };\n    run.events.push({\n      name: \"end\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    await this.onToolEnd?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleToolError(error: unknown, runId: string): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"tool\") {\n      throw new Error(\"No tool run to end\");\n    }\n    run.end_time = Date.now();\n    run.error = this.stringifyError(error);\n    run.events.push({\n      name: \"error\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    await this.onToolError?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleAgentAction(action: AgentAction, runId: string): Promise<void> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"chain\") {\n      return;\n    }\n    const agentRun = run as AgentRun;\n    agentRun.actions = agentRun.actions || [];\n    agentRun.actions.push(action);\n    agentRun.events.push({\n      name: \"agent_action\",\n      time: new Date().toISOString(),\n      kwargs: { action },\n    });\n    await this.onAgentAction?.(run as AgentRun);\n  }\n\n  async handleAgentEnd(action: AgentFinish, runId: string): Promise<void> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"chain\") {\n      return;\n    }\n    run.events.push({\n      name: \"agent_end\",\n      time: new Date().toISOString(),\n      kwargs: { action },\n    });\n    await this.onAgentEnd?.(run);\n  }\n\n  /**\n   * Create and add a run to the run map for retriever start events.\n   * This must sometimes be done synchronously to avoid race conditions\n   * when callbacks are backgrounded, so we expose it as a separate method here.\n   */\n  _createRunForRetrieverStart(\n    retriever: Serialized,\n    query: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ) {\n    const execution_order = this._getExecutionOrder(parentRunId);\n    const start_time = Date.now();\n    const run: Run = {\n      id: runId,\n      name: name ?? retriever.id[retriever.id.length - 1],\n      parent_run_id: parentRunId,\n      start_time,\n      serialized: retriever,\n      events: [\n        {\n          name: \"start\",\n          time: new Date(start_time).toISOString(),\n        },\n      ],\n      inputs: { query },\n      execution_order,\n      child_execution_order: execution_order,\n      run_type: \"retriever\",\n      child_runs: [],\n      extra: metadata ? { metadata } : {},\n      tags: tags || [],\n    };\n    return this._addRunToRunMap(run);\n  }\n\n  async handleRetrieverStart(\n    retriever: Serialized,\n    query: string,\n    runId: string,\n    parentRunId?: string,\n    tags?: string[],\n    metadata?: KVMap,\n    name?: string\n  ): Promise<Run> {\n    const run =\n      this.getRunById(runId) ??\n      this._createRunForRetrieverStart(\n        retriever,\n        query,\n        runId,\n        parentRunId,\n        tags,\n        metadata,\n        name\n      );\n    await this.onRunCreate?.(run);\n    await this.onRetrieverStart?.(run);\n    return run;\n  }\n\n  async handleRetrieverEnd(\n    documents: Document<Record<string, unknown>>[],\n    runId: string\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"retriever\") {\n      throw new Error(\"No retriever run to end\");\n    }\n    run.end_time = Date.now();\n    run.outputs = { documents };\n    run.events.push({\n      name: \"end\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    await this.onRetrieverEnd?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleRetrieverError(error: unknown, runId: string): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"retriever\") {\n      throw new Error(\"No retriever run to end\");\n    }\n    run.end_time = Date.now();\n    run.error = this.stringifyError(error);\n    run.events.push({\n      name: \"error\",\n      time: new Date(run.end_time).toISOString(),\n    });\n    await this.onRetrieverError?.(run);\n    await this._endTrace(run);\n    return run;\n  }\n\n  async handleText(text: string, runId: string): Promise<void> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"chain\") {\n      return;\n    }\n    run.events.push({\n      name: \"text\",\n      time: new Date().toISOString(),\n      kwargs: { text },\n    });\n    await this.onText?.(run);\n  }\n\n  async handleLLMNewToken(\n    token: string,\n    idx: NewTokenIndices,\n    runId: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    fields?: HandleLLMNewTokenCallbackFields\n  ): Promise<Run> {\n    const run = this.getRunById(runId);\n    if (!run || run?.run_type !== \"llm\") {\n      throw new Error(\n        `Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`\n      );\n    }\n    run.events.push({\n      name: \"new_token\",\n      time: new Date().toISOString(),\n      kwargs: { token, idx, chunk: fields?.chunk },\n    });\n    await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n    return run;\n  }\n\n  // custom event handlers\n\n  onRunCreate?(run: Run): void | Promise<void>;\n\n  onRunUpdate?(run: Run): void | Promise<void>;\n\n  onLLMStart?(run: Run): void | Promise<void>;\n\n  onLLMEnd?(run: Run): void | Promise<void>;\n\n  onLLMError?(run: Run): void | Promise<void>;\n\n  onChainStart?(run: Run): void | Promise<void>;\n\n  onChainEnd?(run: Run): void | Promise<void>;\n\n  onChainError?(run: Run): void | Promise<void>;\n\n  onToolStart?(run: Run): void | Promise<void>;\n\n  onToolEnd?(run: Run): void | Promise<void>;\n\n  onToolError?(run: Run): void | Promise<void>;\n\n  onAgentAction?(run: Run): void | Promise<void>;\n\n  onAgentEnd?(run: Run): void | Promise<void>;\n\n  onRetrieverStart?(run: Run): void | Promise<void>;\n\n  onRetrieverEnd?(run: Run): void | Promise<void>;\n\n  onRetrieverError?(run: Run): void | Promise<void>;\n\n  onText?(run: Run): void | Promise<void>;\n\n  onLLMNewToken?(\n    run: Run,\n    token: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs?: { chunk: any }\n  ): void | Promise<void>;\n}\n"],"names":["runTree?: RunTree","run?: Run","parentRun?: Run","value: any","defaultKey: string","x: BaseCallbackHandler","_fields?: BaseCallbackHandlerInput","runId?: string","error: unknown","parentRun: Run","childRun: Run","run: Run","parentRunId: string | undefined","llm: Serialized","prompts: string[]","runId: string","parentRunId?: string","extraParams?: KVMap","tags?: string[]","metadata?: KVMap","name?: string","messages: BaseMessage[][]","output: LLMResult","_parentRunId?: string","_tags?: string[]","extraParams?: Record<string, unknown>","chain: Serialized","inputs: ChainValues","runType?: string","outputs: ChainValues","kwargs?: { inputs?: Record<string, unknown> }","tool: Serialized","input: string","output: any","action: AgentAction","action: AgentFinish","retriever: Serialized","query: string","documents: Document<Record<string, unknown>>[]","text: string","token: string","idx: NewTokenIndices","fields?: HandleLLMNewTokenCallbackFields"],"mappings":"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","debugId":null}},
    {"offset": {"line": 3981, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/console.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/console.ts"],"sourcesContent":["import type { CSPair } from \"ansi-styles\";\nimport styles from \"ansi-styles\";\nimport { BaseTracer, type AgentRun, type Run } from \"./base.js\";\n\nfunction wrap(style: CSPair, text: string) {\n  return `${style.open}${text}${style.close}`;\n}\n\nfunction tryJsonStringify(obj: unknown, fallback: string) {\n  try {\n    return JSON.stringify(obj, null, 2);\n  } catch {\n    return fallback;\n  }\n}\n\nfunction formatKVMapItem(value: unknown) {\n  if (typeof value === \"string\") {\n    return value.trim();\n  }\n\n  if (value === null || value === undefined) {\n    return value;\n  }\n\n  return tryJsonStringify(value, value.toString());\n}\n\nfunction elapsed(run: Run): string {\n  if (!run.end_time) return \"\";\n  const elapsed = run.end_time - run.start_time;\n  if (elapsed < 1000) {\n    return `${elapsed}ms`;\n  }\n  return `${(elapsed / 1000).toFixed(2)}s`;\n}\n\nconst { color } = styles;\n\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n  name = \"console_callback_handler\" as const;\n\n  /**\n   * Method used to persist the run. In this case, it simply returns a\n   * resolved promise as there's no persistence logic.\n   * @param _run The run to persist.\n   * @returns A resolved promise.\n   */\n  protected persistRun(_run: Run) {\n    return Promise.resolve();\n  }\n\n  // utility methods\n\n  /**\n   * Method used to get all the parent runs of a given run.\n   * @param run The run whose parents are to be retrieved.\n   * @returns An array of parent runs.\n   */\n  getParents(run: Run) {\n    const parents: Run[] = [];\n    let currentRun = run;\n    while (currentRun.parent_run_id) {\n      const parent = this.runMap.get(currentRun.parent_run_id);\n      if (parent) {\n        parents.push(parent);\n        currentRun = parent;\n      } else {\n        break;\n      }\n    }\n    return parents;\n  }\n\n  /**\n   * Method used to get a string representation of the run's lineage, which\n   * is used in logging.\n   * @param run The run whose lineage is to be retrieved.\n   * @returns A string representation of the run's lineage.\n   */\n  getBreadcrumbs(run: Run) {\n    const parents = this.getParents(run).reverse();\n    const string = [...parents, run]\n      .map((parent, i, arr) => {\n        const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n        return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n      })\n      .join(\" > \");\n    return wrap(color.grey, string);\n  }\n\n  // logging methods\n\n  /**\n   * Method used to log the start of a chain run.\n   * @param run The chain run that has started.\n   * @returns void\n   */\n  onChainStart(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(\n        color.green,\n        \"[chain/start]\"\n      )} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(\n        run.inputs,\n        \"[inputs]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the end of a chain run.\n   * @param run The chain run that has ended.\n   * @returns void\n   */\n  onChainEnd(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Exiting Chain run with output: ${tryJsonStringify(\n        run.outputs,\n        \"[outputs]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log any errors of a chain run.\n   * @param run The chain run that has errored.\n   * @returns void\n   */\n  onChainError(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Chain run errored with error: ${tryJsonStringify(\n        run.error,\n        \"[error]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the start of an LLM run.\n   * @param run The LLM run that has started.\n   * @returns void\n   */\n  onLLMStart(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    const inputs =\n      \"prompts\" in run.inputs\n        ? { prompts: (run.inputs.prompts as string[]).map((p) => p.trim()) }\n        : run.inputs;\n    console.log(\n      `${wrap(\n        color.green,\n        \"[llm/start]\"\n      )} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(\n        inputs,\n        \"[inputs]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the end of an LLM run.\n   * @param run The LLM run that has ended.\n   * @returns void\n   */\n  onLLMEnd(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Exiting LLM run with output: ${tryJsonStringify(\n        run.outputs,\n        \"[response]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log any errors of an LLM run.\n   * @param run The LLM run that has errored.\n   * @returns void\n   */\n  onLLMError(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(\n        run\n      )}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`\n    );\n  }\n\n  /**\n   * Method used to log the start of a tool run.\n   * @param run The tool run that has started.\n   * @returns void\n   */\n  onToolStart(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(\n        color.green,\n        \"[tool/start]\"\n      )} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(\n        run.inputs.input\n      )}\"`\n    );\n  }\n\n  /**\n   * Method used to log the end of a tool run.\n   * @param run The tool run that has ended.\n   * @returns void\n   */\n  onToolEnd(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n\n    console.log(\n      `${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Exiting Tool run with output: \"${formatKVMapItem(\n        run.outputs?.output\n      )}\"`\n    );\n  }\n\n  /**\n   * Method used to log any errors of a tool run.\n   * @param run The tool run that has errored.\n   * @returns void\n   */\n  onToolError(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Tool run errored with error: ${tryJsonStringify(\n        run.error,\n        \"[error]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the start of a retriever run.\n   * @param run The retriever run that has started.\n   * @returns void\n   */\n  onRetrieverStart(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(\n        color.green,\n        \"[retriever/start]\"\n      )} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(\n        run.inputs,\n        \"[inputs]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the end of a retriever run.\n   * @param run The retriever run that has ended.\n   * @returns void\n   */\n  onRetrieverEnd(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Exiting Retriever run with output: ${tryJsonStringify(\n        run.outputs,\n        \"[outputs]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log any errors of a retriever run.\n   * @param run The retriever run that has errored.\n   * @returns void\n   */\n  onRetrieverError(run: Run) {\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(\n        run\n      )}] Retriever run errored with error: ${tryJsonStringify(\n        run.error,\n        \"[error]\"\n      )}`\n    );\n  }\n\n  /**\n   * Method used to log the action selected by the agent.\n   * @param run The run in which the agent action occurred.\n   * @returns void\n   */\n  onAgentAction(run: Run) {\n    const agentRun = run as AgentRun;\n    const crumbs = this.getBreadcrumbs(run);\n    console.log(\n      `${wrap(\n        color.blue,\n        \"[agent/action]\"\n      )} [${crumbs}] Agent selected action: ${tryJsonStringify(\n        agentRun.actions[agentRun.actions.length - 1],\n        \"[action]\"\n      )}`\n    );\n  }\n}\n"],"names":["style: CSPair","text: string","obj: unknown","fallback: string","value: unknown","run: Run","elapsed","_run: Run","parents: Run[]"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4191, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/tracer.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/tracer.ts"],"sourcesContent":["import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n\nlet client: Client;\n\nexport const getDefaultLangChainClientSingleton = () => {\n  if (client === undefined) {\n    const clientParams =\n      getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        ? {\n            // LangSmith has its own backgrounding system\n            blockOnRootRunFinalization: true,\n          }\n        : {};\n    client = new Client(clientParams);\n  }\n  return client;\n};\n\nexport const setDefaultLangChainClientSingleton = (newClient: Client) => {\n  client = newClient;\n};\n"],"names":["client: Client"],"mappings":";;;;;;;;;;AAGA,IAAIA;AAEJ,MAAa,qCAAqC,MAAM;IACtD,IAAI,WAAW,KAAA,GAAW;QACxB,MAAM,mBACJ,iSAAA,EAAuB,iCAAiC,KAAK,UACzD;YAEE,4BAA4B;QAC7B,IACD,CAAE;QACR,SAAS,IAAI,4PAAA,CAAO;IACrB;IACD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 4217, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/tracer_langchain.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/tracer_langchain.ts"],"sourcesContent":["import {\n  type Client,\n  type LangSmithTracingClientInterface,\n  getDefaultProjectName,\n} from \"langsmith\";\nimport { RunTree, type RunTreeConfig } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\n\nimport {\n  BaseRun,\n  RunCreate,\n  RunUpdate as BaseRunUpdate,\n  KVMap,\n} from \"langsmith/schemas\";\nimport { BaseTracer } from \"./base.js\";\nimport { BaseCallbackHandlerInput } from \"../callbacks/base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\n\nexport interface Run extends BaseRun {\n  id: string;\n  child_runs: this[];\n  child_execution_order: number;\n  dotted_order?: string;\n  trace_id?: string;\n}\n\nexport interface RunCreate2 extends RunCreate {\n  trace_id?: string;\n  dotted_order?: string;\n}\n\nexport interface RunUpdate extends BaseRunUpdate {\n  events: BaseRun[\"events\"];\n  inputs: KVMap;\n  trace_id?: string;\n  dotted_order?: string;\n}\n\nexport interface LangChainTracerFields extends BaseCallbackHandlerInput {\n  exampleId?: string;\n  projectName?: string;\n  client?: LangSmithTracingClientInterface;\n  replicas?: RunTreeConfig[\"replicas\"];\n}\n\nexport class LangChainTracer\n  extends BaseTracer\n  implements LangChainTracerFields\n{\n  name = \"langchain_tracer\";\n\n  projectName?: string;\n\n  exampleId?: string;\n\n  client: LangSmithTracingClientInterface;\n\n  replicas?: RunTreeConfig[\"replicas\"];\n\n  usesRunTreeMap = true;\n\n  constructor(fields: LangChainTracerFields = {}) {\n    super(fields);\n    const { exampleId, projectName, client, replicas } = fields;\n\n    this.projectName = projectName ?? getDefaultProjectName();\n    this.replicas = replicas;\n    this.exampleId = exampleId;\n    this.client = client ?? getDefaultLangChainClientSingleton();\n\n    const traceableTree = LangChainTracer.getTraceableRunTree();\n    if (traceableTree) {\n      this.updateFromRunTree(traceableTree);\n    }\n  }\n\n  protected async persistRun(_run: Run): Promise<void> {\n    // empty\n  }\n\n  async onRunCreate(run: Run): Promise<void> {\n    const runTree = this.getRunTreeWithTracingConfig(run.id);\n    await runTree?.postRun();\n  }\n\n  async onRunUpdate(run: Run): Promise<void> {\n    const runTree = this.getRunTreeWithTracingConfig(run.id);\n    await runTree?.patchRun();\n  }\n\n  getRun(id: string): Run | undefined {\n    return this.runTreeMap.get(id);\n  }\n\n  updateFromRunTree(runTree: RunTree) {\n    this.runTreeMap.set(runTree.id, runTree);\n    let rootRun: RunTree = runTree;\n    const visited = new Set<string>();\n    while (rootRun.parent_run) {\n      if (visited.has(rootRun.id)) break;\n      visited.add(rootRun.id);\n\n      if (!rootRun.parent_run) break;\n      rootRun = rootRun.parent_run as RunTree;\n    }\n    visited.clear();\n\n    const queue = [rootRun];\n    while (queue.length > 0) {\n      const current = queue.shift();\n      if (!current || visited.has(current.id)) continue;\n      visited.add(current.id);\n\n      this.runTreeMap.set(current.id, current);\n      if (current.child_runs) {\n        queue.push(...current.child_runs);\n      }\n    }\n\n    this.client = runTree.client ?? this.client;\n    this.replicas = runTree.replicas ?? this.replicas;\n    this.projectName = runTree.project_name ?? this.projectName;\n    this.exampleId = runTree.reference_example_id ?? this.exampleId;\n  }\n\n  getRunTreeWithTracingConfig(id: string): RunTree | undefined {\n    const runTree = this.runTreeMap.get(id);\n    if (!runTree) return undefined;\n\n    return new RunTree({\n      ...runTree,\n      client: this.client as Client,\n      project_name: this.projectName,\n      replicas: this.replicas,\n      reference_example_id: this.exampleId,\n      tracingEnabled: true,\n    });\n  }\n\n  static getTraceableRunTree(): RunTree | undefined {\n    try {\n      return (\n        // The type cast here provides forward compatibility. Old versions of LangSmith will just\n        // ignore the permitAbsentRunTree arg.\n        (\n          getCurrentRunTree as (\n            permitAbsentRunTree: boolean\n          ) => ReturnType<typeof getCurrentRunTree> | undefined\n        )(true)\n      );\n    } catch {\n      return undefined;\n    }\n  }\n}\n"],"names":["fields: LangChainTracerFields","_run: Run","run: Run","id: string","runTree: RunTree","rootRun: RunTree"],"mappings":"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","debugId":null}},
    {"offset": {"line": 4324, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/callbacks.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/callbacks.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nimport { getDefaultLangChainClientSingleton } from \"./tracer.js\";\n\nlet queue: typeof import(\"p-queue\")[\"default\"][\"prototype\"];\n\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n  const PQueue: any = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n  return new PQueue({\n    autoStart: true,\n    concurrency: 1,\n  });\n}\n\nexport function getQueue() {\n  if (typeof queue === \"undefined\") {\n    queue = createQueue();\n  }\n  return queue;\n}\n\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback<T>(\n  promiseFn: () => Promise<T> | T | void,\n  wait: boolean\n): Promise<void> {\n  if (wait === true) {\n    // Clear config since callbacks are not part of the root run\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance !== undefined) {\n      await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n    } else {\n      await promiseFn();\n    }\n  } else {\n    queue = getQueue();\n    // eslint-disable-next-line no-void\n    void queue.add(async () => {\n      const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n      if (asyncLocalStorageInstance !== undefined) {\n        await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n      } else {\n        await promiseFn();\n      }\n    });\n  }\n}\n\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport async function awaitAllCallbacks(): Promise<void> {\n  const defaultClient = getDefaultLangChainClientSingleton();\n  await Promise.allSettled([\n    typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve(),\n    defaultClient.awaitPendingTraceBatches(),\n  ]);\n}\n"],"names":["queue: typeof import(\"p-queue\")[\"default\"][\"prototype\"]","PQueue: any","promiseFn: () => Promise<T> | T | void","wait: boolean"],"mappings":";;;;;;;;;;;;;AAMA,IAAIA;;;;;GAOJ,SAAS,cAAc;IACrB,MAAMC,SAAc,aAAa,+MAAA,GAAY,+MAAA,CAAU,OAAA,GAAU,+MAAA;IACjE,OAAO,IAAI,OAAO;QAChB,WAAW;QACX,aAAa;IACd;AACF;AAED,SAAgB,WAAW;IACzB,IAAI,OAAO,UAAU,aACnB,QAAQ,aAAa;IAEvB,OAAO;AACR;;;;;GAOD,eAAsB,gBACpBC,SAAAA,EACAC,IAAAA,EACe;IACf,IAAI,SAAS,MAAM;QAGjB,MAAM,gCAA4B,6UAAA,EAAoC;QACtE,IAAI,8BAA8B,KAAA,GAChC,MAAM,0BAA0B,GAAA,CAAI,KAAA,GAAW,UAAY,WAAW,CAAC;aAEvE,MAAM,WAAW;IAEpB,OAAM;QACL,QAAQ,UAAU;QAEb,MAAM,GAAA,CAAI,YAAY;YACzB,MAAM,4BAA4B,oCAAoC;YACtE,IAAI,8BAA8B,KAAA,GAChC,MAAM,0BAA0B,GAAA,CAAI,KAAA,GAAW,UAAY,WAAW,CAAC;iBAEvE,MAAM,WAAW;QAEpB,EAAC;IACH;AACF;;;;GAMD,eAAsB,oBAAmC;IACvD,MAAM,oBAAgB,qTAAA,EAAoC;IAC1D,MAAM,QAAQ,UAAA,CAAW;QACvB,OAAO,UAAU,cAAc,MAAM,MAAA,EAAQ,GAAG,QAAQ,OAAA,EAAS;QACjE,cAAc,wBAAA,EAA0B,AACzC;KAAA,CAAC;AACH","debugId":null}},
    {"offset": {"line": 4387, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/callbacks/promises.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/callbacks/promises.ts"],"sourcesContent":["import { awaitAllCallbacks, consumeCallback } from \"../singletons/callbacks.js\";\n\nexport { awaitAllCallbacks, consumeCallback };\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 4407, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/callbacks.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/callbacks.ts"],"sourcesContent":["import { getEnvironmentVariable } from \"./env.js\";\n\nexport const isTracingEnabled = (tracingEnabled?: boolean): boolean => {\n  if (tracingEnabled !== undefined) {\n    return tracingEnabled;\n  }\n  const envVars = [\n    \"LANGSMITH_TRACING_V2\",\n    \"LANGCHAIN_TRACING_V2\",\n    \"LANGSMITH_TRACING\",\n    \"LANGCHAIN_TRACING\",\n  ];\n  return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n"],"names":["tracingEnabled?: boolean"],"mappings":";;;;;;;AAEA,MAAa,mBAAmB,CAACA,mBAAsC;IACrE,IAAI,mBAAmB,KAAA,EACrB,CAAA,OAAO;IAET,MAAM,UAAU;QACd;QACA;QACA;QACA;KACD;IACD,OAAO,CAAC,CAAC,QAAQ,IAAA,CAAK,CAAC,aAAW,iSAAA,EAAuB,OAAO,KAAK,OAAO;AAC7E","debugId":null}},
    {"offset": {"line": 4430, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/async_local_storage/context.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/async_local_storage/context.ts"],"sourcesContent":["import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { BaseCallbackHandler } from \"../../callbacks/base.js\";\nimport {\n  _CONTEXT_VARIABLES_KEY,\n  getGlobalAsyncLocalStorageInstance,\n} from \"./globals.js\";\n\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\nexport function setContextVariable<T>(name: PropertyKey, value: T): void {\n  // Avoid using global singleton due to circuluar dependency issues\n  const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n  if (asyncLocalStorageInstance === undefined) {\n    throw new Error(\n      `Internal error: Global shared async local storage instance has not been initialized.`\n    );\n  }\n  const runTree = asyncLocalStorageInstance.getStore();\n  const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n  contextVars[name] = value;\n  let newValue = {};\n  if (isRunTree(runTree)) {\n    newValue = new RunTree(runTree);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (newValue as any)[_CONTEXT_VARIABLES_KEY] = contextVars;\n  asyncLocalStorageInstance.enterWith(newValue);\n}\n\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable<T = any>(name: PropertyKey): T | undefined {\n  // Avoid using global singleton due to circuluar dependency issues\n  const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n  if (asyncLocalStorageInstance === undefined) {\n    return undefined;\n  }\n  const runTree = asyncLocalStorageInstance.getStore();\n  return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\n\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\n\nexport const _getConfigureHooks = () =>\n  getContextVariable<ConfigureHook[]>(LC_CONFIGURE_HOOKS_KEY) || [];\n\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config: ConfigureHook) => {\n  if (config.envVar && !config.handlerClass) {\n    throw new Error(\n      \"If envVar is set, handlerClass must also be set to a non-None value.\"\n    );\n  }\n  setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n\nexport type ConfigureHook = {\n  contextVar?: string;\n  inheritable?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handlerClass?: new (...args: any[]) => BaseCallbackHandler;\n  envVar?: string;\n};\n"],"names":["name: PropertyKey","value: T","config: ConfigureHook"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyDA,SAAgB,mBAAsBA,IAAAA,EAAmBC,KAAAA,EAAgB;IAEvE,MAAM,gCAA4B,6UAAA,EAAoC;IACtE,IAAI,8BAA8B,KAAA,EAChC,CAAA,MAAM,IAAI,MACR,CAAC,oFAAoF,CAAC;IAG1F,MAAM,UAAU,0BAA0B,QAAA,EAAU;IACpD,MAAM,cAAc;QAAE,GAAG,SAAA,CAAU,iUAAA,CAAA;IAAyB;IAC5D,WAAA,CAAY,KAAA,GAAQ;IACpB,IAAI,WAAW,CAAE;IACjB,QAAI,mQAAA,EAAU,QAAQ,EACpB,WAAW,IAAI,iQAAA,CAAQ;IAGxB,QAAA,CAAiB,iUAAA,CAAA,GAA0B;IAC5C,0BAA0B,SAAA,CAAU,SAAS;AAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoDD,SAAgB,mBAA4BD,IAAAA,EAAkC;IAE5E,MAAM,gCAA4B,6UAAA,EAAoC;IACtE,IAAI,8BAA8B,KAAA,EAChC,CAAA,OAAO,KAAA;IAET,MAAM,UAAU,0BAA0B,QAAA,EAAU;IACpD,OAAO,SAAA,CAAU,iUAAA,CAAA,EAAA,CAA0B,KAAA;AAC5C;AAED,MAAM,yBAAyB,OAAO,qBAAqB;AAE3D,MAAa,qBAAqB,IAChC,mBAAoC,uBAAuB,IAAI,CAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CnE,MAAa,wBAAwB,CAACE,WAA0B;IAC9D,IAAI,OAAO,MAAA,IAAU,CAAC,OAAO,YAAA,CAC3B,CAAA,MAAM,IAAI,MACR;IAGJ,mBAAmB,wBAAwB,CAAC;WAAG,oBAAoB;QAAE,MAAO;KAAA,CAAC;AAC9E","debugId":null}},
    {"offset": {"line": 4621, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/callbacks/manager.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/callbacks/manager.ts"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { AgentAction, AgentFinish } from \"../agents.js\";\nimport type { ChainValues } from \"../utils/types/index.js\";\nimport { LLMResult } from \"../outputs.js\";\nimport {\n  BaseCallbackHandler,\n  CallbackHandlerMethods,\n  HandleLLMNewTokenCallbackFields,\n  isBaseCallbackHandler,\n  NewTokenIndices,\n} from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { type BaseMessage } from \"../messages/base.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { Serialized } from \"../load/serializable.js\";\nimport type { DocumentInterface } from \"../documents/document.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport {\n  getContextVariable,\n  _getConfigureHooks,\n} from \"../singletons/async_local_storage/context.js\";\n\ntype BaseCallbackManagerMethods = {\n  [K in keyof CallbackHandlerMethods]?: (\n    ...args: Parameters<Required<CallbackHandlerMethods>[K]>\n  ) => Promise<unknown>;\n};\n\nexport interface CallbackManagerOptions {\n  verbose?: boolean;\n  tracing?: boolean;\n}\n\nexport type Callbacks =\n  | CallbackManager\n  | (BaseCallbackHandler | CallbackHandlerMethods)[];\n\nexport interface BaseCallbackConfig {\n  /**\n   * Name for the tracer run for this call. Defaults to the name of the class.\n   */\n  runName?: string;\n\n  /**\n   * Tags for this call and any sub-calls (eg. a Chain calling an LLM).\n   * You can use these to filter calls.\n   */\n  tags?: string[];\n\n  /**\n   * Metadata for this call and any sub-calls (eg. a Chain calling an LLM).\n   * Keys should be strings, values should be JSON-serializable.\n   */\n  metadata?: Record<string, unknown>;\n\n  /**\n   * Callbacks for this call and any sub-calls (eg. a Chain calling an LLM).\n   * Tags are passed to all callbacks, metadata is passed to handle*Start callbacks.\n   */\n  callbacks?: Callbacks;\n\n  /**\n   * Unique identifier for the tracer run for this call. If not provided, a new UUID\n   * will be generated.\n   */\n  runId?: string;\n}\n\nexport function parseCallbackConfigArg(\n  arg: Callbacks | BaseCallbackConfig | undefined\n): BaseCallbackConfig {\n  if (!arg) {\n    return {};\n  } else if (Array.isArray(arg) || \"name\" in arg) {\n    return { callbacks: arg };\n  } else {\n    return arg;\n  }\n}\n\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport abstract class BaseCallbackManager {\n  abstract addHandler(handler: BaseCallbackHandler): void;\n\n  abstract removeHandler(handler: BaseCallbackHandler): void;\n\n  abstract setHandlers(handlers: BaseCallbackHandler[]): void;\n\n  setHandler(handler: BaseCallbackHandler): void {\n    return this.setHandlers([handler]);\n  }\n}\n\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n  constructor(\n    public readonly runId: string,\n    public readonly handlers: BaseCallbackHandler[],\n    protected readonly inheritableHandlers: BaseCallbackHandler[],\n    protected readonly tags: string[],\n    protected readonly inheritableTags: string[],\n    protected readonly metadata: Record<string, unknown>,\n    protected readonly inheritableMetadata: Record<string, unknown>,\n    protected readonly _parentRunId?: string\n  ) {}\n\n  get parentRunId() {\n    return this._parentRunId;\n  }\n\n  async handleText(text: string): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          try {\n            await handler.handleText?.(\n              text,\n              this.runId,\n              this._parentRunId,\n              this.tags\n            );\n          } catch (err) {\n            const logFunction = handler.raiseError\n              ? console.error\n              : console.warn;\n            logFunction(\n              `Error in handler ${handler.constructor.name}, handleText: ${err}`\n            );\n            if (handler.raiseError) {\n              throw err;\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleCustomEvent(\n    eventName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any,\n    _runId?: string,\n    _tags?: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata?: Record<string, any>\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          try {\n            await handler.handleCustomEvent?.(\n              eventName,\n              data,\n              this.runId,\n              this.tags,\n              this.metadata\n            );\n          } catch (err) {\n            const logFunction = handler.raiseError\n              ? console.error\n              : console.warn;\n            logFunction(\n              `Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`\n            );\n            if (handler.raiseError) {\n              throw err;\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n}\n\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun\n  extends BaseRunManager\n  implements BaseCallbackManagerMethods\n{\n  getChild(tag?: string): CallbackManager {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n\n  async handleRetrieverEnd(documents: DocumentInterface[]): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreRetriever) {\n            try {\n              await handler.handleRetrieverEnd?.(\n                documents,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleRetriever`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleRetrieverError(err: Error | unknown): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreRetriever) {\n            try {\n              await handler.handleRetrieverError?.(\n                err,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (error) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n}\n\nexport class CallbackManagerForLLMRun\n  extends BaseRunManager\n  implements BaseCallbackManagerMethods\n{\n  async handleLLMNewToken(\n    token: string,\n    idx?: NewTokenIndices,\n    _runId?: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    fields?: HandleLLMNewTokenCallbackFields\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreLLM) {\n            try {\n              await handler.handleLLMNewToken?.(\n                token,\n                idx ?? { prompt: 0, completion: 0 },\n                this.runId,\n                this._parentRunId,\n                this.tags,\n                fields\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleLLMError(\n    err: Error | unknown,\n    _runId?: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreLLM) {\n            try {\n              await handler.handleLLMError?.(\n                err,\n                this.runId,\n                this._parentRunId,\n                this.tags,\n                extraParams\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleLLMError: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleLLMEnd(\n    output: LLMResult,\n    _runId?: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    extraParams?: Record<string, unknown>\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreLLM) {\n            try {\n              await handler.handleLLMEnd?.(\n                output,\n                this.runId,\n                this._parentRunId,\n                this.tags,\n                extraParams\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n}\n\nexport class CallbackManagerForChainRun\n  extends BaseRunManager\n  implements BaseCallbackManagerMethods\n{\n  getChild(tag?: string): CallbackManager {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n\n  async handleChainError(\n    err: Error | unknown,\n    _runId?: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreChain) {\n            try {\n              await handler.handleChainError?.(\n                err,\n                this.runId,\n                this._parentRunId,\n                this.tags,\n                kwargs\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleChainError: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleChainEnd(\n    output: ChainValues,\n    _runId?: string,\n    _parentRunId?: string,\n    _tags?: string[],\n    kwargs?: { inputs?: Record<string, unknown> }\n  ): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreChain) {\n            try {\n              await handler.handleChainEnd?.(\n                output,\n                this.runId,\n                this._parentRunId,\n                this.tags,\n                kwargs\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleAgentAction(action: AgentAction): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreAgent) {\n            try {\n              await handler.handleAgentAction?.(\n                action,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  async handleAgentEnd(action: AgentFinish): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreAgent) {\n            try {\n              await handler.handleAgentEnd?.(\n                action,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n}\n\nexport class CallbackManagerForToolRun\n  extends BaseRunManager\n  implements BaseCallbackManagerMethods\n{\n  getChild(tag?: string): CallbackManager {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n\n  async handleToolError(err: Error | unknown): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreAgent) {\n            try {\n              await handler.handleToolError?.(\n                err,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleToolError: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async handleToolEnd(output: any): Promise<void> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreAgent) {\n            try {\n              await handler.handleToolEnd?.(\n                output,\n                this.runId,\n                this._parentRunId,\n                this.tags\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n}\n\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ model: \"gpt-4o-mini\", temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager\n  extends BaseCallbackManager\n  implements BaseCallbackManagerMethods\n{\n  handlers: BaseCallbackHandler[] = [];\n\n  inheritableHandlers: BaseCallbackHandler[] = [];\n\n  tags: string[] = [];\n\n  inheritableTags: string[] = [];\n\n  metadata: Record<string, unknown> = {};\n\n  inheritableMetadata: Record<string, unknown> = {};\n\n  name = \"callback_manager\";\n\n  public _parentRunId?: string;\n\n  constructor(\n    parentRunId?: string,\n    options?: {\n      handlers?: BaseCallbackHandler[];\n      inheritableHandlers?: BaseCallbackHandler[];\n      tags?: string[];\n      inheritableTags?: string[];\n      metadata?: Record<string, unknown>;\n      inheritableMetadata?: Record<string, unknown>;\n    }\n  ) {\n    super();\n    this.handlers = options?.handlers ?? this.handlers;\n    this.inheritableHandlers =\n      options?.inheritableHandlers ?? this.inheritableHandlers;\n    this.tags = options?.tags ?? this.tags;\n    this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n    this.metadata = options?.metadata ?? this.metadata;\n    this.inheritableMetadata =\n      options?.inheritableMetadata ?? this.inheritableMetadata;\n    this._parentRunId = parentRunId;\n  }\n\n  /**\n   * Gets the parent run ID, if any.\n   *\n   * @returns The parent run ID.\n   */\n  getParentRunId() {\n    return this._parentRunId;\n  }\n\n  async handleLLMStart(\n    llm: Serialized,\n    prompts: string[],\n    runId: string | undefined = undefined,\n    _parentRunId: string | undefined = undefined,\n    extraParams: Record<string, unknown> | undefined = undefined,\n    _tags: string[] | undefined = undefined,\n    _metadata: Record<string, unknown> | undefined = undefined,\n    runName: string | undefined = undefined\n  ): Promise<CallbackManagerForLLMRun[]> {\n    return Promise.all(\n      prompts.map(async (prompt, idx) => {\n        // Can't have duplicate runs with the same run ID (if provided)\n        const runId_ = idx === 0 && runId ? runId : uuidv4();\n\n        await Promise.all(\n          this.handlers.map((handler) => {\n            if (handler.ignoreLLM) {\n              return;\n            }\n            if (isBaseTracer(handler)) {\n              // Create and add run to the run map.\n              // We do this synchronously to avoid race conditions\n              // when callbacks are backgrounded.\n              handler._createRunForLLMStart(\n                llm,\n                [prompt],\n                runId_,\n                this._parentRunId,\n                extraParams,\n                this.tags,\n                this.metadata,\n                runName\n              );\n            }\n            return consumeCallback(async () => {\n              try {\n                await handler.handleLLMStart?.(\n                  llm,\n                  [prompt],\n                  runId_,\n                  this._parentRunId,\n                  extraParams,\n                  this.tags,\n                  this.metadata,\n                  runName\n                );\n              } catch (err) {\n                const logFunction = handler.raiseError\n                  ? console.error\n                  : console.warn;\n                logFunction(\n                  `Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`\n                );\n                if (handler.raiseError) {\n                  throw err;\n                }\n              }\n            }, handler.awaitHandlers);\n          })\n        );\n\n        return new CallbackManagerForLLMRun(\n          runId_,\n          this.handlers,\n          this.inheritableHandlers,\n          this.tags,\n          this.inheritableTags,\n          this.metadata,\n          this.inheritableMetadata,\n          this._parentRunId\n        );\n      })\n    );\n  }\n\n  async handleChatModelStart(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string | undefined = undefined,\n    _parentRunId: string | undefined = undefined,\n    extraParams: Record<string, unknown> | undefined = undefined,\n    _tags: string[] | undefined = undefined,\n    _metadata: Record<string, unknown> | undefined = undefined,\n    runName: string | undefined = undefined\n  ): Promise<CallbackManagerForLLMRun[]> {\n    return Promise.all(\n      messages.map(async (messageGroup, idx) => {\n        // Can't have duplicate runs with the same run ID (if provided)\n        const runId_ = idx === 0 && runId ? runId : uuidv4();\n\n        await Promise.all(\n          this.handlers.map((handler) => {\n            if (handler.ignoreLLM) {\n              return;\n            }\n            if (isBaseTracer(handler)) {\n              // Create and add run to the run map.\n              // We do this synchronously to avoid race conditions\n              // when callbacks are backgrounded.\n              handler._createRunForChatModelStart(\n                llm,\n                [messageGroup],\n                runId_,\n                this._parentRunId,\n                extraParams,\n                this.tags,\n                this.metadata,\n                runName\n              );\n            }\n            return consumeCallback(async () => {\n              try {\n                if (handler.handleChatModelStart) {\n                  await handler.handleChatModelStart?.(\n                    llm,\n                    [messageGroup],\n                    runId_,\n                    this._parentRunId,\n                    extraParams,\n                    this.tags,\n                    this.metadata,\n                    runName\n                  );\n                } else if (handler.handleLLMStart) {\n                  const messageString = getBufferString(messageGroup);\n                  await handler.handleLLMStart?.(\n                    llm,\n                    [messageString],\n                    runId_,\n                    this._parentRunId,\n                    extraParams,\n                    this.tags,\n                    this.metadata,\n                    runName\n                  );\n                }\n              } catch (err) {\n                const logFunction = handler.raiseError\n                  ? console.error\n                  : console.warn;\n                logFunction(\n                  `Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`\n                );\n                if (handler.raiseError) {\n                  throw err;\n                }\n              }\n            }, handler.awaitHandlers);\n          })\n        );\n\n        return new CallbackManagerForLLMRun(\n          runId_,\n          this.handlers,\n          this.inheritableHandlers,\n          this.tags,\n          this.inheritableTags,\n          this.metadata,\n          this.inheritableMetadata,\n          this._parentRunId\n        );\n      })\n    );\n  }\n\n  async handleChainStart(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId = uuidv4(),\n    runType: string | undefined = undefined,\n    _tags: string[] | undefined = undefined,\n    _metadata: Record<string, unknown> | undefined = undefined,\n    runName: string | undefined = undefined\n  ): Promise<CallbackManagerForChainRun> {\n    await Promise.all(\n      this.handlers.map((handler) => {\n        if (handler.ignoreChain) {\n          return;\n        }\n        if (isBaseTracer(handler)) {\n          // Create and add run to the run map.\n          // We do this synchronously to avoid race conditions\n          // when callbacks are backgrounded.\n          handler._createRunForChainStart(\n            chain,\n            inputs,\n            runId,\n            this._parentRunId,\n            this.tags,\n            this.metadata,\n            runType,\n            runName\n          );\n        }\n        return consumeCallback(async () => {\n          try {\n            await handler.handleChainStart?.(\n              chain,\n              inputs,\n              runId,\n              this._parentRunId,\n              this.tags,\n              this.metadata,\n              runType,\n              runName\n            );\n          } catch (err) {\n            const logFunction = handler.raiseError\n              ? console.error\n              : console.warn;\n            logFunction(\n              `Error in handler ${handler.constructor.name}, handleChainStart: ${err}`\n            );\n            if (handler.raiseError) {\n              throw err;\n            }\n          }\n        }, handler.awaitHandlers);\n      })\n    );\n    return new CallbackManagerForChainRun(\n      runId,\n      this.handlers,\n      this.inheritableHandlers,\n      this.tags,\n      this.inheritableTags,\n      this.metadata,\n      this.inheritableMetadata,\n      this._parentRunId\n    );\n  }\n\n  async handleToolStart(\n    tool: Serialized,\n    input: string,\n    runId = uuidv4(),\n    _parentRunId: string | undefined = undefined,\n    _tags: string[] | undefined = undefined,\n    _metadata: Record<string, unknown> | undefined = undefined,\n    runName: string | undefined = undefined\n  ): Promise<CallbackManagerForToolRun> {\n    await Promise.all(\n      this.handlers.map((handler) => {\n        if (handler.ignoreAgent) {\n          return;\n        }\n        if (isBaseTracer(handler)) {\n          // Create and add run to the run map.\n          // We do this synchronously to avoid race conditions\n          // when callbacks are backgrounded.\n          handler._createRunForToolStart(\n            tool,\n            input,\n            runId,\n            this._parentRunId,\n            this.tags,\n            this.metadata,\n            runName\n          );\n        }\n        return consumeCallback(async () => {\n          try {\n            await handler.handleToolStart?.(\n              tool,\n              input,\n              runId,\n              this._parentRunId,\n              this.tags,\n              this.metadata,\n              runName\n            );\n          } catch (err) {\n            const logFunction = handler.raiseError\n              ? console.error\n              : console.warn;\n            logFunction(\n              `Error in handler ${handler.constructor.name}, handleToolStart: ${err}`\n            );\n            if (handler.raiseError) {\n              throw err;\n            }\n          }\n        }, handler.awaitHandlers);\n      })\n    );\n    return new CallbackManagerForToolRun(\n      runId,\n      this.handlers,\n      this.inheritableHandlers,\n      this.tags,\n      this.inheritableTags,\n      this.metadata,\n      this.inheritableMetadata,\n      this._parentRunId\n    );\n  }\n\n  async handleRetrieverStart(\n    retriever: Serialized,\n    query: string,\n    runId: string = uuidv4(),\n    _parentRunId: string | undefined = undefined,\n    _tags: string[] | undefined = undefined,\n    _metadata: Record<string, unknown> | undefined = undefined,\n    runName: string | undefined = undefined\n  ): Promise<CallbackManagerForRetrieverRun> {\n    await Promise.all(\n      this.handlers.map((handler) => {\n        if (handler.ignoreRetriever) {\n          return;\n        }\n        if (isBaseTracer(handler)) {\n          // Create and add run to the run map.\n          // We do this synchronously to avoid race conditions\n          // when callbacks are backgrounded.\n          handler._createRunForRetrieverStart(\n            retriever,\n            query,\n            runId,\n            this._parentRunId,\n            this.tags,\n            this.metadata,\n            runName\n          );\n        }\n        return consumeCallback(async () => {\n          try {\n            await handler.handleRetrieverStart?.(\n              retriever,\n              query,\n              runId,\n              this._parentRunId,\n              this.tags,\n              this.metadata,\n              runName\n            );\n          } catch (err) {\n            const logFunction = handler.raiseError\n              ? console.error\n              : console.warn;\n            logFunction(\n              `Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`\n            );\n            if (handler.raiseError) {\n              throw err;\n            }\n          }\n        }, handler.awaitHandlers);\n      })\n    );\n    return new CallbackManagerForRetrieverRun(\n      runId,\n      this.handlers,\n      this.inheritableHandlers,\n      this.tags,\n      this.inheritableTags,\n      this.metadata,\n      this.inheritableMetadata,\n      this._parentRunId\n    );\n  }\n\n  async handleCustomEvent?(\n    eventName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any,\n    runId: string,\n    _tags?: string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata?: Record<string, any>\n  ): // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Promise<any> {\n    await Promise.all(\n      this.handlers.map((handler) =>\n        consumeCallback(async () => {\n          if (!handler.ignoreCustomEvent) {\n            try {\n              await handler.handleCustomEvent?.(\n                eventName,\n                data,\n                runId,\n                this.tags,\n                this.metadata\n              );\n            } catch (err) {\n              const logFunction = handler.raiseError\n                ? console.error\n                : console.warn;\n              logFunction(\n                `Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`\n              );\n              if (handler.raiseError) {\n                throw err;\n              }\n            }\n          }\n        }, handler.awaitHandlers)\n      )\n    );\n  }\n\n  addHandler(handler: BaseCallbackHandler, inherit = true): void {\n    this.handlers.push(handler);\n    if (inherit) {\n      this.inheritableHandlers.push(handler);\n    }\n  }\n\n  removeHandler(handler: BaseCallbackHandler): void {\n    this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n    this.inheritableHandlers = this.inheritableHandlers.filter(\n      (_handler) => _handler !== handler\n    );\n  }\n\n  setHandlers(handlers: BaseCallbackHandler[], inherit = true): void {\n    this.handlers = [];\n    this.inheritableHandlers = [];\n    for (const handler of handlers) {\n      this.addHandler(handler, inherit);\n    }\n  }\n\n  addTags(tags: string[], inherit = true): void {\n    this.removeTags(tags); // Remove duplicates\n    this.tags.push(...tags);\n    if (inherit) {\n      this.inheritableTags.push(...tags);\n    }\n  }\n\n  removeTags(tags: string[]): void {\n    this.tags = this.tags.filter((tag) => !tags.includes(tag));\n    this.inheritableTags = this.inheritableTags.filter(\n      (tag) => !tags.includes(tag)\n    );\n  }\n\n  addMetadata(metadata: Record<string, unknown>, inherit = true): void {\n    this.metadata = { ...this.metadata, ...metadata };\n    if (inherit) {\n      this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n    }\n  }\n\n  removeMetadata(metadata: Record<string, unknown>): void {\n    for (const key of Object.keys(metadata)) {\n      delete this.metadata[key];\n      delete this.inheritableMetadata[key];\n    }\n  }\n\n  copy(\n    additionalHandlers: BaseCallbackHandler[] = [],\n    inherit = true\n  ): CallbackManager {\n    const manager = new CallbackManager(this._parentRunId);\n    for (const handler of this.handlers) {\n      const inheritable = this.inheritableHandlers.includes(handler);\n      manager.addHandler(handler, inheritable);\n    }\n    for (const tag of this.tags) {\n      const inheritable = this.inheritableTags.includes(tag);\n      manager.addTags([tag], inheritable);\n    }\n    for (const key of Object.keys(this.metadata)) {\n      const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n      manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n    }\n    for (const handler of additionalHandlers) {\n      if (\n        // Prevent multiple copies of console_callback_handler\n        manager.handlers\n          .filter((h) => h.name === \"console_callback_handler\")\n          .some((h) => h.name === handler.name)\n      ) {\n        continue;\n      }\n      manager.addHandler(handler, inherit);\n    }\n    return manager;\n  }\n\n  static fromHandlers(handlers: CallbackHandlerMethods) {\n    class Handler extends BaseCallbackHandler {\n      name = uuidv4();\n\n      constructor() {\n        super();\n        Object.assign(this, handlers);\n      }\n    }\n\n    const manager = new this();\n    manager.addHandler(new Handler());\n    return manager;\n  }\n\n  static configure(\n    inheritableHandlers?: Callbacks,\n    localHandlers?: Callbacks,\n    inheritableTags?: string[],\n    localTags?: string[],\n    inheritableMetadata?: Record<string, unknown>,\n    localMetadata?: Record<string, unknown>,\n    options?: CallbackManagerOptions\n  ): CallbackManager | undefined {\n    return this._configureSync(\n      inheritableHandlers,\n      localHandlers,\n      inheritableTags,\n      localTags,\n      inheritableMetadata,\n      localMetadata,\n      options\n    );\n  }\n\n  // TODO: Deprecate async method in favor of this one.\n  static _configureSync(\n    inheritableHandlers?: Callbacks,\n    localHandlers?: Callbacks,\n    inheritableTags?: string[],\n    localTags?: string[],\n    inheritableMetadata?: Record<string, unknown>,\n    localMetadata?: Record<string, unknown>,\n    options?: CallbackManagerOptions\n  ) {\n    let callbackManager: CallbackManager | undefined;\n    if (inheritableHandlers || localHandlers) {\n      if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n        callbackManager = new CallbackManager();\n        callbackManager.setHandlers(\n          inheritableHandlers?.map(ensureHandler) ?? [],\n          true\n        );\n      } else {\n        callbackManager = inheritableHandlers;\n      }\n\n      callbackManager = callbackManager.copy(\n        Array.isArray(localHandlers)\n          ? localHandlers.map(ensureHandler)\n          : localHandlers?.handlers,\n        false\n      );\n    }\n\n    const verboseEnabled =\n      getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n      options?.verbose;\n\n    const tracingV2Enabled =\n      LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n      isTracingEnabled();\n\n    const tracingEnabled =\n      tracingV2Enabled ||\n      (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n    if (verboseEnabled || tracingEnabled) {\n      if (!callbackManager) {\n        callbackManager = new CallbackManager();\n      }\n      if (\n        verboseEnabled &&\n        !callbackManager.handlers.some(\n          (handler) => handler.name === ConsoleCallbackHandler.prototype.name\n        )\n      ) {\n        const consoleHandler = new ConsoleCallbackHandler();\n        callbackManager.addHandler(consoleHandler, true);\n      }\n      if (\n        tracingEnabled &&\n        !callbackManager.handlers.some(\n          (handler) => handler.name === \"langchain_tracer\"\n        )\n      ) {\n        if (tracingV2Enabled) {\n          const tracerV2 = new LangChainTracer();\n          callbackManager.addHandler(tracerV2, true);\n        }\n      }\n      if (tracingV2Enabled) {\n        // handoff between langchain and langsmith/traceable\n        // override the parent run ID\n        const implicitRunTree = LangChainTracer.getTraceableRunTree();\n        if (implicitRunTree && callbackManager._parentRunId === undefined) {\n          callbackManager._parentRunId = implicitRunTree.id;\n          const tracerV2 = callbackManager.handlers.find(\n            (handler) => handler.name === \"langchain_tracer\"\n          ) as LangChainTracer | undefined;\n          tracerV2?.updateFromRunTree(implicitRunTree);\n        }\n      }\n    }\n\n    for (const {\n      contextVar,\n      inheritable = true,\n      handlerClass,\n      envVar,\n    } of _getConfigureHooks()) {\n      const createIfNotInContext =\n        envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n      let handler: BaseCallbackHandler | undefined;\n      const contextVarValue =\n        contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n      if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n        handler = contextVarValue;\n      } else if (createIfNotInContext) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        handler = new (handlerClass as any)({});\n      }\n      if (handler !== undefined) {\n        if (!callbackManager) {\n          callbackManager = new CallbackManager();\n        }\n\n        if (!callbackManager.handlers.some((h) => h.name === handler!.name)) {\n          callbackManager.addHandler(handler, inheritable);\n        }\n      }\n    }\n\n    if (inheritableTags || localTags) {\n      if (callbackManager) {\n        callbackManager.addTags(inheritableTags ?? []);\n        callbackManager.addTags(localTags ?? [], false);\n      }\n    }\n    if (inheritableMetadata || localMetadata) {\n      if (callbackManager) {\n        callbackManager.addMetadata(inheritableMetadata ?? {});\n        callbackManager.addMetadata(localMetadata ?? {}, false);\n      }\n    }\n\n    return callbackManager;\n  }\n}\n\nexport function ensureHandler(\n  handler: BaseCallbackHandler | CallbackHandlerMethods\n): BaseCallbackHandler {\n  if (\"name\" in handler) {\n    return handler;\n  }\n\n  return BaseCallbackHandler.fromMethods(handler);\n}\n"],"names":["arg: Callbacks | BaseCallbackConfig | undefined","handler: BaseCallbackHandler","runId: string","handlers: BaseCallbackHandler[]","inheritableHandlers: BaseCallbackHandler[]","tags: string[]","inheritableTags: string[]","metadata: Record<string, unknown>","inheritableMetadata: Record<string, unknown>","_parentRunId?: string","text: string","eventName: string","data: any","_runId?: string","_tags?: string[]","_metadata?: Record<string, any>","tag?: string","documents: DocumentInterface[]","err: Error | unknown","token: string","idx?: NewTokenIndices","fields?: HandleLLMNewTokenCallbackFields","extraParams?: Record<string, unknown>","err","output: LLMResult","kwargs?: { inputs?: Record<string, unknown> }","output: ChainValues","action: AgentAction","action: AgentFinish","output: any","parentRunId?: string","options?: {\n      handlers?: BaseCallbackHandler[];\n      inheritableHandlers?: BaseCallbackHandler[];\n      tags?: string[];\n      inheritableTags?: string[];\n      metadata?: Record<string, unknown>;\n      inheritableMetadata?: Record<string, unknown>;\n    }","llm: Serialized","prompts: string[]","runId: string | undefined","_parentRunId: string | undefined","extraParams: Record<string, unknown> | undefined","_tags: string[] | undefined","_metadata: Record<string, unknown> | undefined","runName: string | undefined","uuidv4","messages: BaseMessage[][]","chain: Serialized","inputs: ChainValues","runType: string | undefined","tool: Serialized","input: string","retriever: Serialized","query: string","additionalHandlers: BaseCallbackHandler[]","handlers: CallbackHandlerMethods","inheritableHandlers?: Callbacks","localHandlers?: Callbacks","inheritableTags?: string[]","localTags?: string[]","inheritableMetadata?: Record<string, unknown>","localMetadata?: Record<string, unknown>","options?: CallbackManagerOptions","callbackManager: CallbackManager | undefined","handler: BaseCallbackHandler | undefined","handler: BaseCallbackHandler | CallbackHandlerMethods"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5199, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/async_local_storage/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/async_local_storage/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport {\n  AsyncLocalStorageInterface,\n  getGlobalAsyncLocalStorageInstance,\n  setGlobalAsyncLocalStorageInstance,\n  _CONTEXT_VARIABLES_KEY,\n} from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nimport { LangChainTracer } from \"../../tracers/tracer_langchain.js\";\n\nexport class MockAsyncLocalStorage implements AsyncLocalStorageInterface {\n  getStore(): any {\n    return undefined;\n  }\n\n  run<T>(_store: any, callback: () => T): T {\n    return callback();\n  }\n\n  enterWith(_store: any) {\n    return undefined;\n  }\n}\n\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\n\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\n\nclass AsyncLocalStorageProvider {\n  getInstance(): AsyncLocalStorageInterface {\n    return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n  }\n\n  getRunnableConfig() {\n    const storage = this.getInstance();\n    // this has the runnable config\n    // which means that we should also have an instance of a LangChainTracer\n    // with the run map prepopulated\n    return storage.getStore()?.extra?.[LC_CHILD_KEY];\n  }\n\n  runWithConfig<T>(\n    config: any,\n    callback: () => T,\n    avoidCreatingRootRunTree?: boolean\n  ): T {\n    const callbackManager = CallbackManager._configureSync(\n      config?.callbacks,\n      undefined,\n      config?.tags,\n      undefined,\n      config?.metadata\n    );\n    const storage = this.getInstance();\n    const previousValue = storage.getStore();\n    const parentRunId = callbackManager?.getParentRunId();\n\n    const langChainTracer = callbackManager?.handlers?.find(\n      (handler) => handler?.name === \"langchain_tracer\"\n    ) as LangChainTracer | undefined;\n\n    let runTree;\n    if (langChainTracer && parentRunId) {\n      runTree = langChainTracer.getRunTreeWithTracingConfig(parentRunId);\n    } else if (!avoidCreatingRootRunTree) {\n      runTree = new RunTree({\n        name: \"<runnable_lambda>\",\n        tracingEnabled: false,\n      });\n    }\n\n    if (runTree) {\n      runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n    }\n\n    if (\n      previousValue !== undefined &&\n      previousValue[_CONTEXT_VARIABLES_KEY] !== undefined\n    ) {\n      if (runTree === undefined) {\n        runTree = {};\n      }\n      (runTree as any)[_CONTEXT_VARIABLES_KEY] =\n        previousValue[_CONTEXT_VARIABLES_KEY];\n    }\n\n    return storage.run(runTree, callback);\n  }\n\n  initializeGlobalInstance(instance: AsyncLocalStorageInterface) {\n    if (getGlobalAsyncLocalStorageInstance() === undefined) {\n      setGlobalAsyncLocalStorageInstance(instance);\n    }\n  }\n}\n\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\n\nexport { AsyncLocalStorageProviderSingleton, type AsyncLocalStorageInterface };\n"],"names":["_store: any","callback: () => T","config: any","avoidCreatingRootRunTree?: boolean","instance: AsyncLocalStorageInterface"],"mappings":";;;;;;;;;;;;;;AAWA,IAAa,wBAAb,MAAyE;IACvE,WAAgB;QACd,OAAO,KAAA;IACR;IAED,IAAOA,MAAAA,EAAaC,QAAAA,EAAsB;QACxC,OAAO,UAAU;IAClB;IAED,UAAUD,MAAAA,EAAa;QACrB,OAAO,KAAA;IACR;AACF;AAED,MAAM,wBAAwB,IAAI;AAElC,MAAM,eAAe,OAAO,GAAA,CAAI,kBAAkB;AAElD,IAAM,4BAAN,MAAgC;IAC9B,cAA0C;QACxC,WAAO,6UAAA,EAAoC,KAAI;IAChD;IAED,oBAAoB;QAClB,MAAM,UAAU,IAAA,CAAK,WAAA,EAAa;QAIlC,OAAO,QAAQ,QAAA,EAAU,EAAE,OAAA,CAAQ,aAAA;IACpC;IAED,cACEE,MAAAA,EACAD,QAAAA,EACAE,wBAAAA,EACG;QACH,MAAM,kBAAkB,kSAAA,CAAgB,cAAA,CACtC,QAAQ,WACR,KAAA,GACA,QAAQ,MACR,KAAA,GACA,QAAQ,SACT;QACD,MAAM,UAAU,IAAA,CAAK,WAAA,EAAa;QAClC,MAAM,gBAAgB,QAAQ,QAAA,EAAU;QACxC,MAAM,cAAc,iBAAiB,gBAAgB;QAErD,MAAM,kBAAkB,iBAAiB,UAAU,KACjD,CAAC,UAAY,SAAS,SAAS,mBAChC;QAED,IAAI;QACJ,IAAI,mBAAmB,aACrB,UAAU,gBAAgB,2BAAA,CAA4B,YAAY;iBACzD,CAAC,0BACV,UAAU,IAAI,6PAAA,CAAQ;YACpB,MAAM;YACN,gBAAgB;QACjB;QAGH,IAAI,SACF,QAAQ,KAAA,GAAQ;YAAE,GAAG,QAAQ,KAAA;aAAQ,aAAA,EAAe;QAAQ;QAG9D,IACE,kBAAkB,KAAA,KAClB,aAAA,CAAc,iUAAA,CAAA,KAA4B,KAAA,GAC1C;YACA,IAAI,YAAY,KAAA,GACd,UAAU,CAAE;YAEb,OAAA,CAAgB,iUAAA,CAAA,GACf,aAAA,CAAc,iUAAA,CAAA;QACjB;QAED,OAAO,QAAQ,GAAA,CAAI,SAAS,SAAS;IACtC;IAED,yBAAyBC,QAAAA,EAAsC;QAC7D,QAAI,6UAAA,EAAoC,MAAK,KAAA,OAC3C,6UAAA,EAAmC,SAAS;IAE/C;AACF;AAED,MAAM,qCAAqC,IAAI","debugId":null}},
    {"offset": {"line": 5267, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/singletons/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/singletons/index.ts"],"sourcesContent":["import {\n  type AsyncLocalStorageInterface,\n  AsyncLocalStorageProviderSingleton,\n  MockAsyncLocalStorage,\n} from \"./async_local_storage/index.js\";\nimport { _CONTEXT_VARIABLES_KEY } from \"./async_local_storage/globals.js\";\n\nexport {\n  type AsyncLocalStorageInterface,\n  AsyncLocalStorageProviderSingleton,\n  MockAsyncLocalStorage,\n};\nexport { _CONTEXT_VARIABLES_KEY };\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 5290, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/config.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/config.ts"],"sourcesContent":["import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { RunnableConfig } from \"./types.js\";\n\nexport const DEFAULT_RECURSION_LIMIT = 25;\n\nexport { type RunnableConfig };\n\nexport async function getCallbackManagerForConfig(config?: RunnableConfig) {\n  return CallbackManager._configureSync(\n    config?.callbacks,\n    undefined,\n    config?.tags,\n    undefined,\n    config?.metadata\n  );\n}\n\nexport function mergeConfigs<CallOptions extends RunnableConfig>(\n  ...configs: (CallOptions | RunnableConfig | undefined | null)[]\n): Partial<CallOptions> {\n  // We do not want to call ensureConfig on the empty state here as this may cause\n  // double loading of callbacks if async local storage is being used.\n  const copy: Partial<CallOptions> = {};\n  for (const options of configs.filter((c): c is CallOptions => !!c)) {\n    for (const key of Object.keys(options)) {\n      if (key === \"metadata\") {\n        copy[key] = { ...copy[key], ...options[key] };\n      } else if (key === \"tags\") {\n        const baseKeys: string[] = copy[key] ?? [];\n        copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n      } else if (key === \"configurable\") {\n        copy[key] = { ...copy[key], ...options[key] };\n      } else if (key === \"timeout\") {\n        if (copy.timeout === undefined) {\n          copy.timeout = options.timeout;\n        } else if (options.timeout !== undefined) {\n          copy.timeout = Math.min(copy.timeout, options.timeout);\n        }\n      } else if (key === \"signal\") {\n        if (copy.signal === undefined) {\n          copy.signal = options.signal;\n        } else if (options.signal !== undefined) {\n          if (\"any\" in AbortSignal) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            copy.signal = (AbortSignal as any).any([\n              copy.signal,\n              options.signal,\n            ]);\n          } else {\n            copy.signal = options.signal;\n          }\n        }\n      } else if (key === \"callbacks\") {\n        const baseCallbacks = copy.callbacks;\n        const providedCallbacks = options.callbacks;\n        // callbacks can be either undefined, Array<handler> or manager\n        // so merging two callbacks values has 6 cases\n        if (Array.isArray(providedCallbacks)) {\n          if (!baseCallbacks) {\n            copy.callbacks = providedCallbacks;\n          } else if (Array.isArray(baseCallbacks)) {\n            copy.callbacks = baseCallbacks.concat(providedCallbacks);\n          } else {\n            // baseCallbacks is a manager\n            const manager = baseCallbacks.copy();\n            for (const callback of providedCallbacks) {\n              manager.addHandler(ensureHandler(callback), true);\n            }\n            copy.callbacks = manager;\n          }\n        } else if (providedCallbacks) {\n          // providedCallbacks is a manager\n          if (!baseCallbacks) {\n            copy.callbacks = providedCallbacks;\n          } else if (Array.isArray(baseCallbacks)) {\n            const manager = providedCallbacks.copy();\n            for (const callback of baseCallbacks) {\n              manager.addHandler(ensureHandler(callback), true);\n            }\n            copy.callbacks = manager;\n          } else {\n            // baseCallbacks is also a manager\n            copy.callbacks = new CallbackManager(\n              providedCallbacks._parentRunId,\n              {\n                handlers: baseCallbacks.handlers.concat(\n                  providedCallbacks.handlers\n                ),\n                inheritableHandlers: baseCallbacks.inheritableHandlers.concat(\n                  providedCallbacks.inheritableHandlers\n                ),\n                tags: Array.from(\n                  new Set(baseCallbacks.tags.concat(providedCallbacks.tags))\n                ),\n                inheritableTags: Array.from(\n                  new Set(\n                    baseCallbacks.inheritableTags.concat(\n                      providedCallbacks.inheritableTags\n                    )\n                  )\n                ),\n                metadata: {\n                  ...baseCallbacks.metadata,\n                  ...providedCallbacks.metadata,\n                },\n              }\n            );\n          }\n        }\n      } else {\n        const typedKey = key as keyof CallOptions;\n        copy[typedKey] = options[typedKey] ?? copy[typedKey];\n      }\n    }\n  }\n  return copy as Partial<CallOptions>;\n}\n\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig<CallOptions extends RunnableConfig>(\n  config?: CallOptions\n): CallOptions {\n  const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n  let empty: RunnableConfig = {\n    tags: [],\n    metadata: {},\n    recursionLimit: 25,\n    runId: undefined,\n  };\n  if (implicitConfig) {\n    // Don't allow runId and runName to be loaded implicitly, as this can cause\n    // child runs to improperly inherit their parents' run ids.\n    const { runId, runName, ...rest } = implicitConfig;\n    empty = Object.entries(rest).reduce(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (currentConfig: Record<string, any>, [key, value]) => {\n        if (value !== undefined) {\n          currentConfig[key] = value;\n        }\n        return currentConfig;\n      },\n      empty\n    );\n  }\n  if (config) {\n    empty = Object.entries(config).reduce(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (currentConfig: Record<string, any>, [key, value]) => {\n        if (value !== undefined) {\n          currentConfig[key] = value;\n        }\n        return currentConfig;\n      },\n      empty\n    );\n  }\n  if (empty?.configurable) {\n    for (const key of Object.keys(empty.configurable)) {\n      if (\n        PRIMITIVES.has(typeof empty.configurable[key]) &&\n        !empty.metadata?.[key]\n      ) {\n        if (!empty.metadata) {\n          empty.metadata = {};\n        }\n        empty.metadata[key] = empty.configurable[key];\n      }\n    }\n  }\n  if (empty.timeout !== undefined) {\n    if (empty.timeout <= 0) {\n      throw new Error(\"Timeout must be a positive number\");\n    }\n    const timeoutSignal = AbortSignal.timeout(empty.timeout);\n    if (empty.signal !== undefined) {\n      if (\"any\" in AbortSignal) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        empty.signal = (AbortSignal as any).any([empty.signal, timeoutSignal]);\n      }\n    } else {\n      empty.signal = timeoutSignal;\n    }\n    delete empty.timeout;\n  }\n  return empty as CallOptions;\n}\n\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig<CallOptions extends RunnableConfig>(\n  config: Partial<CallOptions> = {},\n  {\n    callbacks,\n    maxConcurrency,\n    recursionLimit,\n    runName,\n    configurable,\n    runId,\n  }: RunnableConfig = {}\n): Partial<CallOptions> {\n  const newConfig = ensureConfig(config);\n  if (callbacks !== undefined) {\n    /**\n     * If we're replacing callbacks we need to unset runName\n     * since that should apply only to the same run as the original callbacks\n     */\n    delete newConfig.runName;\n    newConfig.callbacks = callbacks;\n  }\n  if (recursionLimit !== undefined) {\n    newConfig.recursionLimit = recursionLimit;\n  }\n  if (maxConcurrency !== undefined) {\n    newConfig.maxConcurrency = maxConcurrency;\n  }\n  if (runName !== undefined) {\n    newConfig.runName = runName;\n  }\n  if (configurable !== undefined) {\n    newConfig.configurable = { ...newConfig.configurable, ...configurable };\n  }\n  if (runId !== undefined) {\n    delete newConfig.runId;\n  }\n  return newConfig;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function pickRunnableConfigKeys<CallOptions extends Record<string, any>>(\n  config?: CallOptions\n): Partial<RunnableConfig> | undefined {\n  return config\n    ? {\n        configurable: config.configurable,\n        recursionLimit: config.recursionLimit,\n        callbacks: config.callbacks,\n        tags: config.tags,\n        metadata: config.metadata,\n        maxConcurrency: config.maxConcurrency,\n        timeout: config.timeout,\n        signal: config.signal,\n      }\n    : undefined;\n}\n"],"names":["config?: RunnableConfig","copy: Partial<CallOptions>","baseKeys: string[]","config?: CallOptions","empty: RunnableConfig","currentConfig: Record<string, any>","config: Partial<CallOptions>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5455, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/signal.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/signal.ts"],"sourcesContent":["/**\n * Race a promise with an abort signal. If the signal is aborted, the promise will\n * be rejected with the error from the signal. If the promise is rejected, the signal will be aborted.\n *\n * @param promise - The promise to race.\n * @param signal - The abort signal.\n * @returns The result of the promise.\n */\nexport async function raceWithSignal<T>(\n  promise: Promise<T>,\n  signal?: AbortSignal\n): Promise<T> {\n  if (signal === undefined) {\n    return promise;\n  }\n  let listener: () => void;\n  return Promise.race([\n    promise.catch<T>((err) => {\n      if (!signal?.aborted) {\n        throw err;\n      } else {\n        return undefined as T;\n      }\n    }),\n    new Promise<never>((_, reject) => {\n      listener = () => {\n        reject(getAbortSignalError(signal));\n      };\n      signal.addEventListener(\"abort\", listener);\n      // Must be here inside the promise to avoid a race condition\n      if (signal.aborted) {\n        reject(getAbortSignalError(signal));\n      }\n    }),\n  ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n\n/**\n * Get the error from an abort signal. Since you can set the reason to anything,\n * we have to do some type gymnastics to get a proper error message.\n *\n * @param signal - The abort signal.\n * @returns The error from the abort signal.\n */\nexport function getAbortSignalError(signal?: AbortSignal) {\n  // eslint-disable-next-line no-instanceof/no-instanceof\n  if (signal?.reason instanceof Error) {\n    return signal.reason;\n  }\n\n  if (typeof signal?.reason === \"string\") {\n    return new Error(signal.reason);\n  }\n\n  return new Error(\"Aborted\");\n}\n"],"names":["promise: Promise<T>","signal?: AbortSignal","listener: () => void"],"mappings":";;;;;;;;;;;;;;AAQA,eAAsB,eACpBA,OAAAA,EACAC,MAAAA,EACY;IACZ,IAAI,WAAW,KAAA,EACb,CAAA,OAAO;IAET,IAAIC;IACJ,OAAO,QAAQ,IAAA,CAAK;QAClB,QAAQ,KAAA,CAAS,CAAC,QAAQ;YACxB,IAAI,CAAC,QAAQ,QACX,CAAA,MAAM;iBAEN,OAAO,KAAA;QAEV,EAAC;QACF,IAAI,QAAe,CAAC,GAAG,WAAW;YAChC,WAAW,MAAM;gBACf,OAAO,oBAAoB,OAAO,CAAC;YACpC;YACD,OAAO,gBAAA,CAAiB,SAAS,SAAS;YAE1C,IAAI,OAAO,OAAA,EACT,OAAO,oBAAoB,OAAO,CAAC;QAEtC,EACF;KAAA,CAAC,CAAC,OAAA,CAAQ,IAAM,OAAO,mBAAA,CAAoB,SAAS,SAAS,CAAC;AAChE;;;;;;;GASD,SAAgB,oBAAoBD,MAAAA,EAAsB;IAExD,IAAI,QAAQ,kBAAkB,MAC5B,CAAA,OAAO,OAAO,MAAA;IAGhB,IAAI,OAAO,QAAQ,WAAW,SAC5B,CAAA,OAAO,IAAI,MAAM,OAAO,MAAA;IAG1B,OAAA,aAAA,GAAO,IAAI,MAAM;AAClB","debugId":null}},
    {"offset": {"line": 5503, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/stream.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/stream.ts"],"sourcesContent":["import { pickRunnableConfigKeys } from \"../runnables/config.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport type { IterableReadableStreamInterface } from \"../types/_internal.js\";\nimport { raceWithSignal } from \"./signal.js\";\n\n// Re-exported for backwards compatibility\n// Do NOT import this type from this file inside the project. Instead, always import from `types/_internal.js`\n// when using internally\nexport type { IterableReadableStreamInterface };\n\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream<T>\n  extends ReadableStream<T>\n  implements IterableReadableStreamInterface<T>\n{\n  public reader: ReadableStreamDefaultReader<T>;\n\n  ensureReader() {\n    if (!this.reader) {\n      this.reader = this.getReader();\n    }\n  }\n\n  async next(): Promise<IteratorResult<T>> {\n    this.ensureReader();\n    try {\n      const result = await this.reader.read();\n      if (result.done) {\n        this.reader.releaseLock(); // release lock when stream becomes closed\n        return {\n          done: true,\n          value: undefined,\n        };\n      } else {\n        return {\n          done: false,\n          value: result.value,\n        };\n      }\n    } catch (e) {\n      this.reader.releaseLock(); // release lock when stream becomes errored\n      throw e;\n    }\n  }\n\n  async return(): Promise<IteratorResult<T>> {\n    this.ensureReader();\n    // If wrapped in a Node stream, cancel is already called.\n    if (this.locked) {\n      const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n      this.reader.releaseLock(); // release lock first\n      await cancelPromise; // now await it\n    }\n    return { done: true, value: undefined };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async throw(e: any): Promise<IteratorResult<T>> {\n    this.ensureReader();\n    if (this.locked) {\n      const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n      this.reader.releaseLock(); // release lock first\n      await cancelPromise; // now await it\n    }\n    throw e;\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore Not present in Node 18 types, required in latest Node 22\n  async [Symbol.asyncDispose]() {\n    await this.return();\n  }\n\n  static fromReadableStream<T>(stream: ReadableStream<T>) {\n    // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n    const reader = stream.getReader();\n    return new IterableReadableStream<T>({\n      start(controller) {\n        return pump();\n        function pump(): Promise<T | undefined> {\n          return reader.read().then(({ done, value }) => {\n            // When no more data needs to be consumed, close the stream\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Enqueue the next data chunk into our target stream\n            controller.enqueue(value);\n            return pump();\n          });\n        }\n      },\n      cancel() {\n        reader.releaseLock();\n      },\n    });\n  }\n\n  static fromAsyncGenerator<T>(generator: AsyncGenerator<T>) {\n    return new IterableReadableStream<T>({\n      async pull(controller) {\n        const { value, done } = await generator.next();\n        // When no more data needs to be consumed, close the stream\n        if (done) {\n          controller.close();\n        }\n        // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n        controller.enqueue(value);\n      },\n      async cancel(reason) {\n        await generator.return(reason);\n      },\n    });\n  }\n}\n\nexport function atee<T>(\n  iter: AsyncGenerator<T>,\n  length = 2\n): AsyncGenerator<T>[] {\n  const buffers = Array.from(\n    { length },\n    () => [] as Array<IteratorResult<T> | IteratorReturnResult<T>>\n  );\n  return buffers.map(async function* makeIter(buffer) {\n    while (true) {\n      if (buffer.length === 0) {\n        const result = await iter.next();\n        for (const buffer of buffers) {\n          buffer.push(result);\n        }\n      } else if (buffer[0].done) {\n        return;\n      } else {\n        yield buffer.shift()!.value;\n      }\n    }\n  });\n}\n\nexport function concat<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  T extends Array<any> | string | number | Record<string, any> | any\n>(first: T, second: T): T {\n  if (Array.isArray(first) && Array.isArray(second)) {\n    return first.concat(second) as T;\n  } else if (typeof first === \"string\" && typeof second === \"string\") {\n    return (first + second) as T;\n  } else if (typeof first === \"number\" && typeof second === \"number\") {\n    return (first + second) as T;\n  } else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in (first as any) &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof (first as any).concat === \"function\"\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (first as any).concat(second) as T;\n  } else if (typeof first === \"object\" && typeof second === \"object\") {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const chunk = { ...first } as Record<string, any>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    for (const [key, value] of Object.entries(second as Record<string, any>)) {\n      if (key in chunk && !Array.isArray(chunk[key])) {\n        chunk[key] = concat(chunk[key], value);\n      } else {\n        chunk[key] = value;\n      }\n    }\n    return chunk as T;\n  } else {\n    throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n  }\n}\n\nexport class AsyncGeneratorWithSetup<\n  S = unknown,\n  T = unknown,\n  TReturn = unknown,\n  TNext = unknown\n> implements AsyncGenerator<T, TReturn, TNext>\n{\n  private generator: AsyncGenerator<T>;\n\n  public setup: Promise<S>;\n\n  public config?: unknown;\n\n  public signal?: AbortSignal;\n\n  private firstResult: Promise<IteratorResult<T>>;\n\n  private firstResultUsed = false;\n\n  constructor(params: {\n    generator: AsyncGenerator<T>;\n    startSetup?: () => Promise<S>;\n    config?: unknown;\n    signal?: AbortSignal;\n  }) {\n    this.generator = params.generator;\n    this.config = params.config;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.signal = params.signal ?? (this.config as any)?.signal;\n    // setup is a promise that resolves only after the first iterator value\n    // is available. this is useful when setup of several piped generators\n    // needs to happen in logical order, ie. in the order in which input to\n    // to each generator is available.\n    this.setup = new Promise((resolve, reject) => {\n      // eslint-disable-next-line no-void\n      void AsyncLocalStorageProviderSingleton.runWithConfig(\n        pickRunnableConfigKeys(\n          params.config as Record<string, unknown> | undefined\n        ),\n        async () => {\n          this.firstResult = params.generator.next();\n          if (params.startSetup) {\n            this.firstResult.then(params.startSetup).then(resolve, reject);\n          } else {\n            this.firstResult.then((_result) => resolve(undefined as S), reject);\n          }\n        },\n        true\n      );\n    });\n  }\n\n  async next(...args: [] | [TNext]): Promise<IteratorResult<T>> {\n    this.signal?.throwIfAborted();\n\n    if (!this.firstResultUsed) {\n      this.firstResultUsed = true;\n      return this.firstResult;\n    }\n\n    return AsyncLocalStorageProviderSingleton.runWithConfig(\n      pickRunnableConfigKeys(\n        this.config as Record<string, unknown> | undefined\n      ),\n      this.signal\n        ? async () => {\n            return raceWithSignal(this.generator.next(...args), this.signal);\n          }\n        : async () => {\n            return this.generator.next(...args);\n          },\n      true\n    );\n  }\n\n  async return(\n    value?: TReturn | PromiseLike<TReturn>\n  ): Promise<IteratorResult<T>> {\n    return this.generator.return(value);\n  }\n\n  async throw(e: Error): Promise<IteratorResult<T>> {\n    return this.generator.throw(e);\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore Not present in Node 18 types, required in latest Node 22\n  async [Symbol.asyncDispose]() {\n    await this.return();\n  }\n}\n\nexport async function pipeGeneratorWithSetup<\n  S,\n  A extends unknown[],\n  T,\n  TReturn,\n  TNext,\n  U,\n  UReturn,\n  UNext\n>(\n  to: (\n    g: AsyncGenerator<T, TReturn, TNext>,\n    s: S,\n    ...args: A\n  ) => AsyncGenerator<U, UReturn, UNext>,\n  generator: AsyncGenerator<T, TReturn, TNext>,\n  startSetup: () => Promise<S>,\n  signal: AbortSignal | undefined,\n  ...args: A\n) {\n  const gen = new AsyncGeneratorWithSetup({\n    generator,\n    startSetup,\n    signal,\n  });\n  const setup = await gen.setup;\n  return { output: to(gen, setup, ...args), setup };\n}\n"],"names":["e: any","stream: ReadableStream<T>","generator: AsyncGenerator<T>","iter: AsyncGenerator<T>","buffer","first: T","second: T","params: {\n    generator: AsyncGenerator<T>;\n    startSetup?: () => Promise<S>;\n    config?: unknown;\n    signal?: AbortSignal;\n  }","value?: TReturn | PromiseLike<TReturn>","e: Error","to: (\n    g: AsyncGenerator<T, TReturn, TNext>,\n    s: S,\n    ...args: A\n  ) => AsyncGenerator<U, UReturn, UNext>","generator: AsyncGenerator<T, TReturn, TNext>","startSetup: () => Promise<S>","signal: AbortSignal | undefined"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5711, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/fast-json-patch/src/helpers.ts"],"sourcesContent":["// @ts-nocheck\n\n// Inlined because of ESM import issues\n\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n  return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n  if (Array.isArray(obj)) {\n    const keys = new Array(obj.length);\n    for (let k = 0; k < keys.length; k++) {\n      keys[k] = \"\" + k;\n    }\n    return keys;\n  }\n  if (Object.keys) {\n    return Object.keys(obj);\n  }\n  let keys = [];\n  for (let i in obj) {\n    if (hasOwnProperty(obj, i)) {\n      keys.push(i);\n    }\n  }\n  return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n  switch (typeof obj) {\n    case \"object\":\n      return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n    case \"undefined\":\n      return null; //this is how JSON.stringify behaves for array items\n    default:\n      return obj; //no need to clone primitives\n  }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str: string): boolean {\n  let i = 0;\n  const len = str.length;\n  let charCode;\n  while (i < len) {\n    charCode = str.charCodeAt(i);\n    if (charCode >= 48 && charCode <= 57) {\n      i++;\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path: string): string {\n  if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1) return path;\n  return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path: string): string {\n  return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n\nexport function _getPathRecursive(root: Object, obj: Object): string {\n  let found;\n  for (let key in root) {\n    if (hasOwnProperty(root, key)) {\n      if (root[key] === obj) {\n        return escapePathComponent(key) + \"/\";\n      } else if (typeof root[key] === \"object\") {\n        found = _getPathRecursive(root[key], obj);\n        if (found != \"\") {\n          return escapePathComponent(key) + \"/\" + found;\n        }\n      }\n    }\n  }\n  return \"\";\n}\n\nexport function getPath(root: Object, obj: Object): string {\n  if (root === obj) {\n    return \"/\";\n  }\n  const path = _getPathRecursive(root, obj);\n  if (path === \"\") {\n    throw new Error(\"Object not found in root\");\n  }\n  return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj: any): boolean {\n  if (obj === undefined) {\n    return true;\n  }\n  if (obj) {\n    if (Array.isArray(obj)) {\n      for (let i = 0, len = obj.length; i < len; i++) {\n        if (hasUndefined(obj[i])) {\n          return true;\n        }\n      }\n    } else if (typeof obj === \"object\") {\n      const objKeys = _objectKeys(obj);\n      const objKeysLength = objKeys.length;\n      for (var i = 0; i < objKeysLength; i++) {\n        if (hasUndefined(obj[objKeys[i]])) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport type JsonPatchErrorName =\n  | \"SEQUENCE_NOT_AN_ARRAY\"\n  | \"OPERATION_NOT_AN_OBJECT\"\n  | \"OPERATION_OP_INVALID\"\n  | \"OPERATION_PATH_INVALID\"\n  | \"OPERATION_FROM_REQUIRED\"\n  | \"OPERATION_VALUE_REQUIRED\"\n  | \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\"\n  | \"OPERATION_PATH_CANNOT_ADD\"\n  | \"OPERATION_PATH_UNRESOLVABLE\"\n  | \"OPERATION_FROM_UNRESOLVABLE\"\n  | \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\"\n  | \"OPERATION_VALUE_OUT_OF_BOUNDS\"\n  | \"TEST_OPERATION_FAILED\";\n\nfunction patchErrorMessageFormatter(message: String, args: Object): string {\n  const messageParts = [message];\n  for (const key in args) {\n    const value =\n      typeof args[key] === \"object\"\n        ? JSON.stringify(args[key], null, 2)\n        : args[key]; // pretty print\n    if (typeof value !== \"undefined\") {\n      messageParts.push(`${key}: ${value}`);\n    }\n  }\n  return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n  constructor(\n    message: string,\n    public name: JsonPatchErrorName,\n    public index?: number,\n    public operation?: any,\n    public tree?: any\n  ) {\n    super(\n      patchErrorMessageFormatter(message, { name, index, operation, tree })\n    );\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n    this.message = patchErrorMessageFormatter(message, {\n      name,\n      index,\n      operation,\n      tree,\n    });\n  }\n}\n"],"names":["keys","str: string","path: string","obj: any","i","message: String","args: Object","message: string","name: JsonPatchErrorName","index?: number","operation?: any","tree?: any"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5845, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/fast-json-patch/src/core.ts"],"sourcesContent":["// @ts-nocheck\n\n// Inlined because of ESM import issues\n\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\ndeclare var require: any;\n\nimport {\n  PatchError,\n  _deepClone,\n  isInteger,\n  unescapePathComponent,\n  hasUndefined,\n} from \"./helpers.js\";\n\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n\nexport type Operation =\n  | AddOperation<any>\n  | RemoveOperation\n  | ReplaceOperation<any>\n  | MoveOperation\n  | CopyOperation\n  | TestOperation<any>\n  | GetOperation<any>;\n\nexport interface Validator<T> {\n  (\n    operation: Operation,\n    index: number,\n    document: T,\n    existingPathFragment: string\n  ): void;\n}\n\nexport interface OperationResult<T> {\n  removed?: any;\n  test?: boolean;\n  newDocument: T;\n}\n\nexport interface BaseOperation {\n  path: string;\n}\n\nexport interface AddOperation<T> extends BaseOperation {\n  op: \"add\";\n  value: T;\n}\n\nexport interface RemoveOperation extends BaseOperation {\n  op: \"remove\";\n}\n\nexport interface ReplaceOperation<T> extends BaseOperation {\n  op: \"replace\";\n  value: T;\n}\n\nexport interface MoveOperation extends BaseOperation {\n  op: \"move\";\n  from: string;\n}\n\nexport interface CopyOperation extends BaseOperation {\n  op: \"copy\";\n  from: string;\n}\n\nexport interface TestOperation<T> extends BaseOperation {\n  op: \"test\";\n  value: T;\n}\n\nexport interface GetOperation<T> extends BaseOperation {\n  op: \"_get\";\n  value: T;\n}\nexport interface PatchResult<T> extends Array<OperationResult<T>> {\n  newDocument: T;\n}\n\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n\n/* The operations applicable to an object */\nconst objOps = {\n  add: function (obj, key, document) {\n    obj[key] = this.value;\n    return { newDocument: document };\n  },\n  remove: function (obj, key, document) {\n    var removed = obj[key];\n    delete obj[key];\n    return { newDocument: document, removed };\n  },\n  replace: function (obj, key, document) {\n    var removed = obj[key];\n    obj[key] = this.value;\n    return { newDocument: document, removed };\n  },\n  move: function (obj, key, document) {\n    /* in case move target overwrites an existing value,\n    return the removed value, this can be taxing performance-wise,\n    and is potentially unneeded */\n    let removed = getValueByPointer(document, this.path);\n\n    if (removed) {\n      removed = _deepClone(removed);\n    }\n\n    const originalValue = applyOperation(document, {\n      op: \"remove\",\n      path: this.from,\n    }).removed;\n\n    applyOperation(document, {\n      op: \"add\",\n      path: this.path,\n      value: originalValue,\n    });\n\n    return { newDocument: document, removed };\n  },\n  copy: function (obj, key, document) {\n    const valueToCopy = getValueByPointer(document, this.from);\n    // enforce copy by value so further operations don't affect source (see issue #177)\n    applyOperation(document, {\n      op: \"add\",\n      path: this.path,\n      value: _deepClone(valueToCopy),\n    });\n    return { newDocument: document };\n  },\n  test: function (obj, key, document) {\n    return { newDocument: document, test: _areEquals(obj[key], this.value) };\n  },\n  _get: function (obj, key, document) {\n    this.value = obj[key];\n    return { newDocument: document };\n  },\n};\n\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n  add: function (arr, i, document) {\n    if (isInteger(i)) {\n      arr.splice(i, 0, this.value);\n    } else {\n      // array props\n      arr[i] = this.value;\n    }\n    // this may be needed when using '-' in an array\n    return { newDocument: document, index: i };\n  },\n  remove: function (arr, i, document) {\n    var removedList = arr.splice(i, 1);\n    return { newDocument: document, removed: removedList[0] };\n  },\n  replace: function (arr, i, document) {\n    var removed = arr[i];\n    arr[i] = this.value;\n    return { newDocument: document, removed };\n  },\n  move: objOps.move,\n  copy: objOps.copy,\n  test: objOps.test,\n  _get: objOps._get,\n};\n\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document: any, pointer: string): any {\n  if (pointer == \"\") {\n    return document;\n  }\n  var getOriginalDestination = <GetOperation<any>>{ op: \"_get\", path: pointer };\n  applyOperation(document, getOriginalDestination);\n  return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation<T>(\n  document: T,\n  operation: Operation,\n  validateOperation: boolean | Validator<T> = false,\n  mutateDocument: boolean = true,\n  banPrototypeModifications: boolean = true,\n  index: number = 0\n): OperationResult<T> {\n  if (validateOperation) {\n    if (typeof validateOperation == \"function\") {\n      validateOperation(operation, 0, document, operation.path);\n    } else {\n      validator(operation, 0);\n    }\n  }\n  /* ROOT OPERATIONS */\n  if (operation.path === \"\") {\n    let returnValue: OperationResult<T> = { newDocument: document };\n    if (operation.op === \"add\") {\n      returnValue.newDocument = operation.value;\n      return returnValue;\n    } else if (operation.op === \"replace\") {\n      returnValue.newDocument = operation.value;\n      returnValue.removed = document; //document we removed\n      return returnValue;\n    } else if (operation.op === \"move\" || operation.op === \"copy\") {\n      // it's a move or copy to root\n      returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n      if (operation.op === \"move\") {\n        // report removed item\n        returnValue.removed = document;\n      }\n      return returnValue;\n    } else if (operation.op === \"test\") {\n      returnValue.test = _areEquals(document, operation.value);\n      if (returnValue.test === false) {\n        throw new JsonPatchError(\n          \"Test operation failed\",\n          \"TEST_OPERATION_FAILED\",\n          index,\n          operation,\n          document\n        );\n      }\n      returnValue.newDocument = document;\n      return returnValue;\n    } else if (operation.op === \"remove\") {\n      // a remove on root\n      returnValue.removed = document;\n      returnValue.newDocument = null;\n      return returnValue;\n    } else if (operation.op === \"_get\") {\n      operation.value = document;\n      return returnValue;\n    } else {\n      /* bad operation */\n      if (validateOperation) {\n        throw new JsonPatchError(\n          \"Operation `op` property is not one of operations defined in RFC-6902\",\n          \"OPERATION_OP_INVALID\",\n          index,\n          operation,\n          document\n        );\n      } else {\n        return returnValue;\n      }\n    }\n  } /* END ROOT OPERATIONS */ else {\n    if (!mutateDocument) {\n      document = _deepClone(document);\n    }\n    const path = operation.path || \"\";\n    const keys = path.split(\"/\");\n    let obj = document;\n    let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n    let len = keys.length;\n    let existingPathFragment = undefined;\n    let key: string | number;\n    let validateFunction;\n    if (typeof validateOperation == \"function\") {\n      validateFunction = validateOperation;\n    } else {\n      validateFunction = validator;\n    }\n    while (true) {\n      key = keys[t];\n      if (key && key.indexOf(\"~\") != -1) {\n        key = unescapePathComponent(key);\n      }\n\n      if (\n        banPrototypeModifications &&\n        (key == \"__proto__\" ||\n          (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))\n      ) {\n        throw new TypeError(\n          \"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\"\n        );\n      }\n\n      if (validateOperation) {\n        if (existingPathFragment === undefined) {\n          if (obj[key] === undefined) {\n            existingPathFragment = keys.slice(0, t).join(\"/\");\n          } else if (t == len - 1) {\n            existingPathFragment = operation.path;\n          }\n          if (existingPathFragment !== undefined) {\n            validateFunction(operation, 0, document, existingPathFragment);\n          }\n        }\n      }\n      t++;\n      if (Array.isArray(obj)) {\n        if (key === \"-\") {\n          key = obj.length;\n        } else {\n          if (validateOperation && !isInteger(key)) {\n            throw new JsonPatchError(\n              \"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\",\n              \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\",\n              index,\n              operation,\n              document\n            );\n          } // only parse key when it's an integer for `arr.prop` to work\n          else if (isInteger(key)) {\n            key = ~~key;\n          }\n        }\n        if (t >= len) {\n          if (validateOperation && operation.op === \"add\" && key > obj.length) {\n            throw new JsonPatchError(\n              \"The specified index MUST NOT be greater than the number of elements in the array\",\n              \"OPERATION_VALUE_OUT_OF_BOUNDS\",\n              index,\n              operation,\n              document\n            );\n          }\n          const returnValue = arrOps[operation.op].call(\n            operation,\n            obj,\n            key,\n            document\n          ); // Apply patch\n          if (returnValue.test === false) {\n            throw new JsonPatchError(\n              \"Test operation failed\",\n              \"TEST_OPERATION_FAILED\",\n              index,\n              operation,\n              document\n            );\n          }\n          return returnValue;\n        }\n      } else {\n        if (t >= len) {\n          const returnValue = objOps[operation.op].call(\n            operation,\n            obj,\n            key,\n            document\n          ); // Apply patch\n          if (returnValue.test === false) {\n            throw new JsonPatchError(\n              \"Test operation failed\",\n              \"TEST_OPERATION_FAILED\",\n              index,\n              operation,\n              document\n            );\n          }\n          return returnValue;\n        }\n      }\n      obj = obj[key];\n      // If we have more keys in the path, but the next value isn't a non-null object,\n      // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n      if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n        throw new JsonPatchError(\n          \"Cannot perform operation at the desired path\",\n          \"OPERATION_PATH_UNRESOLVABLE\",\n          index,\n          operation,\n          document\n        );\n      }\n    }\n  }\n}\n\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch<T>(\n  document: T,\n  patch: ReadonlyArray<Operation>,\n  validateOperation?: boolean | Validator<T>,\n  mutateDocument: boolean = true,\n  banPrototypeModifications: boolean = true\n): PatchResult<T> {\n  if (validateOperation) {\n    if (!Array.isArray(patch)) {\n      throw new JsonPatchError(\n        \"Patch sequence must be an array\",\n        \"SEQUENCE_NOT_AN_ARRAY\"\n      );\n    }\n  }\n  if (!mutateDocument) {\n    document = _deepClone(document);\n  }\n  const results = new Array(patch.length) as PatchResult<T>;\n\n  for (let i = 0, length = patch.length; i < length; i++) {\n    // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n    results[i] = applyOperation(\n      document,\n      patch[i],\n      validateOperation,\n      true,\n      banPrototypeModifications,\n      i\n    );\n    document = results[i].newDocument; // in case root was replaced\n  }\n  results.newDocument = document;\n  return results;\n}\n\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer<T>(\n  document: T,\n  operation: Operation,\n  index: number\n): T {\n  const operationResult: OperationResult<T> = applyOperation(\n    document,\n    operation\n  );\n  if (operationResult.test === false) {\n    // failed test\n    throw new JsonPatchError(\n      \"Test operation failed\",\n      \"TEST_OPERATION_FAILED\",\n      index,\n      operation,\n      document\n    );\n  }\n  return operationResult.newDocument;\n}\n\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(\n  operation: Operation,\n  index: number,\n  document?: any,\n  existingPathFragment?: string\n): void {\n  if (\n    typeof operation !== \"object\" ||\n    operation === null ||\n    Array.isArray(operation)\n  ) {\n    throw new JsonPatchError(\n      \"Operation is not an object\",\n      \"OPERATION_NOT_AN_OBJECT\",\n      index,\n      operation,\n      document\n    );\n  } else if (!objOps[operation.op]) {\n    throw new JsonPatchError(\n      \"Operation `op` property is not one of operations defined in RFC-6902\",\n      \"OPERATION_OP_INVALID\",\n      index,\n      operation,\n      document\n    );\n  } else if (typeof operation.path !== \"string\") {\n    throw new JsonPatchError(\n      \"Operation `path` property is not a string\",\n      \"OPERATION_PATH_INVALID\",\n      index,\n      operation,\n      document\n    );\n  } else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n    // paths that aren't empty string should start with \"/\"\n    throw new JsonPatchError(\n      'Operation `path` property must start with \"/\"',\n      \"OPERATION_PATH_INVALID\",\n      index,\n      operation,\n      document\n    );\n  } else if (\n    (operation.op === \"move\" || operation.op === \"copy\") &&\n    typeof operation.from !== \"string\"\n  ) {\n    throw new JsonPatchError(\n      \"Operation `from` property is not present (applicable in `move` and `copy` operations)\",\n      \"OPERATION_FROM_REQUIRED\",\n      index,\n      operation,\n      document\n    );\n  } else if (\n    (operation.op === \"add\" ||\n      operation.op === \"replace\" ||\n      operation.op === \"test\") &&\n    operation.value === undefined\n  ) {\n    throw new JsonPatchError(\n      \"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\",\n      \"OPERATION_VALUE_REQUIRED\",\n      index,\n      operation,\n      document\n    );\n  } else if (\n    (operation.op === \"add\" ||\n      operation.op === \"replace\" ||\n      operation.op === \"test\") &&\n    hasUndefined(operation.value)\n  ) {\n    throw new JsonPatchError(\n      \"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\",\n      \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\",\n      index,\n      operation,\n      document\n    );\n  } else if (document) {\n    if (operation.op == \"add\") {\n      var pathLen = operation.path.split(\"/\").length;\n      var existingPathLen = existingPathFragment.split(\"/\").length;\n      if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n        throw new JsonPatchError(\n          \"Cannot perform an `add` operation at the desired path\",\n          \"OPERATION_PATH_CANNOT_ADD\",\n          index,\n          operation,\n          document\n        );\n      }\n    } else if (\n      operation.op === \"replace\" ||\n      operation.op === \"remove\" ||\n      <any>operation.op === \"_get\"\n    ) {\n      if (operation.path !== existingPathFragment) {\n        throw new JsonPatchError(\n          \"Cannot perform the operation at a path that does not exist\",\n          \"OPERATION_PATH_UNRESOLVABLE\",\n          index,\n          operation,\n          document\n        );\n      }\n    } else if (operation.op === \"move\" || operation.op === \"copy\") {\n      var existingValue: any = {\n        op: \"_get\",\n        path: operation.from,\n        value: undefined,\n      };\n      var error = validate([existingValue], document);\n      if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n        throw new JsonPatchError(\n          \"Cannot perform the operation from a path that does not exist\",\n          \"OPERATION_FROM_UNRESOLVABLE\",\n          index,\n          operation,\n          document\n        );\n      }\n    }\n  }\n}\n\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate<T>(\n  sequence: ReadonlyArray<Operation>,\n  document?: T,\n  externalValidator?: Validator<T>\n): PatchError {\n  try {\n    if (!Array.isArray(sequence)) {\n      throw new JsonPatchError(\n        \"Patch sequence must be an array\",\n        \"SEQUENCE_NOT_AN_ARRAY\"\n      );\n    }\n    if (document) {\n      //clone document and sequence so that we can safely try applying operations\n      applyPatch(\n        _deepClone(document),\n        _deepClone(sequence),\n        externalValidator || true\n      );\n    } else {\n      externalValidator = externalValidator || validator;\n      for (var i = 0; i < sequence.length; i++) {\n        externalValidator(sequence[i], i, document, undefined);\n      }\n    }\n  } catch (e) {\n    if (e instanceof JsonPatchError) {\n      return e;\n    } else {\n      throw e;\n    }\n  }\n}\n\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n\n// Copyright (c) 2017 Evgeny Poberezkin\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a: any, b: any): boolean {\n  if (a === b) return true;\n\n  if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n    var arrA = Array.isArray(a),\n      arrB = Array.isArray(b),\n      i,\n      length,\n      key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0; ) if (!_areEquals(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var keys = Object.keys(a);\n    length = keys.length;\n\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0; ) if (!b.hasOwnProperty(keys[i])) return false;\n\n    for (i = length; i-- !== 0; ) {\n      key = keys[i];\n      if (!_areEquals(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n"],"names":["document: any","pointer: string","document: T","operation: Operation","validateOperation: boolean | Validator<T>","mutateDocument: boolean","banPrototypeModifications: boolean","index: number","returnValue: OperationResult<T>","key: string | number","patch: ReadonlyArray<Operation>","validateOperation?: boolean | Validator<T>","operationResult: OperationResult<T>","document?: any","existingPathFragment?: string","existingValue: any","sequence: ReadonlyArray<Operation>","document?: T","externalValidator?: Validator<T>","a: any","b: any"],"mappings":"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","debugId":null}},
    {"offset": {"line": 6201, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/fast-json-patch/src/duplex.ts"],"sourcesContent":["// @ts-nocheck\n\n// Inlined because of ESM import issues\n\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport {\n  _deepClone,\n  _objectKeys,\n  escapePathComponent,\n  hasOwnProperty,\n} from \"./helpers.js\";\nimport { applyPatch, Operation } from \"./core.js\";\n\nexport interface Observer<T> {\n  object: T;\n  patches: Operation[];\n  unobserve: () => void;\n  callback: (patches: Operation[]) => void;\n}\n\nvar beforeDict = new WeakMap();\n\nclass Mirror {\n  obj: any;\n  observers: Map<Function, ObserverInfo> = new Map();\n  value: Object | Array<any>;\n\n  constructor(obj: Object) {\n    this.obj = obj;\n  }\n}\n\nclass ObserverInfo {\n  callback: Function;\n  observer: ObserverInfo;\n\n  constructor(callback: Function, observer: ObserverInfo) {\n    this.callback = callback;\n    this.observer = observer;\n  }\n}\n\nfunction getMirror(obj: Object): Mirror {\n  return beforeDict.get(obj);\n}\n\nfunction getObserverFromMirror(mirror: Mirror, callback): ObserverInfo {\n  return mirror.observers.get(callback);\n}\n\nfunction removeObserverFromMirror(mirror: Mirror, observer): void {\n  mirror.observers.delete(observer.callback);\n}\n\n/**\n * Detach an observer from an object\n */\nexport function unobserve<T>(root: T, observer: Observer<T>) {\n  observer.unobserve();\n}\n\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe<T>(\n  obj: Object | Array<T>,\n  callback?: (patches: Operation[]) => void\n): Observer<T> {\n  var patches = [];\n  var observer;\n  var mirror = getMirror(obj);\n\n  if (!mirror) {\n    mirror = new Mirror(obj);\n    beforeDict.set(obj, mirror);\n  } else {\n    const observerInfo = getObserverFromMirror(mirror, callback);\n    observer = observerInfo && observerInfo.observer;\n  }\n\n  if (observer) {\n    return observer;\n  }\n\n  observer = {};\n\n  mirror.value = _deepClone(obj);\n\n  if (callback) {\n    observer.callback = callback;\n    observer.next = null;\n\n    var dirtyCheck = () => {\n      generate(observer);\n    };\n    var fastCheck = () => {\n      clearTimeout(observer.next);\n      observer.next = setTimeout(dirtyCheck);\n    };\n    if (typeof window !== \"undefined\") {\n      //not Node\n      window.addEventListener(\"mouseup\", fastCheck);\n      window.addEventListener(\"keyup\", fastCheck);\n      window.addEventListener(\"mousedown\", fastCheck);\n      window.addEventListener(\"keydown\", fastCheck);\n      window.addEventListener(\"change\", fastCheck);\n    }\n  }\n  observer.patches = patches;\n  observer.object = obj;\n\n  observer.unobserve = () => {\n    generate(observer);\n    clearTimeout(observer.next);\n    removeObserverFromMirror(mirror, observer);\n\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"mouseup\", fastCheck);\n      window.removeEventListener(\"keyup\", fastCheck);\n      window.removeEventListener(\"mousedown\", fastCheck);\n      window.removeEventListener(\"keydown\", fastCheck);\n      window.removeEventListener(\"change\", fastCheck);\n    }\n  };\n\n  mirror.observers.set(callback, new ObserverInfo(callback, observer));\n\n  return observer;\n}\n\n/**\n * Generate an array of patches from an observer\n */\nexport function generate<T>(\n  observer: Observer<Object>,\n  invertible = false\n): Operation[] {\n  var mirror = beforeDict.get(observer.object);\n\n  _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n  if (observer.patches.length) {\n    applyPatch(mirror.value, observer.patches);\n  }\n  var temp = observer.patches;\n  if (temp.length > 0) {\n    observer.patches = [];\n    if (observer.callback) {\n      observer.callback(temp);\n    }\n  }\n  return temp;\n}\n\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n  if (obj === mirror) {\n    return;\n  }\n\n  if (typeof obj.toJSON === \"function\") {\n    obj = obj.toJSON();\n  }\n\n  var newKeys = _objectKeys(obj);\n  var oldKeys = _objectKeys(mirror);\n  var changed = false;\n  var deleted = false;\n\n  //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n\n  for (var t = oldKeys.length - 1; t >= 0; t--) {\n    var key = oldKeys[t];\n    var oldVal = mirror[key];\n\n    if (\n      hasOwnProperty(obj, key) &&\n      !(\n        obj[key] === undefined &&\n        oldVal !== undefined &&\n        Array.isArray(obj) === false\n      )\n    ) {\n      var newVal = obj[key];\n\n      if (\n        typeof oldVal == \"object\" &&\n        oldVal != null &&\n        typeof newVal == \"object\" &&\n        newVal != null &&\n        Array.isArray(oldVal) === Array.isArray(newVal)\n      ) {\n        _generate(\n          oldVal,\n          newVal,\n          patches,\n          path + \"/\" + escapePathComponent(key),\n          invertible\n        );\n      } else {\n        if (oldVal !== newVal) {\n          changed = true;\n          if (invertible) {\n            patches.push({\n              op: \"test\",\n              path: path + \"/\" + escapePathComponent(key),\n              value: _deepClone(oldVal),\n            });\n          }\n          patches.push({\n            op: \"replace\",\n            path: path + \"/\" + escapePathComponent(key),\n            value: _deepClone(newVal),\n          });\n        }\n      }\n    } else if (Array.isArray(mirror) === Array.isArray(obj)) {\n      if (invertible) {\n        patches.push({\n          op: \"test\",\n          path: path + \"/\" + escapePathComponent(key),\n          value: _deepClone(oldVal),\n        });\n      }\n      patches.push({\n        op: \"remove\",\n        path: path + \"/\" + escapePathComponent(key),\n      });\n      deleted = true; // property has been deleted\n    } else {\n      if (invertible) {\n        patches.push({ op: \"test\", path, value: mirror });\n      }\n      patches.push({ op: \"replace\", path, value: obj });\n      changed = true;\n    }\n  }\n\n  if (!deleted && newKeys.length == oldKeys.length) {\n    return;\n  }\n\n  for (var t = 0; t < newKeys.length; t++) {\n    var key = newKeys[t];\n    if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n      patches.push({\n        op: \"add\",\n        path: path + \"/\" + escapePathComponent(key),\n        value: _deepClone(obj[key]),\n      });\n    }\n  }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(\n  tree1: Object | Array<any>,\n  tree2: Object | Array<any>,\n  invertible = false\n): Operation[] {\n  var patches = [];\n  _generate(tree1, tree2, patches, \"\", invertible);\n  return patches;\n}\n"],"names":["tree1: Object | Array<any>","tree2: Object | Array<any>"],"mappings":";;;;;;;;;AA8JA,SAAS,UAAU,MAAA,EAAQ,GAAA,EAAK,OAAA,EAAS,IAAA,EAAM,UAAA,EAAY;IACzD,IAAI,QAAQ,OACV,CAAA;IAGF,IAAI,OAAO,IAAI,MAAA,KAAW,YACxB,MAAM,IAAI,MAAA,EAAQ;IAGpB,IAAI,cAAU,0TAAA,EAAY,IAAI;IAC9B,IAAI,cAAU,0TAAA,EAAY,OAAO;IACjC,IAAI,UAAU;IACd,IAAI,UAAU;IAId,IAAK,IAAI,IAAI,QAAQ,MAAA,GAAS,GAAG,KAAK,GAAG,IAAK;QAC5C,IAAI,MAAM,OAAA,CAAQ,EAAA;QAClB,IAAI,SAAS,MAAA,CAAO,IAAA;QAEpB,QACE,6TAAA,EAAe,KAAK,IAAI,IACxB,CAAA,CACE,GAAA,CAAI,IAAA,KAAS,KAAA,KACb,WAAW,KAAA,KACX,MAAM,OAAA,CAAQ,IAAI,KAAK,KAAA,GAEzB;YACA,IAAI,SAAS,GAAA,CAAI,IAAA;YAEjB,IACE,OAAO,UAAU,YACjB,UAAU,QACV,OAAO,UAAU,YACjB,UAAU,QACV,MAAM,OAAA,CAAQ,OAAO,KAAK,MAAM,OAAA,CAAQ,OAAO,EAE/C,UACE,QACA,QACA,SACA,OAAO,UAAM,kUAAA,EAAoB,IAAI,EACrC,WACD;qBAEG,WAAW,QAAQ;gBACrB,UAAU;gBACV,IAAI,YACF,QAAQ,IAAA,CAAK;oBACX,IAAI;oBACJ,MAAM,OAAO,UAAM,kUAAA,EAAoB,IAAI;oBAC3C,WAAO,yTAAA,EAAW,OAAO;gBAC1B,EAAC;gBAEJ,QAAQ,IAAA,CAAK;oBACX,IAAI;oBACJ,MAAM,OAAO,UAAM,kUAAA,EAAoB,IAAI;oBAC3C,WAAO,yTAAA,EAAW,OAAO;gBAC1B,EAAC;YACH;QAEJ,OAAA,IAAU,MAAM,OAAA,CAAQ,OAAO,KAAK,MAAM,OAAA,CAAQ,IAAI,EAAE;YACvD,IAAI,YACF,QAAQ,IAAA,CAAK;gBACX,IAAI;gBACJ,MAAM,OAAO,UAAM,kUAAA,EAAoB,IAAI;gBAC3C,WAAO,yTAAA,EAAW,OAAO;YAC1B,EAAC;YAEJ,QAAQ,IAAA,CAAK;gBACX,IAAI;gBACJ,MAAM,OAAO,UAAM,kUAAA,EAAoB,IAAI;YAC5C,EAAC;YACF,UAAU;QACX,OAAM;YACL,IAAI,YACF,QAAQ,IAAA,CAAK;gBAAE,IAAI;gBAAQ;gBAAM,OAAO;YAAQ,EAAC;YAEnD,QAAQ,IAAA,CAAK;gBAAE,IAAI;gBAAW;gBAAM,OAAO;YAAK,EAAC;YACjD,UAAU;QACX;IACF;IAED,IAAI,CAAC,WAAW,QAAQ,MAAA,IAAU,QAAQ,MAAA,CACxC,CAAA;IAGF,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAA,EAAQ,IAAK;QACvC,IAAI,MAAM,OAAA,CAAQ,EAAA;QAClB,IAAI,KAAC,6TAAA,EAAe,QAAQ,IAAI,IAAI,GAAA,CAAI,IAAA,KAAS,KAAA,GAC/C,QAAQ,IAAA,CAAK;YACX,IAAI;YACJ,MAAM,OAAO,UAAM,kUAAA,EAAoB,IAAI;YAC3C,WAAO,yTAAA,EAAW,GAAA,CAAI,IAAA,CAAK;QAC5B,EAAC;IAEL;AACF;;;GAID,SAAgB,QACdA,KAAAA,EACAC,KAAAA,EACA,aAAa,KAAA,EACA;IACb,IAAI,UAAU,CAAE,CAAA;IAChB,UAAU,OAAO,OAAO,SAAS,IAAI,WAAW;IAChD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 6284, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/fast-json-patch/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/fast-json-patch/index.ts"],"sourcesContent":["export * from \"./src/core.js\";\nexport * from \"./src/duplex.js\";\nexport {\n  PatchError as JsonPatchError,\n  _deepClone as deepClone,\n  escapePathComponent,\n  unescapePathComponent,\n} from \"./src/helpers.js\";\n\n/**\n * Default export for backwards compat\n */\n\nimport * as core from \"./src/core.js\";\nimport {\n  PatchError as JsonPatchError,\n  _deepClone as deepClone,\n  escapePathComponent,\n  unescapePathComponent,\n} from \"./src/helpers.js\";\n\nexport default {\n  ...core,\n  // ...duplex,\n  JsonPatchError,\n  deepClone,\n  escapePathComponent,\n  unescapePathComponent,\n};\n"],"names":["core"],"mappings":";;;;;;;;AAqBA,IAAA,0BAAe;IACb,GAAGA,wTAAAA;IAEH,gBAAA,yTAAA;IACA,WAAA,yTAAA;yBACA,kUAAA;2BACA,oUAAA;AACD","debugId":null}},
    {"offset": {"line": 6304, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/log_stream.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/log_stream.ts"],"sourcesContent":["import {\n  applyPatch,\n  type Operation as JSONPatchOperation,\n} from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer, type Run } from \"./base.js\";\nimport {\n  BaseCallbackHandler,\n  BaseCallbackHandlerInput,\n  CallbackHandlerPrefersStreaming,\n  HandleLLMNewTokenCallbackFields,\n} from \"../callbacks/base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { ChatGenerationChunk, GenerationChunk } from \"../outputs.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport type { StreamEvent, StreamEventData } from \"./event_stream.js\";\n\nexport type { StreamEvent, StreamEventData };\n\n/**\n * Interface that represents the structure of a log entry in the\n * `LogStreamCallbackHandler`.\n */\nexport type LogEntry = {\n  /** ID of the sub-run. */\n  id: string;\n  /** Name of the object being run. */\n  name: string;\n  /** Type of the object being run, eg. prompt, chain, llm, etc. */\n  type: string;\n  /** List of tags for the run. */\n  tags: string[];\n  /** Key-value pairs of metadata for the run. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  metadata: Record<string, any>;\n  /** ISO-8601 timestamp of when the run started. */\n  start_time: string;\n  /** List of general output chunks streamed by this run. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  streamed_output: any[];\n  /** List of LLM tokens streamed by this run, if applicable. */\n  streamed_output_str: string[];\n  /** Inputs to this run. Not available currently via streamLog. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inputs?: any;\n  /** Final output of this run. Only available after the run has finished successfully. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  final_output?: any;\n  /** ISO-8601 timestamp of when the run ended. Only available after the run has finished. */\n  end_time?: string;\n};\n\nexport type RunState = {\n  /** ID of the sub-run. */\n  id: string;\n  /** List of output chunks streamed by Runnable.stream() */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  streamed_output: any[];\n  /** Final output of the run, usually the result of aggregating streamed_output. Only available after the run has finished successfully. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  final_output?: any;\n  /**\n   * List of sub-runs contained in this run, if any, in the order they were started.\n   * If filters were supplied, this list will contain only the runs that matched the filters.\n   */\n  logs: Record<string, LogEntry>;\n  /** Name of the object being run. */\n  name: string;\n  /** Type of the object being run, eg. prompt, chain, llm, etc. */\n  type: string;\n};\n\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n  ops: JSONPatchOperation[];\n\n  constructor(fields: { ops?: JSONPatchOperation[] }) {\n    this.ops = fields.ops ?? [];\n  }\n\n  concat(other: RunLogPatch) {\n    const ops = this.ops.concat(other.ops);\n    const states = applyPatch({}, ops);\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunLog({\n      ops,\n      state: states[states.length - 1].newDocument as RunState,\n    });\n  }\n}\n\nexport class RunLog extends RunLogPatch {\n  state: RunState;\n\n  constructor(fields: { ops?: JSONPatchOperation[]; state: RunState }) {\n    super(fields);\n    this.state = fields.state;\n  }\n\n  concat(other: RunLogPatch) {\n    const ops = this.ops.concat(other.ops);\n    const states = applyPatch(this.state, other.ops);\n    return new RunLog({ ops, state: states[states.length - 1].newDocument });\n  }\n\n  static fromRunLogPatch(patch: RunLogPatch) {\n    const states = applyPatch({}, patch.ops);\n    return new RunLog({\n      ops: patch.ops,\n      state: states[states.length - 1].newDocument as RunState,\n    });\n  }\n}\n\nexport type SchemaFormat = \"original\" | \"streaming_events\";\n\nexport interface LogStreamCallbackHandlerInput\n  extends BaseCallbackHandlerInput {\n  autoClose?: boolean;\n  includeNames?: string[];\n  includeTypes?: string[];\n  includeTags?: string[];\n  excludeNames?: string[];\n  excludeTypes?: string[];\n  excludeTags?: string[];\n  _schemaFormat?: SchemaFormat;\n}\n\nexport const isLogStreamHandler = (\n  handler: BaseCallbackHandler\n): handler is LogStreamCallbackHandler => handler.name === \"log_stream_tracer\";\n\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run: Run, schemaFormat: SchemaFormat) {\n  if (schemaFormat === \"original\") {\n    throw new Error(\n      \"Do not assign inputs with original schema drop the key for now. \" +\n        \"When inputs are added to streamLog they should be added with \" +\n        \"standardized schema for streaming events.\"\n    );\n  }\n\n  const { inputs } = run;\n\n  if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n    return inputs;\n  }\n\n  if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n    return undefined;\n  }\n\n  // new style chains\n  // These nest an additional 'input' key inside the 'inputs' to make sure\n  // the input is always a dict. We need to unpack and user the inner value.\n  // We should try to fix this in Runnables and callbacks/tracers\n  // Runnables should be using a null type here not a placeholder\n  // dict.\n  return inputs.input;\n}\n\nasync function _getStandardizedOutputs(run: Run, schemaFormat: SchemaFormat) {\n  const { outputs } = run;\n  if (schemaFormat === \"original\") {\n    // Return the old schema, without standardizing anything\n    return outputs;\n  }\n\n  if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n    return outputs;\n  }\n\n  // TODO: Remove this hacky check\n  if (\n    outputs !== undefined &&\n    Object.keys(outputs).length === 1 &&\n    outputs?.output !== undefined\n  ) {\n    return outputs.output;\n  }\n\n  return outputs;\n}\n\nfunction isChatGenerationChunk(\n  x?: ChatGenerationChunk | GenerationChunk\n): x is ChatGenerationChunk {\n  return x !== undefined && (x as ChatGenerationChunk).message !== undefined;\n}\n\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler\n  extends BaseTracer\n  implements CallbackHandlerPrefersStreaming\n{\n  protected autoClose = true;\n\n  protected includeNames?: string[];\n\n  protected includeTypes?: string[];\n\n  protected includeTags?: string[];\n\n  protected excludeNames?: string[];\n\n  protected excludeTypes?: string[];\n\n  protected excludeTags?: string[];\n\n  protected _schemaFormat: SchemaFormat = \"original\";\n\n  protected rootId?: string;\n\n  private keyMapByRunId: Record<string, string> = {};\n\n  private counterMapByRunName: Record<string, number> = {};\n\n  protected transformStream: TransformStream;\n\n  public writer: WritableStreamDefaultWriter;\n\n  public receiveStream: IterableReadableStream<RunLogPatch>;\n\n  name = \"log_stream_tracer\";\n\n  lc_prefer_streaming = true;\n\n  constructor(fields?: LogStreamCallbackHandlerInput) {\n    super({ _awaitHandler: true, ...fields });\n    this.autoClose = fields?.autoClose ?? true;\n    this.includeNames = fields?.includeNames;\n    this.includeTypes = fields?.includeTypes;\n    this.includeTags = fields?.includeTags;\n    this.excludeNames = fields?.excludeNames;\n    this.excludeTypes = fields?.excludeTypes;\n    this.excludeTags = fields?.excludeTags;\n    this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n    this.transformStream = new TransformStream();\n    this.writer = this.transformStream.writable.getWriter();\n    this.receiveStream = IterableReadableStream.fromReadableStream(\n      this.transformStream.readable\n    );\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.receiveStream;\n  }\n\n  protected async persistRun(_run: Run): Promise<void> {\n    // This is a legacy method only called once for an entire run tree\n    // and is therefore not useful here\n  }\n\n  _includeRun(run: Run): boolean {\n    if (run.id === this.rootId) {\n      return false;\n    }\n    const runTags = run.tags ?? [];\n    let include =\n      this.includeNames === undefined &&\n      this.includeTags === undefined &&\n      this.includeTypes === undefined;\n    if (this.includeNames !== undefined) {\n      include = include || this.includeNames.includes(run.name);\n    }\n    if (this.includeTypes !== undefined) {\n      include = include || this.includeTypes.includes(run.run_type);\n    }\n    if (this.includeTags !== undefined) {\n      include =\n        include ||\n        runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n    }\n    if (this.excludeNames !== undefined) {\n      include = include && !this.excludeNames.includes(run.name);\n    }\n    if (this.excludeTypes !== undefined) {\n      include = include && !this.excludeTypes.includes(run.run_type);\n    }\n    if (this.excludeTags !== undefined) {\n      include =\n        include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n    }\n    return include;\n  }\n\n  async *tapOutputIterable<T>(\n    runId: string,\n    output: AsyncGenerator<T>\n  ): AsyncGenerator<T> {\n    // Tap an output async iterator to stream its values to the log.\n    for await (const chunk of output) {\n      // root run is handled in .streamLog()\n      if (runId !== this.rootId) {\n        // if we can't find the run silently ignore\n        // eg. because this run wasn't included in the log\n        const key = this.keyMapByRunId[runId];\n        if (key) {\n          await this.writer.write(\n            new RunLogPatch({\n              ops: [\n                {\n                  op: \"add\",\n                  path: `/logs/${key}/streamed_output/-`,\n                  value: chunk,\n                },\n              ],\n            })\n          );\n        }\n      }\n      yield chunk;\n    }\n  }\n\n  async onRunCreate(run: Run): Promise<void> {\n    if (this.rootId === undefined) {\n      this.rootId = run.id;\n      await this.writer.write(\n        new RunLogPatch({\n          ops: [\n            {\n              op: \"replace\",\n              path: \"\",\n              value: {\n                id: run.id,\n                name: run.name,\n                type: run.run_type,\n                streamed_output: [],\n                final_output: undefined,\n                logs: {},\n              },\n            },\n          ],\n        })\n      );\n    }\n\n    if (!this._includeRun(run)) {\n      return;\n    }\n\n    if (this.counterMapByRunName[run.name] === undefined) {\n      this.counterMapByRunName[run.name] = 0;\n    }\n    this.counterMapByRunName[run.name] += 1;\n    const count = this.counterMapByRunName[run.name];\n    this.keyMapByRunId[run.id] =\n      count === 1 ? run.name : `${run.name}:${count}`;\n\n    const logEntry: LogEntry = {\n      id: run.id,\n      name: run.name,\n      type: run.run_type,\n      tags: run.tags ?? [],\n      metadata: run.extra?.metadata ?? {},\n      start_time: new Date(run.start_time).toISOString(),\n      streamed_output: [],\n      streamed_output_str: [],\n      final_output: undefined,\n      end_time: undefined,\n    };\n\n    if (this._schemaFormat === \"streaming_events\") {\n      logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n    }\n\n    await this.writer.write(\n      new RunLogPatch({\n        ops: [\n          {\n            op: \"add\",\n            path: `/logs/${this.keyMapByRunId[run.id]}`,\n            value: logEntry,\n          },\n        ],\n      })\n    );\n  }\n\n  async onRunUpdate(run: Run): Promise<void> {\n    try {\n      const runName = this.keyMapByRunId[run.id];\n      if (runName === undefined) {\n        return;\n      }\n      const ops: JSONPatchOperation[] = [];\n      if (this._schemaFormat === \"streaming_events\") {\n        ops.push({\n          op: \"replace\",\n          path: `/logs/${runName}/inputs`,\n          value: await _getStandardizedInputs(run, this._schemaFormat),\n        });\n      }\n      ops.push({\n        op: \"add\",\n        path: `/logs/${runName}/final_output`,\n        value: await _getStandardizedOutputs(run, this._schemaFormat),\n      });\n      if (run.end_time !== undefined) {\n        ops.push({\n          op: \"add\",\n          path: `/logs/${runName}/end_time`,\n          value: new Date(run.end_time).toISOString(),\n        });\n      }\n      const patch = new RunLogPatch({ ops });\n      await this.writer.write(patch);\n    } finally {\n      if (run.id === this.rootId) {\n        const patch = new RunLogPatch({\n          ops: [\n            {\n              op: \"replace\",\n              path: \"/final_output\",\n              value: await _getStandardizedOutputs(run, this._schemaFormat),\n            },\n          ],\n        });\n        await this.writer.write(patch);\n        if (this.autoClose) {\n          await this.writer.close();\n        }\n      }\n    }\n  }\n\n  async onLLMNewToken(\n    run: Run,\n    token: string,\n    kwargs?: HandleLLMNewTokenCallbackFields\n  ): Promise<void> {\n    const runName = this.keyMapByRunId[run.id];\n    if (runName === undefined) {\n      return;\n    }\n    // TODO: Remove hack\n    const isChatModel = run.inputs.messages !== undefined;\n    let streamedOutputValue;\n    if (isChatModel) {\n      if (isChatGenerationChunk(kwargs?.chunk)) {\n        streamedOutputValue = kwargs?.chunk;\n      } else {\n        streamedOutputValue = new AIMessageChunk({\n          id: `run-${run.id}`,\n          content: token,\n        });\n      }\n    } else {\n      streamedOutputValue = token;\n    }\n    const patch = new RunLogPatch({\n      ops: [\n        {\n          op: \"add\",\n          path: `/logs/${runName}/streamed_output_str/-`,\n          value: token,\n        },\n        {\n          op: \"add\",\n          path: `/logs/${runName}/streamed_output/-`,\n          value: streamedOutputValue,\n        },\n      ],\n    });\n    await this.writer.write(patch);\n  }\n}\n"],"names":["fields: { ops?: JSONPatchOperation[] }","other: RunLogPatch","fields: { ops?: JSONPatchOperation[]; state: RunState }","patch: RunLogPatch","handler: BaseCallbackHandler","run: Run","schemaFormat: SchemaFormat","x?: ChatGenerationChunk | GenerationChunk","fields?: LogStreamCallbackHandlerInput","_run: Run","runId: string","output: AsyncGenerator<T>","logEntry: LogEntry","ops: JSONPatchOperation[]","token: string","kwargs?: HandleLLMNewTokenCallbackFields"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8EA,IAAa,cAAb,MAAyB;IACvB,IAAA;IAEA,YAAYA,MAAAA,CAAwC;QAClD,IAAA,CAAK,GAAA,GAAM,OAAO,GAAA,IAAO,CAAE,CAAA;IAC5B;IAED,OAAOC,KAAAA,EAAoB;QACzB,MAAM,MAAM,IAAA,CAAK,GAAA,CAAI,MAAA,CAAO,MAAM,GAAA,CAAI;QACtC,MAAM,aAAS,sTAAA,EAAW,CAAE,GAAE,IAAI;QAElC,OAAO,IAAI,OAAO;YAChB;YACA,OAAO,MAAA,CAAO,OAAO,MAAA,GAAS,EAAA,CAAG,WAAA;QAClC;IACF;AACF;AAED,IAAa,SAAb,MAAa,eAAe,YAAY;IACtC,MAAA;IAEA,YAAYC,MAAAA,CAAyD;QACnE,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,KAAA,GAAQ,OAAO,KAAA;IACrB;IAED,OAAOD,KAAAA,EAAoB;QACzB,MAAM,MAAM,IAAA,CAAK,GAAA,CAAI,MAAA,CAAO,MAAM,GAAA,CAAI;QACtC,MAAM,aAAS,sTAAA,EAAW,IAAA,CAAK,KAAA,EAAO,MAAM,GAAA,CAAI;QAChD,OAAO,IAAI,OAAO;YAAE;YAAK,OAAO,MAAA,CAAO,OAAO,MAAA,GAAS,EAAA,CAAG,WAAA;QAAa;IACxE;IAED,OAAO,gBAAgBE,KAAAA,EAAoB;QACzC,MAAM,aAAS,sTAAA,EAAW,CAAE,GAAE,MAAM,GAAA,CAAI;QACxC,OAAO,IAAI,OAAO;YAChB,KAAK,MAAM,GAAA;YACX,OAAO,MAAA,CAAO,OAAO,MAAA,GAAS,EAAA,CAAG,WAAA;QAClC;IACF;AACF;AAgBD,MAAa,qBAAqB,CAChCC,UACwC,QAAQ,IAAA,KAAS;;;;;;;;;;;;GAc3D,eAAe,uBAAuBC,GAAAA,EAAUC,YAAAA,EAA4B;IAC1E,IAAI,iBAAiB,WACnB,CAAA,MAAM,IAAI,MACR;IAMJ,MAAM,EAAE,MAAA,EAAQ,GAAG;IAEnB,IAAI;QAAC;QAAa;QAAO;KAAS,CAAC,QAAA,CAAS,IAAI,QAAA,CAAS,CACvD,CAAA,OAAO;IAGT,IAAI,OAAO,IAAA,CAAK,OAAO,CAAC,MAAA,KAAW,KAAK,QAAQ,UAAU,GACxD,CAAA,OAAO,KAAA;IAST,OAAO,OAAO,KAAA;AACf;AAED,eAAe,wBAAwBD,GAAAA,EAAUC,YAAAA,EAA4B;IAC3E,MAAM,EAAE,OAAA,EAAS,GAAG;IACpB,IAAI,iBAAiB,WAEnB,CAAA,OAAO;IAGT,IAAI;QAAC;QAAa;QAAO;KAAS,CAAC,QAAA,CAAS,IAAI,QAAA,CAAS,CACvD,CAAA,OAAO;IAIT,IACE,YAAY,KAAA,KACZ,OAAO,IAAA,CAAK,QAAQ,CAAC,MAAA,KAAW,KAChC,SAAS,WAAW,KAAA,EAEpB,CAAA,OAAO,QAAQ,MAAA;IAGjB,OAAO;AACR;AAED,SAAS,sBACPC,CAAAA,EAC0B;IAC1B,OAAO,MAAM,KAAA,KAAc,EAA0B,OAAA,KAAY,KAAA;AAClE;;;;;;GAQD,IAAa,2BAAb,cACU,wRAAA,CAEV;IACY,YAAY,KAAA;IAEZ,aAAA;IAEA,aAAA;IAEA,YAAA;IAEA,aAAA;IAEA,aAAA;IAEA,YAAA;IAEA,gBAA8B,WAAA;IAE9B,OAAA;IAEF,gBAAwC,CAAE,EAAA;IAE1C,sBAA8C,CAAE,EAAA;IAE9C,gBAAA;IAEH,OAAA;IAEA,cAAA;IAEP,OAAO,oBAAA;IAEP,sBAAsB,KAAA;IAEtB,YAAYC,MAAAA,CAAwC;QAClD,KAAA,CAAM;YAAE,eAAe;YAAM,GAAG,MAAA;QAAQ,EAAC;QACzC,IAAA,CAAK,SAAA,GAAY,QAAQ,aAAa;QACtC,IAAA,CAAK,YAAA,GAAe,QAAQ;QAC5B,IAAA,CAAK,YAAA,GAAe,QAAQ;QAC5B,IAAA,CAAK,WAAA,GAAc,QAAQ;QAC3B,IAAA,CAAK,YAAA,GAAe,QAAQ;QAC5B,IAAA,CAAK,YAAA,GAAe,QAAQ;QAC5B,IAAA,CAAK,WAAA,GAAc,QAAQ;QAC3B,IAAA,CAAK,aAAA,GAAgB,QAAQ,iBAAiB,IAAA,CAAK,aAAA;QACnD,IAAA,CAAK,eAAA,GAAkB,IAAI;QAC3B,IAAA,CAAK,MAAA,GAAS,IAAA,CAAK,eAAA,CAAgB,QAAA,CAAS,SAAA,EAAW;QACvD,IAAA,CAAK,aAAA,GAAgB,oSAAA,CAAuB,kBAAA,CAC1C,IAAA,CAAK,eAAA,CAAgB,QAAA,CACtB;IACF;IAED,CAAC,OAAO,aAAA,CAAA,GAAiB;QACvB,OAAO,IAAA,CAAK,aAAA;IACb;IAED,MAAgB,WAAWC,IAAAA,EAA0B,CAGpD;IAED,YAAYJ,GAAAA,EAAmB;QAC7B,IAAI,IAAI,EAAA,KAAO,IAAA,CAAK,MAAA,CAClB,CAAA,OAAO;QAET,MAAM,UAAU,IAAI,IAAA,IAAQ,CAAE,CAAA;QAC9B,IAAI,UACF,IAAA,CAAK,YAAA,KAAiB,KAAA,KACtB,IAAA,CAAK,WAAA,KAAgB,KAAA,KACrB,IAAA,CAAK,YAAA,KAAiB,KAAA;QACxB,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,IAAI,IAAA,CAAK;QAE3D,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,IAAI,QAAA,CAAS;QAE/D,IAAI,IAAA,CAAK,WAAA,KAAgB,KAAA,GACvB,UACE,WACA,QAAQ,IAAA,CAAK,CAAC,MAAQ,IAAA,CAAK,WAAA,EAAa,SAAS,IAAI,CAAC,KAAK,KAAA;QAE/D,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,CAAC,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,IAAI,IAAA,CAAK;QAE5D,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,CAAC,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,IAAI,QAAA,CAAS;QAEhE,IAAI,IAAA,CAAK,WAAA,KAAgB,KAAA,GACvB,UACE,WAAW,QAAQ,KAAA,CAAM,CAAC,MAAQ,CAAC,IAAA,CAAK,WAAA,EAAa,SAAS,IAAI,CAAC;QAEvE,OAAO;IACR;IAED,OAAO,kBACLK,KAAAA,EACAC,MAAAA,EACmB;QAEnB,WAAW,MAAM,SAAS,OAAQ;YAEhC,IAAI,UAAU,IAAA,CAAK,MAAA,EAAQ;gBAGzB,MAAM,MAAM,IAAA,CAAK,aAAA,CAAc,MAAA;gBAC/B,IAAI,KACF,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAChB,IAAI,YAAY;oBACd,KAAK;wBACH;4BACE,IAAI;4BACJ,MAAM,CAAC,MAAM,EAAE,IAAI,kBAAkB,CAAC;4BACtC,OAAO;wBACR,CACF;qBAAA;gBACF,GACF;YAEJ;YACD,MAAM;QACP;IACF;IAED,MAAM,YAAYN,GAAAA,EAAyB;QACzC,IAAI,IAAA,CAAK,MAAA,KAAW,KAAA,GAAW;YAC7B,IAAA,CAAK,MAAA,GAAS,IAAI,EAAA;YAClB,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAChB,IAAI,YAAY;gBACd,KAAK;oBACH;wBACE,IAAI;wBACJ,MAAM;wBACN,OAAO;4BACL,IAAI,IAAI,EAAA;4BACR,MAAM,IAAI,IAAA;4BACV,MAAM,IAAI,QAAA;4BACV,iBAAiB,CAAE,CAAA;4BACnB,cAAc,KAAA;4BACd,MAAM,CAAE;wBACT;oBACF,CACF;iBAAA;YACF,GACF;QACF;QAED,IAAI,CAAC,IAAA,CAAK,WAAA,CAAY,IAAI,CACxB,CAAA;QAGF,IAAI,IAAA,CAAK,mBAAA,CAAoB,IAAI,IAAA,CAAA,KAAU,KAAA,GACzC,IAAA,CAAK,mBAAA,CAAoB,IAAI,IAAA,CAAA,GAAQ;QAEvC,IAAA,CAAK,mBAAA,CAAoB,IAAI,IAAA,CAAA,IAAS;QACtC,MAAM,QAAQ,IAAA,CAAK,mBAAA,CAAoB,IAAI,IAAA,CAAA;QAC3C,IAAA,CAAK,aAAA,CAAc,IAAI,EAAA,CAAA,GACrB,UAAU,IAAI,IAAI,IAAA,GAAO,GAAG,IAAI,IAAA,CAAK,CAAC,EAAE,OAAO;QAEjD,MAAMO,WAAqB;YACzB,IAAI,IAAI,EAAA;YACR,MAAM,IAAI,IAAA;YACV,MAAM,IAAI,QAAA;YACV,MAAM,IAAI,IAAA,IAAQ,CAAE,CAAA;YACpB,UAAU,IAAI,KAAA,EAAO,YAAY,CAAE;YACnC,YAAY,IAAI,KAAK,IAAI,UAAA,EAAY,WAAA,EAAa;YAClD,iBAAiB,CAAE,CAAA;YACnB,qBAAqB,CAAE,CAAA;YACvB,cAAc,KAAA;YACd,UAAU,KAAA;QACX;QAED,IAAI,IAAA,CAAK,aAAA,KAAkB,oBACzB,SAAS,MAAA,GAAS,MAAM,uBAAuB,KAAK,IAAA,CAAK,aAAA,CAAc;QAGzE,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAChB,IAAI,YAAY;YACd,KAAK;gBACH;oBACE,IAAI;oBACJ,MAAM,CAAC,MAAM,EAAE,IAAA,CAAK,aAAA,CAAc,IAAI,EAAA,CAAA,EAAK;oBAC3C,OAAO;gBACR,CACF;aAAA;QACF,GACF;IACF;IAED,MAAM,YAAYP,GAAAA,EAAyB;QACzC,IAAI;YACF,MAAM,UAAU,IAAA,CAAK,aAAA,CAAc,IAAI,EAAA,CAAA;YACvC,IAAI,YAAY,KAAA,EACd,CAAA;YAEF,MAAMQ,MAA4B,CAAE,CAAA;YACpC,IAAI,IAAA,CAAK,aAAA,KAAkB,oBACzB,IAAI,IAAA,CAAK;gBACP,IAAI;gBACJ,MAAM,CAAC,MAAM,EAAE,QAAQ,OAAO,CAAC;gBAC/B,OAAO,MAAM,uBAAuB,KAAK,IAAA,CAAK,aAAA,CAAc;YAC7D,EAAC;YAEJ,IAAI,IAAA,CAAK;gBACP,IAAI;gBACJ,MAAM,CAAC,MAAM,EAAE,QAAQ,aAAa,CAAC;gBACrC,OAAO,MAAM,wBAAwB,KAAK,IAAA,CAAK,aAAA,CAAc;YAC9D,EAAC;YACF,IAAI,IAAI,QAAA,KAAa,KAAA,GACnB,IAAI,IAAA,CAAK;gBACP,IAAI;gBACJ,MAAM,CAAC,MAAM,EAAE,QAAQ,SAAS,CAAC;gBACjC,OAAO,IAAI,KAAK,IAAI,QAAA,EAAU,WAAA,EAAa;YAC5C,EAAC;YAEJ,MAAM,QAAQ,IAAI,YAAY;gBAAE;YAAK;YACrC,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,MAAM;QAC/B,SAAS;YACR,IAAI,IAAI,EAAA,KAAO,IAAA,CAAK,MAAA,EAAQ;gBAC1B,MAAM,QAAQ,IAAI,YAAY;oBAC5B,KAAK;wBACH;4BACE,IAAI;4BACJ,MAAM;4BACN,OAAO,MAAM,wBAAwB,KAAK,IAAA,CAAK,aAAA,CAAc;wBAC9D,CACF;qBAAA;gBACF;gBACD,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,MAAM;gBAC9B,IAAI,IAAA,CAAK,SAAA,EACP,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO;YAE5B;QACF;IACF;IAED,MAAM,cACJR,GAAAA,EACAS,KAAAA,EACAC,MAAAA,EACe;QACf,MAAM,UAAU,IAAA,CAAK,aAAA,CAAc,IAAI,EAAA,CAAA;QACvC,IAAI,YAAY,KAAA,EACd,CAAA;QAGF,MAAM,cAAc,IAAI,MAAA,CAAO,QAAA,KAAa,KAAA;QAC5C,IAAI;QACJ,IAAI,YACF,CAAA,IAAI,sBAAsB,QAAQ,MAAM,EACtC,sBAAsB,QAAQ;aAE9B,sBAAsB,IAAI,2RAAA,CAAe;YACvC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAA,EAAI;YACnB,SAAS;QACV;aAGH,sBAAsB;QAExB,MAAM,QAAQ,IAAI,YAAY;YAC5B,KAAK;gBACH;oBACE,IAAI;oBACJ,MAAM,CAAC,MAAM,EAAE,QAAQ,sBAAsB,CAAC;oBAC9C,OAAO;gBACR;gBACD;oBACE,IAAI;oBACJ,MAAM,CAAC,MAAM,EAAE,QAAQ,kBAAkB,CAAC;oBAC1C,OAAO;gBACR,CACF;aAAA;QACF;QACD,MAAM,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,MAAM;IAC/B;AACF","debugId":null}},
    {"offset": {"line": 6609, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/outputs.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/outputs.ts"],"sourcesContent":["import { type BaseMessage, type BaseMessageChunk } from \"./messages/base.js\";\n\nexport const RUN_KEY = \"__run\";\n\n/**\n * Output of a single generation.\n */\nexport interface Generation {\n  /**\n   * Generated text output\n   */\n  text: string;\n  /**\n   * Raw generation info response from the provider.\n   * May include things like reason for finishing (e.g. in {@link OpenAI})\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  generationInfo?: Record<string, any>;\n}\n\nexport type GenerationChunkFields = {\n  text: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  generationInfo?: Record<string, any>;\n};\n\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk implements Generation {\n  public text: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public generationInfo?: Record<string, any>;\n\n  constructor(fields: GenerationChunkFields) {\n    this.text = fields.text;\n    this.generationInfo = fields.generationInfo;\n  }\n\n  concat(chunk: GenerationChunk): GenerationChunk {\n    return new GenerationChunk({\n      text: this.text + chunk.text,\n      generationInfo: {\n        ...this.generationInfo,\n        ...chunk.generationInfo,\n      },\n    });\n  }\n}\n\n/**\n * Contains all relevant information returned by an LLM.\n */\nexport type LLMResult = {\n  /**\n   * List of the things generated. Each input could have multiple {@link Generation | generations}, hence this is a list of lists.\n   */\n  generations: Generation[][];\n  /**\n   * Dictionary of arbitrary LLM-provider specific output.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  llmOutput?: Record<string, any>;\n  /**\n   * Dictionary of run metadata\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [RUN_KEY]?: Record<string, any>;\n};\n\nexport interface ChatGeneration extends Generation {\n  message: BaseMessage;\n}\n\nexport type ChatGenerationChunkFields = GenerationChunkFields & {\n  message: BaseMessageChunk;\n};\n\nexport class ChatGenerationChunk\n  extends GenerationChunk\n  implements ChatGeneration\n{\n  public message: BaseMessageChunk;\n\n  constructor(fields: ChatGenerationChunkFields) {\n    super(fields);\n    this.message = fields.message;\n  }\n\n  concat(chunk: ChatGenerationChunk) {\n    return new ChatGenerationChunk({\n      text: this.text + chunk.text,\n      generationInfo: {\n        ...this.generationInfo,\n        ...chunk.generationInfo,\n      },\n      message: this.message.concat(chunk.message),\n    });\n  }\n}\n\nexport interface ChatResult {\n  generations: ChatGeneration[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  llmOutput?: Record<string, any>;\n}\n"],"names":["fields: GenerationChunkFields","chunk: GenerationChunk","fields: ChatGenerationChunkFields","chunk: ChatGenerationChunk"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA,MAAa,UAAU;;;GA2BvB,IAAa,kBAAb,MAAa,gBAAsC;IAC1C,KAAA;IAGA,eAAA;IAEP,YAAYA,MAAAA,CAA+B;QACzC,IAAA,CAAK,IAAA,GAAO,OAAO,IAAA;QACnB,IAAA,CAAK,cAAA,GAAiB,OAAO,cAAA;IAC9B;IAED,OAAOC,KAAAA,EAAyC;QAC9C,OAAO,IAAI,gBAAgB;YACzB,MAAM,IAAA,CAAK,IAAA,GAAO,MAAM,IAAA;YACxB,gBAAgB;gBACd,GAAG,IAAA,CAAK,cAAA;gBACR,GAAG,MAAM,cAAA;YACV;QACF;IACF;AACF;AA8BD,IAAa,sBAAb,MAAa,4BACH,gBAEV;IACS,QAAA;IAEP,YAAYC,MAAAA,CAAmC;QAC7C,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,OAAA,GAAU,OAAO,OAAA;IACvB;IAED,OAAOC,KAAAA,EAA4B;QACjC,OAAO,IAAI,oBAAoB;YAC7B,MAAM,IAAA,CAAK,IAAA,GAAO,MAAM,IAAA;YACxB,gBAAgB;gBACd,GAAG,IAAA,CAAK,cAAA;gBACR,GAAG,MAAM,cAAA;YACV;YACD,SAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,MAAM,OAAA,CAAQ;QAC5C;IACF;AACF","debugId":null}},
    {"offset": {"line": 6671, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/event_stream.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/event_stream.ts"],"sourcesContent":["import { BaseTracer, type Run } from \"./base.js\";\nimport {\n  BaseCallbackHandler,\n  BaseCallbackHandlerInput,\n  CallbackHandlerPrefersStreaming,\n} from \"../callbacks/base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { ChatGeneration, Generation, GenerationChunk } from \"../outputs.js\";\nimport { BaseMessage } from \"../messages/base.js\";\n\n/**\n * Data associated with a StreamEvent.\n */\nexport type StreamEventData = {\n  /**\n   * The input passed to the runnable that generated the event.\n   * Inputs will sometimes be available at the *START* of the runnable, and\n   * sometimes at the *END* of the runnable.\n   * If a runnable is able to stream its inputs, then its input by definition\n   * won't be known until the *END* of the runnable when it has finished streaming\n   * its inputs.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  input?: any;\n\n  /**\n   * The output of the runnable that generated the event.\n   * Outputs will only be available at the *END* of the runnable.\n   * For most runnables, this field can be inferred from the `chunk` field,\n   * though there might be some exceptions for special cased runnables (e.g., like\n   * chat models), which may return more information.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  output?: any;\n\n  /**\n   * A streaming chunk from the output that generated the event.\n   * chunks support addition in general, and adding them up should result\n   * in the output of the runnable that generated the event.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  chunk?: any;\n};\n\n/**\n * A streaming event.\n *\n * Schema of a streaming event which is produced from the streamEvents method.\n */\nexport type StreamEvent = {\n  /**\n   * Event names are of the format: on_[runnable_type]_(start|stream|end).\n   *\n   * Runnable types are one of:\n   * - llm - used by non chat models\n   * - chat_model - used by chat models\n   * - prompt --  e.g., ChatPromptTemplate\n   * - tool -- LangChain tools\n   * - chain - most Runnables are of this type\n   *\n   * Further, the events are categorized as one of:\n   * - start - when the runnable starts\n   * - stream - when the runnable is streaming\n   * - end - when the runnable ends\n   *\n   * start, stream and end are associated with slightly different `data` payload.\n   *\n   * Please see the documentation for `EventData` for more details.\n   */\n  event: string;\n  /** The name of the runnable that generated the event. */\n  name: string;\n  /**\n   * An randomly generated ID to keep track of the execution of the given runnable.\n   *\n   * Each child runnable that gets invoked as part of the execution of a parent runnable\n   * is assigned its own unique ID.\n   */\n  run_id: string;\n  /**\n   * Tags associated with the runnable that generated this event.\n   * Tags are always inherited from parent runnables.\n   */\n  tags?: string[];\n  /** Metadata associated with the runnable that generated this event. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  metadata: Record<string, any>;\n  /**\n   * Event data.\n   *\n   * The contents of the event data depend on the event type.\n   */\n  data: StreamEventData;\n};\n\ntype RunInfo = {\n  name: string;\n  tags: string[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  metadata: Record<string, any>;\n  runType: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inputs?: Record<string, any>;\n};\n\nexport interface EventStreamCallbackHandlerInput\n  extends BaseCallbackHandlerInput {\n  autoClose?: boolean;\n  includeNames?: string[];\n  includeTypes?: string[];\n  includeTags?: string[];\n  excludeNames?: string[];\n  excludeTypes?: string[];\n  excludeTags?: string[];\n}\n\nfunction assignName({\n  name,\n  serialized,\n}: {\n  name?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serialized?: Record<string, any>;\n}): string {\n  if (name !== undefined) {\n    return name;\n  }\n  if (serialized?.name !== undefined) {\n    return serialized.name;\n  } else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n    return serialized.id[serialized.id.length - 1];\n  }\n  return \"Unnamed\";\n}\n\nexport const isStreamEventsHandler = (\n  handler: BaseCallbackHandler\n): handler is EventStreamCallbackHandler =>\n  handler.name === \"event_stream_tracer\";\n\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler\n  extends BaseTracer\n  implements CallbackHandlerPrefersStreaming\n{\n  protected autoClose = true;\n\n  protected includeNames?: string[];\n\n  protected includeTypes?: string[];\n\n  protected includeTags?: string[];\n\n  protected excludeNames?: string[];\n\n  protected excludeTypes?: string[];\n\n  protected excludeTags?: string[];\n\n  private runInfoMap: Map<string, RunInfo> = new Map();\n\n  private tappedPromises: Map<string, Promise<void>> = new Map();\n\n  protected transformStream: TransformStream;\n\n  public writer: WritableStreamDefaultWriter;\n\n  public receiveStream: IterableReadableStream<StreamEvent>;\n\n  name = \"event_stream_tracer\";\n\n  lc_prefer_streaming = true;\n\n  constructor(fields?: EventStreamCallbackHandlerInput) {\n    super({ _awaitHandler: true, ...fields });\n    this.autoClose = fields?.autoClose ?? true;\n    this.includeNames = fields?.includeNames;\n    this.includeTypes = fields?.includeTypes;\n    this.includeTags = fields?.includeTags;\n    this.excludeNames = fields?.excludeNames;\n    this.excludeTypes = fields?.excludeTypes;\n    this.excludeTags = fields?.excludeTags;\n    this.transformStream = new TransformStream();\n    this.writer = this.transformStream.writable.getWriter();\n    this.receiveStream = IterableReadableStream.fromReadableStream(\n      this.transformStream.readable\n    );\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.receiveStream;\n  }\n\n  protected async persistRun(_run: Run): Promise<void> {\n    // This is a legacy method only called once for an entire run tree\n    // and is therefore not useful here\n  }\n\n  _includeRun(run: RunInfo): boolean {\n    const runTags = run.tags ?? [];\n    let include =\n      this.includeNames === undefined &&\n      this.includeTags === undefined &&\n      this.includeTypes === undefined;\n    if (this.includeNames !== undefined) {\n      include = include || this.includeNames.includes(run.name);\n    }\n    if (this.includeTypes !== undefined) {\n      include = include || this.includeTypes.includes(run.runType);\n    }\n    if (this.includeTags !== undefined) {\n      include =\n        include ||\n        runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n    }\n    if (this.excludeNames !== undefined) {\n      include = include && !this.excludeNames.includes(run.name);\n    }\n    if (this.excludeTypes !== undefined) {\n      include = include && !this.excludeTypes.includes(run.runType);\n    }\n    if (this.excludeTags !== undefined) {\n      include =\n        include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n    }\n    return include;\n  }\n\n  async *tapOutputIterable<T>(\n    runId: string,\n    outputStream: AsyncGenerator<T>\n  ): AsyncGenerator<T> {\n    const firstChunk = await outputStream.next();\n    if (firstChunk.done) {\n      return;\n    }\n    const runInfo = this.runInfoMap.get(runId);\n    // Run has finished, don't issue any stream events.\n    // An example of this is for runnables that use the default\n    // implementation of .stream(), which delegates to .invoke()\n    // and calls .onChainEnd() before passing it to the iterator.\n    if (runInfo === undefined) {\n      yield firstChunk.value;\n      return;\n    }\n    // Match format from handlers below\n    function _formatOutputChunk(eventType: string, data: unknown) {\n      if (eventType === \"llm\" && typeof data === \"string\") {\n        return new GenerationChunk({ text: data });\n      }\n      return data;\n    }\n    let tappedPromise = this.tappedPromises.get(runId);\n    // if we are the first to tap, issue stream events\n    if (tappedPromise === undefined) {\n      let tappedPromiseResolver: (() => void) | undefined;\n      tappedPromise = new Promise((resolve) => {\n        tappedPromiseResolver = resolve;\n      });\n      this.tappedPromises.set(runId, tappedPromise);\n      try {\n        const event: StreamEvent = {\n          event: `on_${runInfo.runType}_stream`,\n          run_id: runId,\n          name: runInfo.name,\n          tags: runInfo.tags,\n          metadata: runInfo.metadata,\n          data: {},\n        };\n        await this.send(\n          {\n            ...event,\n            data: {\n              chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n            },\n          },\n          runInfo\n        );\n        yield firstChunk.value;\n        for await (const chunk of outputStream) {\n          // Don't yield tool and retriever stream events\n          if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n            await this.send(\n              {\n                ...event,\n                data: {\n                  chunk: _formatOutputChunk(runInfo.runType, chunk),\n                },\n              },\n              runInfo\n            );\n          }\n          yield chunk;\n        }\n      } finally {\n        tappedPromiseResolver?.();\n        // Don't delete from the promises map to keep track of which runs have been tapped.\n      }\n    } else {\n      // otherwise just pass through\n      yield firstChunk.value;\n      for await (const chunk of outputStream) {\n        yield chunk;\n      }\n    }\n  }\n\n  async send(payload: StreamEvent, run: RunInfo) {\n    if (this._includeRun(run)) {\n      await this.writer.write(payload);\n    }\n  }\n\n  async sendEndEvent(payload: StreamEvent, run: RunInfo) {\n    const tappedPromise = this.tappedPromises.get(payload.run_id);\n    if (tappedPromise !== undefined) {\n      // eslint-disable-next-line no-void\n      void tappedPromise.then(() => {\n        // eslint-disable-next-line no-void\n        void this.send(payload, run);\n      });\n    } else {\n      await this.send(payload, run);\n    }\n  }\n\n  async onLLMStart(run: Run): Promise<void> {\n    const runName = assignName(run);\n    const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n    const runInfo = {\n      tags: run.tags ?? [],\n      metadata: run.extra?.metadata ?? {},\n      name: runName,\n      runType,\n      inputs: run.inputs,\n    };\n    this.runInfoMap.set(run.id, runInfo);\n    const eventName = `on_${runType}_start`;\n    await this.send(\n      {\n        event: eventName,\n        data: {\n          input: run.inputs,\n        },\n        name: runName,\n        tags: run.tags ?? [],\n        run_id: run.id,\n        metadata: run.extra?.metadata ?? {},\n      },\n      runInfo\n    );\n  }\n\n  async onLLMNewToken(\n    run: Run,\n    token: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs?: { chunk: any }\n  ): Promise<void> {\n    const runInfo = this.runInfoMap.get(run.id);\n    let chunk;\n    let eventName;\n    if (runInfo === undefined) {\n      throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n    }\n    // Top-level streaming events are covered by tapOutputIterable\n    if (this.runInfoMap.size === 1) {\n      return;\n    }\n    if (runInfo.runType === \"chat_model\") {\n      eventName = \"on_chat_model_stream\";\n      if (kwargs?.chunk === undefined) {\n        chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n      } else {\n        chunk = kwargs.chunk.message;\n      }\n    } else if (runInfo.runType === \"llm\") {\n      eventName = \"on_llm_stream\";\n      if (kwargs?.chunk === undefined) {\n        chunk = new GenerationChunk({ text: token });\n      } else {\n        chunk = kwargs.chunk;\n      }\n    } else {\n      throw new Error(`Unexpected run type ${runInfo.runType}`);\n    }\n    await this.send(\n      {\n        event: eventName,\n        data: {\n          chunk,\n        },\n        run_id: run.id,\n        name: runInfo.name,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata,\n      },\n      runInfo\n    );\n  }\n\n  async onLLMEnd(run: Run): Promise<void> {\n    const runInfo = this.runInfoMap.get(run.id);\n    this.runInfoMap.delete(run.id);\n    let eventName: string;\n    if (runInfo === undefined) {\n      throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n    }\n    const generations: ChatGeneration[][] | Generation[][] | undefined =\n      run.outputs?.generations;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let output: BaseMessage | Record<string, any> | undefined;\n    if (runInfo.runType === \"chat_model\") {\n      for (const generation of generations ?? []) {\n        if (output !== undefined) {\n          break;\n        }\n        output = (generation[0] as ChatGeneration | undefined)?.message;\n      }\n      eventName = \"on_chat_model_end\";\n    } else if (runInfo.runType === \"llm\") {\n      output = {\n        generations: generations?.map((generation) => {\n          return generation.map((chunk) => {\n            return {\n              text: chunk.text,\n              generationInfo: chunk.generationInfo,\n            };\n          });\n        }),\n        llmOutput: run.outputs?.llmOutput ?? {},\n      };\n      eventName = \"on_llm_end\";\n    } else {\n      throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n    }\n    await this.sendEndEvent(\n      {\n        event: eventName,\n        data: {\n          output,\n          input: runInfo.inputs,\n        },\n        run_id: run.id,\n        name: runInfo.name,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata,\n      },\n      runInfo\n    );\n  }\n\n  async onChainStart(run: Run): Promise<void> {\n    const runName = assignName(run);\n    const runType = run.run_type ?? \"chain\";\n    const runInfo: RunInfo = {\n      tags: run.tags ?? [],\n      metadata: run.extra?.metadata ?? {},\n      name: runName,\n      runType: run.run_type,\n    };\n    let eventData: StreamEventData = {};\n    // Workaround Runnable core code not sending input when transform streaming.\n    if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n      eventData = {};\n      runInfo.inputs = {};\n    } else if (run.inputs.input !== undefined) {\n      eventData.input = run.inputs.input;\n      runInfo.inputs = run.inputs.input;\n    } else {\n      eventData.input = run.inputs;\n      runInfo.inputs = run.inputs;\n    }\n    this.runInfoMap.set(run.id, runInfo);\n    await this.send(\n      {\n        event: `on_${runType}_start`,\n        data: eventData,\n        name: runName,\n        tags: run.tags ?? [],\n        run_id: run.id,\n        metadata: run.extra?.metadata ?? {},\n      },\n      runInfo\n    );\n  }\n\n  async onChainEnd(run: Run): Promise<void> {\n    const runInfo = this.runInfoMap.get(run.id);\n    this.runInfoMap.delete(run.id);\n    if (runInfo === undefined) {\n      throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n    }\n    const eventName = `on_${run.run_type}_end`;\n    const inputs = run.inputs ?? runInfo.inputs ?? {};\n    const outputs = run.outputs?.output ?? run.outputs;\n    const data: StreamEventData = {\n      output: outputs,\n      input: inputs,\n    };\n    if (inputs.input && Object.keys(inputs).length === 1) {\n      data.input = inputs.input;\n      runInfo.inputs = inputs.input;\n    }\n    await this.sendEndEvent(\n      {\n        event: eventName,\n        data,\n        run_id: run.id,\n        name: runInfo.name,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata ?? {},\n      },\n      runInfo\n    );\n  }\n\n  async onToolStart(run: Run): Promise<void> {\n    const runName = assignName(run);\n    const runInfo = {\n      tags: run.tags ?? [],\n      metadata: run.extra?.metadata ?? {},\n      name: runName,\n      runType: \"tool\",\n      inputs: run.inputs ?? {},\n    };\n    this.runInfoMap.set(run.id, runInfo);\n    await this.send(\n      {\n        event: \"on_tool_start\",\n        data: {\n          input: run.inputs ?? {},\n        },\n        name: runName,\n        run_id: run.id,\n        tags: run.tags ?? [],\n        metadata: run.extra?.metadata ?? {},\n      },\n      runInfo\n    );\n  }\n\n  async onToolEnd(run: Run): Promise<void> {\n    const runInfo = this.runInfoMap.get(run.id);\n    this.runInfoMap.delete(run.id);\n    if (runInfo === undefined) {\n      throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n    }\n    if (runInfo.inputs === undefined) {\n      throw new Error(\n        `onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`\n      );\n    }\n    const output =\n      run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n    await this.sendEndEvent(\n      {\n        event: \"on_tool_end\",\n        data: {\n          output,\n          input: runInfo.inputs,\n        },\n        run_id: run.id,\n        name: runInfo.name,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata,\n      },\n      runInfo\n    );\n  }\n\n  async onRetrieverStart(run: Run): Promise<void> {\n    const runName = assignName(run);\n    const runType = \"retriever\";\n    const runInfo = {\n      tags: run.tags ?? [],\n      metadata: run.extra?.metadata ?? {},\n      name: runName,\n      runType,\n      inputs: {\n        query: run.inputs.query,\n      },\n    };\n    this.runInfoMap.set(run.id, runInfo);\n    await this.send(\n      {\n        event: \"on_retriever_start\",\n        data: {\n          input: {\n            query: run.inputs.query,\n          },\n        },\n        name: runName,\n        tags: run.tags ?? [],\n        run_id: run.id,\n        metadata: run.extra?.metadata ?? {},\n      },\n      runInfo\n    );\n  }\n\n  async onRetrieverEnd(run: Run): Promise<void> {\n    const runInfo = this.runInfoMap.get(run.id);\n    this.runInfoMap.delete(run.id);\n    if (runInfo === undefined) {\n      throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n    }\n    await this.sendEndEvent(\n      {\n        event: \"on_retriever_end\",\n        data: {\n          output: run.outputs?.documents ?? run.outputs,\n          input: runInfo.inputs,\n        },\n        run_id: run.id,\n        name: runInfo.name,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata,\n      },\n      runInfo\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async handleCustomEvent(eventName: string, data: any, runId: string) {\n    const runInfo = this.runInfoMap.get(runId);\n    if (runInfo === undefined) {\n      throw new Error(\n        `handleCustomEvent: Run ID ${runId} not found in run map.`\n      );\n    }\n    await this.send(\n      {\n        event: \"on_custom_event\",\n        run_id: runId,\n        name: eventName,\n        tags: runInfo.tags,\n        metadata: runInfo.metadata,\n        data,\n      },\n      runInfo\n    );\n  }\n\n  async finish() {\n    const pendingPromises = [...this.tappedPromises.values()];\n    // eslint-disable-next-line no-void\n    void Promise.all(pendingPromises).finally(() => {\n      // eslint-disable-next-line no-void\n      void this.writer.close();\n    });\n  }\n}\n"],"names":["handler: BaseCallbackHandler","fields?: EventStreamCallbackHandlerInput","_run: Run","run: RunInfo","runId: string","outputStream: AsyncGenerator<T>","eventType: string","data: unknown","tappedPromiseResolver: (() => void) | undefined","event: StreamEvent","payload: StreamEvent","run: Run","token: string","kwargs?: { chunk: any }","eventName: string","generations: ChatGeneration[][] | Generation[][] | undefined","output: BaseMessage | Record<string, any> | undefined","runInfo: RunInfo","eventData: StreamEventData","data: StreamEventData","data: any"],"mappings":"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","debugId":null}},
    {"offset": {"line": 7063, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/async_caller.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/async_caller.ts"],"sourcesContent":["import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\n\nimport { getAbortSignalError } from \"./signal.js\";\n\nconst STATUS_NO_RETRY = [\n  400, // Bad Request\n  401, // Unauthorized\n  402, // Payment Required\n  403, // Forbidden\n  404, // Not Found\n  405, // Method Not Allowed\n  406, // Not Acceptable\n  407, // Proxy Authentication Required\n  409, // Conflict\n];\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error: any) => {\n  if (\n    error.message.startsWith(\"Cancel\") ||\n    error.message.startsWith(\"AbortError\") ||\n    error.name === \"AbortError\"\n  ) {\n    throw error;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((error as any)?.code === \"ECONNABORTED\") {\n    throw error;\n  }\n  const status =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (error as any)?.response?.status ?? (error as any)?.status;\n  if (status && STATUS_NO_RETRY.includes(+status)) {\n    throw error;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((error as any)?.error?.code === \"insufficient_quota\") {\n    const err = new Error(error?.message);\n    err.name = \"InsufficientQuotaError\";\n    throw err;\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FailedAttemptHandler = (error: any) => any;\n\nexport interface AsyncCallerParams {\n  /**\n   * The maximum number of concurrent calls that can be made.\n   * Defaults to `Infinity`, which means no limit.\n   */\n  maxConcurrency?: number;\n  /**\n   * The maximum number of retries that can be made for a single call,\n   * with an exponential backoff between each attempt. Defaults to 6.\n   */\n  maxRetries?: number;\n  /**\n   * Custom handler to handle failed attempts. Takes the originally thrown\n   * error object as input, and should itself throw an error if the input\n   * error is not retryable.\n   */\n  onFailedAttempt?: FailedAttemptHandler;\n}\n\nexport interface AsyncCallerCallOptions {\n  signal?: AbortSignal;\n}\n\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n  protected maxConcurrency: AsyncCallerParams[\"maxConcurrency\"];\n\n  protected maxRetries: AsyncCallerParams[\"maxRetries\"];\n\n  protected onFailedAttempt: AsyncCallerParams[\"onFailedAttempt\"];\n\n  private queue: typeof import(\"p-queue\")[\"default\"][\"prototype\"];\n\n  constructor(params: AsyncCallerParams) {\n    this.maxConcurrency = params.maxConcurrency ?? Infinity;\n    this.maxRetries = params.maxRetries ?? 6;\n    this.onFailedAttempt =\n      params.onFailedAttempt ?? defaultFailedAttemptHandler;\n\n    const PQueue = (\n      \"default\" in PQueueMod ? PQueueMod.default : PQueueMod\n    ) as typeof PQueueMod;\n    this.queue = new PQueue({ concurrency: this.maxConcurrency });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  call<A extends any[], T extends (...args: A) => Promise<any>>(\n    callable: T,\n    ...args: Parameters<T>\n  ): Promise<Awaited<ReturnType<T>>> {\n    return this.queue.add(\n      () =>\n        pRetry(\n          () =>\n            callable(...args).catch((error) => {\n              // eslint-disable-next-line no-instanceof/no-instanceof\n              if (error instanceof Error) {\n                throw error;\n              } else {\n                throw new Error(error);\n              }\n            }),\n          {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n          }\n        ),\n      { throwOnTimeout: true }\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callWithOptions<A extends any[], T extends (...args: A) => Promise<any>>(\n    options: AsyncCallerCallOptions,\n    callable: T,\n    ...args: Parameters<T>\n  ): Promise<Awaited<ReturnType<T>>> {\n    // Note this doesn't cancel the underlying request,\n    // when available prefer to use the signal option of the underlying call\n    if (options.signal) {\n      return Promise.race([\n        this.call<A, T>(callable, ...args),\n        new Promise<never>((_, reject) => {\n          options.signal?.addEventListener(\"abort\", () => {\n            reject(getAbortSignalError(options.signal));\n          });\n        }),\n      ]);\n    }\n    return this.call<A, T>(callable, ...args);\n  }\n\n  fetch(...args: Parameters<typeof fetch>): ReturnType<typeof fetch> {\n    return this.call(() =>\n      fetch(...args).then((res) => (res.ok ? res : Promise.reject(res)))\n    );\n  }\n}\n"],"names":["error: any","params: AsyncCallerParams","callable: T","options: AsyncCallerCallOptions"],"mappings":";;;;;;;;;;;;;;;;;;;AAKA,MAAM,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAGD,MAAM,8BAA8B,CAACA,UAAe;IAClD,IACE,MAAM,OAAA,CAAQ,UAAA,CAAW,SAAS,IAClC,MAAM,OAAA,CAAQ,UAAA,CAAW,aAAa,IACtC,MAAM,IAAA,KAAS,aAEf,CAAA,MAAM;IAGR,IAAK,OAAe,SAAS,eAC3B,CAAA,MAAM;IAER,MAAM,SAEH,OAAe,UAAU,UAAW,OAAe;IACtD,IAAI,UAAU,gBAAgB,QAAA,CAAS,CAAC,OAAO,CAC7C,CAAA,MAAM;IAGR,IAAK,OAAe,OAAO,SAAS,sBAAsB;QACxD,MAAM,MAAM,IAAI,MAAM,OAAO;QAC7B,IAAI,IAAA,GAAO;QACX,MAAM;IACP;AACF;;;;;;;;;;;;;GAyCD,IAAa,cAAb,MAAyB;IACb,eAAA;IAEA,WAAA;IAEA,gBAAA;IAEF,MAAA;IAER,YAAYC,MAAAA,CAA2B;QACrC,IAAA,CAAK,cAAA,GAAiB,OAAO,cAAA,IAAkB;QAC/C,IAAA,CAAK,UAAA,GAAa,OAAO,UAAA,IAAc;QACvC,IAAA,CAAK,eAAA,GACH,OAAO,eAAA,IAAmB;QAE5B,MAAM,SACJ,aAAa,+MAAA,GAAY,+MAAA,CAAU,OAAA,GAAU,+MAAA;QAE/C,IAAA,CAAK,KAAA,GAAQ,IAAI,OAAO;YAAE,aAAa,IAAA,CAAK,cAAA;QAAgB;IAC7D;IAGD,KACEC,QAAAA,EACA,GAAG,IAAA,EAC8B;QACjC,OAAO,IAAA,CAAK,KAAA,CAAM,GAAA,CAChB,QACE,uMAAA,EACE,IACE,SAAS,GAAG,KAAK,CAAC,KAAA,CAAM,CAAC,UAAU;oBAEjC,IAAI,iBAAiB,MACnB,CAAA,MAAM;yBAEN,MAAM,IAAI,MAAM;gBAEnB,EAAC,EACJ;gBACE,iBAAiB,IAAA,CAAK,eAAA;gBACtB,SAAS,IAAA,CAAK,UAAA;gBACd,WAAW;YAGZ,EACF,EACH;YAAE,gBAAgB;QAAM,EACzB;IACF;IAGD,gBACEC,OAAAA,EACAD,QAAAA,EACA,GAAG,IAAA,EAC8B;QAGjC,IAAI,QAAQ,MAAA,CACV,CAAA,OAAO,QAAQ,IAAA,CAAK;YAClB,IAAA,CAAK,IAAA,CAAW,UAAU,GAAG,KAAK;YAClC,IAAI,QAAe,CAAC,GAAG,WAAW;gBAChC,QAAQ,MAAA,EAAQ,iBAAiB,SAAS,MAAM;oBAC9C,WAAO,iSAAA,EAAoB,QAAQ,MAAA,CAAO,CAAC;gBAC5C,EAAC;YACH,EACF;SAAA,CAAC;QAEJ,OAAO,IAAA,CAAK,IAAA,CAAW,UAAU,GAAG,KAAK;IAC1C;IAED,MAAM,GAAG,IAAA,EAA0D;QACjE,OAAO,IAAA,CAAK,IAAA,CAAK,IACf,MAAM,GAAG,KAAK,CAAC,IAAA,CAAK,CAAC,MAAS,IAAI,EAAA,GAAK,MAAM,QAAQ,MAAA,CAAO,IAAI,CAAE,CACnE;IACF;AACF","debugId":null}},
    {"offset": {"line": 7163, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/tracers/root_listener.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/tracers/root_listener.ts"],"sourcesContent":["import { RunnableConfig } from \"../runnables/config.js\";\nimport { BaseTracer, Run } from \"./base.js\";\n\nexport class RootListenersTracer extends BaseTracer {\n  name = \"RootListenersTracer\";\n\n  /** The Run's ID. Type UUID */\n  rootId?: string;\n\n  config: RunnableConfig;\n\n  argOnStart?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n\n  argOnEnd?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n\n  argOnError?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n\n  constructor({\n    config,\n    onStart,\n    onEnd,\n    onError,\n  }: {\n    config: RunnableConfig;\n    onStart?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n    onEnd?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n    onError?: (run: Run, config: RunnableConfig) => void | Promise<void>;\n  }) {\n    super({ _awaitHandler: true });\n    this.config = config;\n    this.argOnStart = onStart;\n    this.argOnEnd = onEnd;\n    this.argOnError = onError;\n  }\n\n  /**\n   * This is a legacy method only called once for an entire run tree\n   * therefore not useful here\n   * @param {Run} _ Not used\n   */\n  persistRun(_: Run): Promise<void> {\n    return Promise.resolve();\n  }\n\n  async onRunCreate(run: Run) {\n    if (this.rootId) {\n      return;\n    }\n\n    this.rootId = run.id;\n\n    if (this.argOnStart) {\n      await this.argOnStart(run, this.config);\n    }\n  }\n\n  async onRunUpdate(run: Run) {\n    if (run.id !== this.rootId) {\n      return;\n    }\n    if (!run.error) {\n      if (this.argOnEnd) {\n        await this.argOnEnd(run, this.config);\n      }\n    } else if (this.argOnError) {\n      await this.argOnError(run, this.config);\n    }\n  }\n}\n"],"names":["_: Run","run: Run"],"mappings":";;;;;;;AAGA,IAAa,sBAAb,cAAyC,wRAAA,CAAW;IAClD,OAAO,sBAAA;mCAGP,OAAA;IAEA,OAAA;IAEA,WAAA;IAEA,SAAA;IAEA,WAAA;IAEA,YAAY,EACV,MAAA,EACA,OAAA,EACA,KAAA,EACA,OAAA,EAMD,CAAE;QACD,KAAA,CAAM;YAAE,eAAe;QAAM,EAAC;QAC9B,IAAA,CAAK,MAAA,GAAS;QACd,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,QAAA,GAAW;QAChB,IAAA,CAAK,UAAA,GAAa;IACnB;;;;;IAOD,WAAWA,CAAAA,EAAuB;QAChC,OAAO,QAAQ,OAAA,EAAS;IACzB;IAED,MAAM,YAAYC,GAAAA,EAAU;QAC1B,IAAI,IAAA,CAAK,MAAA,CACP,CAAA;QAGF,IAAA,CAAK,MAAA,GAAS,IAAI,EAAA;QAElB,IAAI,IAAA,CAAK,UAAA,EACP,MAAM,IAAA,CAAK,UAAA,CAAW,KAAK,IAAA,CAAK,MAAA,CAAO;IAE1C;IAED,MAAM,YAAYA,GAAAA,EAAU;QAC1B,IAAI,IAAI,EAAA,KAAO,IAAA,CAAK,MAAA,CAClB,CAAA;QAEF,IAAI,CAAC,IAAI,KAAA,EACP;gBAAI,IAAA,CAAK,QAAA,EACP,MAAM,IAAA,CAAK,QAAA,CAAS,KAAK,IAAA,CAAK,MAAA,CAAO;QACtC,OAAA,IACQ,IAAA,CAAK,UAAA,EACd,MAAM,IAAA,CAAK,UAAA,CAAW,KAAK,IAAA,CAAK,MAAA,CAAO;IAE1C;AACF","debugId":null}},
    {"offset": {"line": 7211, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/utils.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/utils.ts"],"sourcesContent":["import { StreamEvent } from \"../tracers/event_stream.js\";\nimport type { RunnableInterface } from \"./types.js\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing: any): thing is RunnableInterface {\n  return thing ? thing.lc_runnable : false;\n}\n\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n  includeNames?: string[];\n\n  includeTypes?: string[];\n\n  includeTags?: string[];\n\n  excludeNames?: string[];\n\n  excludeTypes?: string[];\n\n  excludeTags?: string[];\n\n  constructor(fields: {\n    includeNames?: string[];\n    includeTypes?: string[];\n    includeTags?: string[];\n    excludeNames?: string[];\n    excludeTypes?: string[];\n    excludeTags?: string[];\n  }) {\n    this.includeNames = fields.includeNames;\n    this.includeTypes = fields.includeTypes;\n    this.includeTags = fields.includeTags;\n    this.excludeNames = fields.excludeNames;\n    this.excludeTypes = fields.excludeTypes;\n    this.excludeTags = fields.excludeTags;\n  }\n\n  includeEvent(event: StreamEvent, rootType: string): boolean {\n    let include =\n      this.includeNames === undefined &&\n      this.includeTypes === undefined &&\n      this.includeTags === undefined;\n    const eventTags = event.tags ?? [];\n\n    if (this.includeNames !== undefined) {\n      include = include || this.includeNames.includes(event.name);\n    }\n    if (this.includeTypes !== undefined) {\n      include = include || this.includeTypes.includes(rootType);\n    }\n    if (this.includeTags !== undefined) {\n      include =\n        include || eventTags.some((tag) => this.includeTags?.includes(tag));\n    }\n\n    if (this.excludeNames !== undefined) {\n      include = include && !this.excludeNames.includes(event.name);\n    }\n    if (this.excludeTypes !== undefined) {\n      include = include && !this.excludeTypes.includes(rootType);\n    }\n    if (this.excludeTags !== undefined) {\n      include =\n        include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n    }\n\n    return include;\n  }\n}\n"],"names":["thing: any","fields: {\n    includeNames?: string[];\n    includeTypes?: string[];\n    includeTags?: string[];\n    excludeNames?: string[];\n    excludeTypes?: string[];\n    excludeTags?: string[];\n  }","event: StreamEvent","rootType: string"],"mappings":";;;;;;;AAIA,SAAgB,oBAAoBA,KAAAA,EAAwC;IAC1E,OAAO,QAAQ,MAAM,WAAA,GAAc;AACpC;;;;;;;GASD,IAAa,mBAAb,MAA8B;IAC5B,aAAA;IAEA,aAAA;IAEA,YAAA;IAEA,aAAA;IAEA,aAAA;IAEA,YAAA;IAEA,YAAYC,MAAAA,CAOT;QACD,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,WAAA,GAAc,OAAO,WAAA;QAC1B,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,YAAA,GAAe,OAAO,YAAA;QAC3B,IAAA,CAAK,WAAA,GAAc,OAAO,WAAA;IAC3B;IAED,aAAaC,KAAAA,EAAoBC,QAAAA,EAA2B;QAC1D,IAAI,UACF,IAAA,CAAK,YAAA,KAAiB,KAAA,KACtB,IAAA,CAAK,YAAA,KAAiB,KAAA,KACtB,IAAA,CAAK,WAAA,KAAgB,KAAA;QACvB,MAAM,YAAY,MAAM,IAAA,IAAQ,CAAE,CAAA;QAElC,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,MAAM,IAAA,CAAK;QAE7D,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,SAAS;QAE3D,IAAI,IAAA,CAAK,WAAA,KAAgB,KAAA,GACvB,UACE,WAAW,UAAU,IAAA,CAAK,CAAC,MAAQ,IAAA,CAAK,WAAA,EAAa,SAAS,IAAI,CAAC;QAGvE,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,CAAC,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,MAAM,IAAA,CAAK;QAE9D,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,GACxB,UAAU,WAAW,CAAC,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,SAAS;QAE5D,IAAI,IAAA,CAAK,WAAA,KAAgB,KAAA,GACvB,UACE,WAAW,UAAU,KAAA,CAAM,CAAC,MAAQ,CAAC,IAAA,CAAK,WAAA,EAAa,SAAS,IAAI,CAAC;QAGzE,OAAO;IACR;AACF","debugId":null}},
    {"offset": {"line": 7260, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/types/zod.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/types/zod.ts"],"sourcesContent":["import type * as z3 from \"zod/v3\";\nimport type * as z4 from \"zod/v4/core\";\nimport {\n  parse,\n  parseAsync,\n  globalRegistry,\n  util,\n  clone,\n  _unknown,\n  _never,\n  $ZodUnknown,\n  $ZodNever,\n  $ZodOptional,\n} from \"zod/v4/core\";\n\nexport type ZodStringV3 = z3.ZodString;\n\nexport type ZodStringV4 = z4.$ZodType<string, unknown>;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ZodObjectV3 = z3.ZodObject<any, any, any, any>;\n\nexport type ZodObjectV4 = z4.$ZodObject;\n\nexport type ZodDefaultV3<T extends z3.ZodTypeAny> = z3.ZodDefault<T>;\nexport type ZodDefaultV4<T extends z4.SomeType> = z4.$ZodDefault<T>;\nexport type ZodOptionalV3<T extends z3.ZodTypeAny> = z3.ZodOptional<T>;\nexport type ZodOptionalV4<T extends z4.SomeType> = z4.$ZodOptional<T>;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InteropZodType<Output = any, Input = Output> =\n  | z3.ZodType<Output, z3.ZodTypeDef, Input>\n  | z4.$ZodType<Output, Input>;\n\nexport type InteropZodObject = ZodObjectV3 | ZodObjectV4;\nexport type InteropZodDefault<T = InteropZodObjectShape> =\n  T extends z3.ZodTypeAny\n    ? ZodDefaultV3<T>\n    : T extends z4.SomeType\n    ? ZodDefaultV4<T>\n    : never;\nexport type InteropZodOptional<T = InteropZodObjectShape> =\n  T extends z3.ZodTypeAny\n    ? ZodOptionalV3<T>\n    : T extends z4.SomeType\n    ? ZodOptionalV4<T>\n    : never;\n\nexport type InteropZodObjectShape<\n  T extends InteropZodObject = InteropZodObject\n> = T extends z3.ZodObject<infer Shape>\n  ? { [K in keyof Shape]: Shape[K] }\n  : T extends z4.$ZodObject<infer Shape>\n  ? { [K in keyof Shape]: Shape[K] }\n  : never;\n\nexport type InteropZodIssue = z3.ZodIssue | z4.$ZodIssue;\n\n// Simplified type inference to avoid circular dependencies\nexport type InferInteropZodInput<T> = T extends z3.ZodType<\n  unknown,\n  z3.ZodTypeDef,\n  infer Input\n>\n  ? Input\n  : T extends z4.$ZodType<unknown, infer Input>\n  ? Input\n  : T extends { _zod: { input: infer Input } }\n  ? Input\n  : never;\n\nexport type InferInteropZodOutput<T> = T extends z3.ZodType<\n  infer Output,\n  z3.ZodTypeDef,\n  unknown\n>\n  ? Output\n  : T extends z4.$ZodType<infer Output, unknown>\n  ? Output\n  : T extends { _zod: { output: infer Output } }\n  ? Output\n  : never;\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nexport function isZodSchemaV4(\n  schema: unknown\n): schema is z4.$ZodType<unknown, unknown> {\n  if (typeof schema !== \"object\" || schema === null) {\n    return false;\n  }\n\n  const obj = schema as Record<string, unknown>;\n  if (!(\"_zod\" in obj)) {\n    return false;\n  }\n\n  const zod = obj._zod;\n  return (\n    typeof zod === \"object\" &&\n    zod !== null &&\n    \"def\" in (zod as Record<string, unknown>)\n  );\n}\n\nexport function isZodSchemaV3(\n  schema: unknown\n): schema is z3.ZodType<unknown, z3.ZodTypeDef, unknown> {\n  if (typeof schema !== \"object\" || schema === null) {\n    return false;\n  }\n\n  const obj = schema as Record<string, unknown>;\n  if (!(\"_def\" in obj) || \"_zod\" in obj) {\n    return false;\n  }\n\n  const def = obj._def;\n  return (\n    typeof def === \"object\" &&\n    def != null &&\n    \"typeName\" in (def as Record<string, unknown>)\n  );\n}\n\n/** Backward compatible isZodSchema for Zod 3 */\nexport function isZodSchema<\n  RunOutput extends Record<string, unknown> = Record<string, unknown>\n>(\n  schema: z3.ZodType<RunOutput> | Record<string, unknown>\n): schema is z3.ZodType<RunOutput> {\n  if (isZodSchemaV4(schema)) {\n    console.warn(\n      \"[WARNING] Attempting to use Zod 4 schema in a context where Zod 3 schema is expected. This may cause unexpected behavior.\"\n    );\n  }\n  return isZodSchemaV3(schema);\n}\n\n/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {unknown} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isInteropZodSchema(input: unknown): input is InteropZodType {\n  if (!input) {\n    return false;\n  }\n  if (typeof input !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(input)) {\n    return false;\n  }\n  if (\n    isZodSchemaV4(input) ||\n    isZodSchemaV3(input as z3.ZodType<Record<string, unknown>>)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport type InteropZodLiteral = z3.ZodLiteral<unknown> | z4.$ZodLiteral;\n\nexport function isZodLiteralV3(obj: unknown): obj is z3.ZodLiteral<unknown> {\n  // Zod v3 literal schemas have _def.typeName === \"ZodLiteral\"\n  if (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"_def\" in obj &&\n    typeof obj._def === \"object\" &&\n    obj._def !== null &&\n    \"typeName\" in obj._def &&\n    obj._def.typeName === \"ZodLiteral\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function isZodLiteralV4(obj: unknown): obj is z4.$ZodLiteral {\n  if (!isZodSchemaV4(obj)) return false;\n  // Zod v4 literal schemas have _zod.def.type === \"literal\"\n  if (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"_zod\" in obj &&\n    typeof obj._zod === \"object\" &&\n    obj._zod !== null &&\n    \"def\" in obj._zod &&\n    typeof obj._zod.def === \"object\" &&\n    obj._zod.def !== null &&\n    \"type\" in obj._zod.def &&\n    obj._zod.def.type === \"literal\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Determines if the provided value is an InteropZodLiteral (Zod v3 or v4 literal schema).\n *\n * @param obj The value to check.\n * @returns {boolean} True if the value is a Zod v3 or v4 literal schema, false otherwise.\n */\nexport function isInteropZodLiteral(obj: unknown): obj is InteropZodLiteral {\n  if (isZodLiteralV3(obj)) return true;\n  if (isZodLiteralV4(obj)) return true;\n  return false;\n}\n\ntype InteropZodSafeParseResult<T> = z3.SafeParseReturnType<T, T>;\n\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns a safe parse result.\n * This function handles both Zod v3 and v4 schemas, returning a result object indicating success or failure.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<InteropZodSafeParseResult<T>>} A promise that resolves to a safe parse result object.\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopSafeParseAsync<T>(\n  schema: InteropZodType<T>,\n  input: unknown\n): Promise<InteropZodSafeParseResult<T>> {\n  if (isZodSchemaV4(schema)) {\n    try {\n      const data = await parseAsync(schema, input);\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error as z3.ZodError<T>,\n      };\n    }\n  }\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    return await schema.safeParseAsync(input);\n  }\n  throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n\n/**\n * Asynchronously parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {Promise<T>} A promise that resolves to the parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport async function interopParseAsync<T>(\n  schema: InteropZodType<T>,\n  input: unknown\n): Promise<T> {\n  if (isZodSchemaV4(schema)) {\n    return await parseAsync(schema, input);\n  }\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    return await schema.parseAsync(input);\n  }\n  throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n\n/**\n * Safely parses the input using the provided Zod schema (v3 or v4) and returns a result object\n * indicating success or failure. This function is compatible with both Zod v3 and v4 schemas.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {InteropZodSafeParseResult<T>} An object with either the parsed data (on success)\n *   or the error (on failure).\n * @throws {Error} If the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopSafeParse<T>(\n  schema: InteropZodType<T>,\n  input: unknown\n): InteropZodSafeParseResult<T> {\n  if (isZodSchemaV4(schema)) {\n    try {\n      const data = parse(schema, input);\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error as z3.ZodError<T>,\n      };\n    }\n  }\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    return schema.safeParse(input);\n  }\n  throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n\n/**\n * Parses the input using the provided Zod schema (v3 or v4) and returns the parsed value.\n * Throws an error if parsing fails or if the schema is not a recognized Zod v3 or v4 schema.\n *\n * @template T - The expected output type of the schema.\n * @param {InteropZodType<T>} schema - The Zod schema (v3 or v4) to use for parsing.\n * @param {unknown} input - The input value to parse.\n * @returns {T} The parsed value.\n * @throws {Error} If parsing fails or the schema is not a recognized Zod v3 or v4 schema.\n */\nexport function interopParse<T>(schema: InteropZodType<T>, input: unknown): T {\n  if (isZodSchemaV4(schema)) {\n    return parse(schema, input);\n  }\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    return schema.parse(input);\n  }\n  throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n\n/**\n * Retrieves the description from a schema definition (v3, v4, or plain object), if available.\n *\n * @param {unknown} schema - The schema to extract the description from.\n * @returns {string | undefined} The description of the schema, or undefined if not present.\n */\nexport function getSchemaDescription(\n  schema: InteropZodType<unknown> | Record<string, unknown>\n): string | undefined {\n  if (isZodSchemaV4(schema)) {\n    return globalRegistry.get(schema)?.description;\n  }\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    return schema.description as string | undefined;\n  }\n  if (\"description\" in schema && typeof schema.description === \"string\") {\n    return schema.description;\n  }\n  return undefined;\n}\n\n/**\n * Determines if the provided Zod schema is \"shapeless\".\n * A shapeless schema is one that does not define any object shape,\n * such as ZodString, ZodNumber, ZodBoolean, ZodAny, etc.\n * For ZodObject, it must have no shape keys to be considered shapeless.\n * ZodRecord schemas are considered shapeless since they define dynamic\n * key-value mappings without fixed keys.\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is shapeless, false otherwise.\n */\nexport function isShapelessZodSchema(schema: unknown): boolean {\n  if (!isInteropZodSchema(schema)) {\n    return false;\n  }\n\n  // Check for v3 schemas\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n    const def = schema._def as { typeName?: string };\n\n    // ZodObject is only shaped if it has actual shape keys\n    if (def.typeName === \"ZodObject\") {\n      const obj = schema as { shape?: Record<string, unknown> };\n      return !obj.shape || Object.keys(obj.shape).length === 0;\n    }\n\n    // ZodRecord is shapeless (dynamic key-value mapping)\n    if (def.typeName === \"ZodRecord\") {\n      return true;\n    }\n  }\n\n  // Check for v4 schemas\n  if (isZodSchemaV4(schema)) {\n    const def = schema._zod.def;\n\n    // Object type is only shaped if it has actual shape keys\n    if (def.type === \"object\") {\n      const obj = schema as { shape?: Record<string, unknown> };\n      return !obj.shape || Object.keys(obj.shape).length === 0;\n    }\n\n    // Record type is shapeless (dynamic key-value mapping)\n    if (def.type === \"record\") {\n      return true;\n    }\n  }\n\n  // For other schemas, check if they have a `shape` property\n  // If they don't have shape, they're likely shapeless\n  if (typeof schema === \"object\" && schema !== null && !(\"shape\" in schema)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Determines if the provided Zod schema should be treated as a simple string schema\n * that maps to DynamicTool. This aligns with the type-level constraint of\n * InteropZodType<string | undefined> which only matches basic string schemas.\n * If the provided schema is just z.string(), we can make the determination that\n * the tool is just a generic string tool that doesn't require any input validation.\n *\n * This function only returns true for basic ZodString schemas, including:\n * - Basic string schemas (z.string())\n * - String schemas with validations (z.string().min(1), z.string().email(), etc.)\n *\n * This function returns false for everything else, including:\n * - String schemas with defaults (z.string().default(\"value\"))\n * - Branded string schemas (z.string().brand<\"UserId\">())\n * - String schemas with catch operations (z.string().catch(\"default\"))\n * - Optional/nullable string schemas (z.string().optional())\n * - Transformed schemas (z.string().transform() or z.object().transform())\n * - Object or record schemas, even if they're empty\n * - Any other schema type\n *\n * @param schema The Zod schema to check.\n * @returns {boolean} True if the schema is a basic ZodString, false otherwise.\n */\nexport function isSimpleStringZodSchema(\n  schema: unknown\n): schema is InteropZodType<string | undefined> {\n  if (!isInteropZodSchema(schema)) {\n    return false;\n  }\n\n  // For v3 schemas\n  if (isZodSchemaV3(schema as z3.ZodType<Record<string, unknown>>)) {\n    // @ts-expect-error - zod v3 types are not compatible with zod v4 types\n    const def = schema._def as { typeName?: string };\n\n    // Only accept basic ZodString\n    return def.typeName === \"ZodString\";\n  }\n\n  // For v4 schemas\n  if (isZodSchemaV4(schema)) {\n    const def = schema._zod.def;\n\n    // Only accept basic string type\n    return def.type === \"string\";\n  }\n\n  return false;\n}\n\nexport function isZodObjectV3(obj: unknown): obj is ZodObjectV3 {\n  // Zod v3 object schemas have _def.typeName === \"ZodObject\"\n  if (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"_def\" in obj &&\n    typeof obj._def === \"object\" &&\n    obj._def !== null &&\n    \"typeName\" in obj._def &&\n    obj._def.typeName === \"ZodObject\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function isZodObjectV4(obj: unknown): obj is z4.$ZodObject {\n  if (!isZodSchemaV4(obj)) return false;\n  // Zod v4 object schemas have _zod.def.type === \"object\"\n  if (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"_zod\" in obj &&\n    typeof obj._zod === \"object\" &&\n    obj._zod !== null &&\n    \"def\" in obj._zod &&\n    typeof obj._zod.def === \"object\" &&\n    obj._zod.def !== null &&\n    \"type\" in obj._zod.def &&\n    obj._zod.def.type === \"object\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function isZodArrayV4(obj: unknown): obj is z4.$ZodArray {\n  if (!isZodSchemaV4(obj)) return false;\n  // Zod v4 array schemas have _zod.def.type === \"array\"\n  if (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"_zod\" in obj &&\n    typeof obj._zod === \"object\" &&\n    obj._zod !== null &&\n    \"def\" in obj._zod &&\n    typeof obj._zod.def === \"object\" &&\n    obj._zod.def !== null &&\n    \"type\" in obj._zod.def &&\n    obj._zod.def.type === \"array\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Determines if the provided value is an InteropZodObject (Zod v3 or v4 object schema).\n *\n * @param obj The value to check.\n * @returns {boolean} True if the value is a Zod v3 or v4 object schema, false otherwise.\n */\nexport function isInteropZodObject(obj: unknown): obj is InteropZodObject {\n  if (isZodObjectV3(obj)) return true;\n  if (isZodObjectV4(obj)) return true;\n  return false;\n}\n\n/**\n * Retrieves the shape (fields) of a Zod object schema, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObjectShape<T>} The shape of the object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function getInteropZodObjectShape<T extends InteropZodObject>(\n  schema: T\n): InteropZodObjectShape<T> {\n  if (isZodSchemaV3(schema)) {\n    return schema.shape;\n  }\n  if (isZodSchemaV4(schema)) {\n    return schema._zod.def.shape as InteropZodObjectShape<T>;\n  }\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n\n/**\n * Extends a Zod object schema with additional fields, supporting both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {InteropZodObjectShape} extension - The fields to add to the schema.\n * @returns {InteropZodObject} The extended Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function extendInteropZodObject<T extends InteropZodObject>(\n  schema: T,\n  extension: InteropZodObjectShape\n): InteropZodObject {\n  if (isZodSchemaV3(schema)) {\n    return schema.extend(extension as z3.ZodRawShape);\n  }\n  if (isZodSchemaV4(schema)) {\n    return util.extend(schema, extension);\n  }\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n\n/**\n * Returns a partial version of a Zod object schema, making all fields optional.\n * Supports both Zod v3 and v4.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @returns {InteropZodObject} The partial Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPartial<T extends InteropZodObject>(\n  schema: T\n): InteropZodObject {\n  if (isZodSchemaV3(schema)) {\n    // z3: .partial() exists and works as expected\n    return schema.partial();\n  }\n  if (isZodSchemaV4(schema)) {\n    // z4: util.partial exists and works as expected\n    return util.partial($ZodOptional, schema, undefined);\n  }\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n\n/**\n * Returns a strict version of a Zod object schema, disallowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies strictness\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply strictness recursively to nested objects/arrays.\n * @returns {InteropZodObject} The strict Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectStrict<T extends InteropZodObject>(\n  schema: T,\n  recursive = false\n): InteropZodObject {\n  if (isZodSchemaV3(schema)) {\n    // TODO: v3 schemas aren't recursively handled here\n    // (currently not necessary since zodToJsonSchema handles this)\n    return schema.strict();\n  }\n  if (isZodObjectV4(schema)) {\n    const outputShape: Mutable<z4.$ZodShape> = schema._zod.def.shape;\n    if (recursive) {\n      for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n        // If the shape key is a v4 object schema, we need to make it strict\n        if (isZodObjectV4(keySchema)) {\n          const outputSchema = interopZodObjectStrict(keySchema, recursive);\n          outputShape[key] = outputSchema as ZodObjectV4;\n        }\n        // If the shape key is a v4 array schema, we need to make the element\n        // schema strict if it's an object schema\n        else if (isZodArrayV4(keySchema)) {\n          let elementSchema = keySchema._zod.def.element;\n          if (isZodObjectV4(elementSchema)) {\n            elementSchema = interopZodObjectStrict(\n              elementSchema,\n              recursive\n            ) as ZodObjectV4;\n          }\n          outputShape[key] = clone(keySchema, {\n            ...keySchema._zod.def,\n            element: elementSchema,\n          });\n        }\n        // Otherwise, just use the keySchema\n        else {\n          outputShape[key] = keySchema;\n        }\n        // Assign meta fields to the keySchema\n        const meta = globalRegistry.get(keySchema);\n        if (meta) globalRegistry.add(outputShape[key], meta);\n      }\n    }\n    const modifiedSchema = clone<ZodObjectV4>(schema, {\n      ...schema._zod.def,\n      shape: outputShape,\n      catchall: _never($ZodNever),\n    });\n    const meta = globalRegistry.get(schema);\n    if (meta) globalRegistry.add(modifiedSchema, meta);\n    return modifiedSchema;\n  }\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n\n/**\n * Returns a passthrough version of a Zod object schema, allowing unknown keys.\n * Supports both Zod v3 and v4 object schemas. If `recursive` is true, applies passthrough\n * recursively to all nested object schemas and arrays of object schemas.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {boolean} [recursive=false] - Whether to apply passthrough recursively to nested objects/arrays.\n * @returns {InteropZodObject} The passthrough Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectPassthrough<T extends InteropZodObject>(\n  schema: T,\n  recursive = false\n): InteropZodObject {\n  if (isZodObjectV3(schema)) {\n    // TODO: v3 schemas aren't recursively handled here\n    // (currently not necessary since zodToJsonSchema handles this)\n    return schema.passthrough();\n  }\n  if (isZodObjectV4(schema)) {\n    const outputShape: Mutable<z4.$ZodShape> = schema._zod.def.shape;\n    if (recursive) {\n      for (const [key, keySchema] of Object.entries(schema._zod.def.shape)) {\n        // If the shape key is a v4 object schema, we need to make it passthrough\n        if (isZodObjectV4(keySchema)) {\n          const outputSchema = interopZodObjectPassthrough(\n            keySchema,\n            recursive\n          );\n          outputShape[key] = outputSchema as ZodObjectV4;\n        }\n        // If the shape key is a v4 array schema, we need to make the element\n        // schema passthrough if it's an object schema\n        else if (isZodArrayV4(keySchema)) {\n          let elementSchema = keySchema._zod.def.element;\n          if (isZodObjectV4(elementSchema)) {\n            elementSchema = interopZodObjectPassthrough(\n              elementSchema,\n              recursive\n            ) as ZodObjectV4;\n          }\n          outputShape[key] = clone(keySchema, {\n            ...keySchema._zod.def,\n            element: elementSchema,\n          });\n        }\n        // Otherwise, just use the keySchema\n        else {\n          outputShape[key] = keySchema;\n        }\n        // Assign meta fields to the keySchema\n        const meta = globalRegistry.get(keySchema);\n        if (meta) globalRegistry.add(outputShape[key], meta);\n      }\n    }\n    const modifiedSchema = clone<ZodObjectV4>(schema, {\n      ...schema._zod.def,\n      shape: outputShape,\n      catchall: _unknown($ZodUnknown),\n    });\n    const meta = globalRegistry.get(schema);\n    if (meta) globalRegistry.add(modifiedSchema, meta);\n    return modifiedSchema;\n  }\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n\n/**\n * Returns a getter function for the default value of a Zod schema, if one is defined.\n * Supports both Zod v3 and v4 schemas. If the schema has a default value,\n * the returned function will return that value when called. If no default is defined,\n * returns undefined.\n *\n * @template T - The type of the Zod schema.\n * @param {T} schema - The Zod schema instance (either v3 or v4).\n * @returns {(() => InferInteropZodOutput<T>) | undefined} A function that returns the default value, or undefined if no default is set.\n */\nexport function getInteropZodDefaultGetter<T extends InteropZodType>(\n  schema: T\n): (() => InferInteropZodOutput<T>) | undefined {\n  if (isZodSchemaV3(schema)) {\n    try {\n      const defaultValue = schema.parse(undefined);\n      return () => defaultValue as InferInteropZodOutput<T>;\n    } catch {\n      return undefined;\n    }\n  }\n  if (isZodSchemaV4(schema)) {\n    try {\n      const defaultValue = parse(schema, undefined);\n      return () => defaultValue as InferInteropZodOutput<T>;\n    } catch {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nfunction isZodTransformV3(\n  schema: InteropZodType\n): schema is z3.ZodEffects<z3.ZodTypeAny> {\n  return (\n    isZodSchemaV3(schema) &&\n    \"typeName\" in schema._def &&\n    schema._def.typeName === \"ZodEffects\"\n  );\n}\n\nfunction isZodTransformV4(schema: InteropZodType): schema is z4.$ZodPipe {\n  return isZodSchemaV4(schema) && schema._zod.def.type === \"pipe\";\n}\n\n/**\n * Returns the input type of a Zod transform schema, for both v3 and v4.\n * If the schema is not a transform, returns undefined. If `recursive` is true,\n * recursively processes nested object schemas and arrays of object schemas.\n *\n * @param schema - The Zod schema instance (v3 or v4)\n * @param {boolean} [recursive=false] - Whether to recursively process nested objects/arrays.\n * @returns The input Zod schema of the transform, or undefined if not a transform\n */\nexport function interopZodTransformInputSchema(\n  schema: InteropZodType,\n  recursive = false\n): InteropZodType {\n  // Zod v3: ._def.schema is the input schema for ZodEffects (transform)\n  if (isZodSchemaV3(schema)) {\n    if (isZodTransformV3(schema)) {\n      return interopZodTransformInputSchema(schema._def.schema, recursive);\n    }\n    // TODO: v3 schemas aren't recursively handled here\n    // (currently not necessary since zodToJsonSchema handles this)\n    return schema;\n  }\n\n  // Zod v4: _def.type is the input schema for ZodEffects (transform)\n  if (isZodSchemaV4(schema)) {\n    let outputSchema: InteropZodType = schema;\n    if (isZodTransformV4(schema)) {\n      outputSchema = interopZodTransformInputSchema(\n        schema._zod.def.in,\n        recursive\n      );\n    }\n    if (recursive) {\n      // Handle nested object schemas\n      if (isZodObjectV4(outputSchema)) {\n        const outputShape: Mutable<z4.$ZodShape> = outputSchema._zod.def.shape;\n        for (const [key, keySchema] of Object.entries(\n          outputSchema._zod.def.shape\n        )) {\n          outputShape[key] = interopZodTransformInputSchema(\n            keySchema,\n            recursive\n          ) as z4.$ZodType;\n        }\n        outputSchema = clone<ZodObjectV4>(outputSchema, {\n          ...outputSchema._zod.def,\n          shape: outputShape,\n        });\n      }\n      // Handle nested array schemas\n      else if (isZodArrayV4(outputSchema)) {\n        const elementSchema = interopZodTransformInputSchema(\n          outputSchema._zod.def.element,\n          recursive\n        );\n        outputSchema = clone<z4.$ZodArray>(outputSchema, {\n          ...outputSchema._zod.def,\n          element: elementSchema as z4.$ZodType,\n        });\n      }\n    }\n    const meta = globalRegistry.get(schema);\n    if (meta) globalRegistry.add(outputSchema as z4.$ZodType, meta);\n    return outputSchema;\n  }\n\n  throw new Error(\"Schema must be an instance of z3.ZodType or z4.$ZodType\");\n}\n\n/**\n * Creates a modified version of a Zod object schema where fields matching a predicate are made optional.\n * Supports both Zod v3 and v4 schemas and preserves the original schema version.\n *\n * @template T - The type of the Zod object schema.\n * @param {T} schema - The Zod object schema instance (either v3 or v4).\n * @param {(key: string, value: InteropZodType) => boolean} predicate - Function to determine which fields should be optional.\n * @returns {InteropZodObject} The modified Zod object schema.\n * @throws {Error} If the schema is not a Zod v3 or v4 object.\n */\nexport function interopZodObjectMakeFieldsOptional<T extends InteropZodObject>(\n  schema: T,\n  predicate: (key: string, value: InteropZodType) => boolean\n): InteropZodObject {\n  if (isZodSchemaV3(schema)) {\n    const shape = getInteropZodObjectShape(schema);\n    const modifiedShape: Record<string, z3.ZodTypeAny> = {};\n\n    for (const [key, value] of Object.entries(shape)) {\n      if (predicate(key, value)) {\n        // Make this field optional using v3 methods\n        modifiedShape[key] = (value as z3.ZodTypeAny).optional();\n      } else {\n        // Keep field as-is\n        modifiedShape[key] = value;\n      }\n    }\n\n    // Use v3's extend method to create a new schema with the modified shape\n    return schema.extend(modifiedShape as z3.ZodRawShape);\n  }\n\n  if (isZodSchemaV4(schema)) {\n    const shape = getInteropZodObjectShape(schema);\n    const outputShape: Mutable<z4.$ZodShape> = { ...schema._zod.def.shape };\n\n    for (const [key, value] of Object.entries(shape)) {\n      if (predicate(key, value)) {\n        // Make this field optional using v4 methods\n        outputShape[key] = new $ZodOptional({\n          type: \"optional\" as const,\n          innerType: value as z4.$ZodType,\n        });\n      }\n      // Otherwise keep the field as-is (already in outputShape)\n    }\n\n    const modifiedSchema = clone<ZodObjectV4>(schema, {\n      ...schema._zod.def,\n      shape: outputShape,\n    });\n\n    // Preserve metadata\n    const meta = globalRegistry.get(schema);\n    if (meta) globalRegistry.add(modifiedSchema, meta);\n\n    return modifiedSchema;\n  }\n\n  throw new Error(\n    \"Schema must be an instance of z3.ZodObject or z4.$ZodObject\"\n  );\n}\n"],"names":["schema: unknown","schema: z3.ZodType<RunOutput> | Record<string, unknown>","input: unknown","obj: unknown","schema: InteropZodType<T>","schema: InteropZodType<unknown> | Record<string, unknown>","schema: T","extension: InteropZodObjectShape","outputShape: Mutable<z4.$ZodShape>","meta","schema: InteropZodType","outputSchema: InteropZodType","predicate: (key: string, value: InteropZodType) => boolean","modifiedShape: Record<string, z3.ZodTypeAny>"],"mappings":"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","debugId":null}},
    {"offset": {"line": 7778, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/graph_mermaid.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/graph_mermaid.ts"],"sourcesContent":["import { Edge, Node } from \"./types.js\";\n\nfunction _escapeNodeLabel(nodeLabel: string): string {\n  // Escapes the node label for Mermaid syntax.\n  return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\n\nconst MARKDOWN_SPECIAL_CHARS = [\"*\", \"_\", \"`\"];\n\nfunction _generateMermaidGraphStyles(\n  nodeColors: Record<string, string>\n): string {\n  let styles = \"\";\n  for (const [className, color] of Object.entries(nodeColors)) {\n    styles += `\\tclassDef ${className} ${color};\\n`;\n  }\n  return styles;\n}\n\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(\n  nodes: Record<string, Node>,\n  edges: Edge[],\n  config?: {\n    firstNode?: string;\n    lastNode?: string;\n    curveStyle?: string;\n    withStyles?: boolean;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n  }\n): string {\n  const {\n    firstNode,\n    lastNode,\n    nodeColors,\n    withStyles = true,\n    curveStyle = \"linear\",\n    wrapLabelNWords = 9,\n  } = config ?? {};\n  // Initialize Mermaid graph configuration\n  let mermaidGraph = withStyles\n    ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n    : \"graph TD;\\n\";\n  if (withStyles) {\n    // Node formatting templates\n    const defaultClassLabel = \"default\";\n    const formatDict: Record<string, string> = {\n      [defaultClassLabel]: \"{0}({1})\",\n    };\n    if (firstNode !== undefined) {\n      formatDict[firstNode] = \"{0}([{1}]):::first\";\n    }\n    if (lastNode !== undefined) {\n      formatDict[lastNode] = \"{0}([{1}]):::last\";\n    }\n\n    // Add nodes to the graph\n    for (const [key, node] of Object.entries(nodes)) {\n      const nodeName = node.name.split(\":\").pop() ?? \"\";\n      const label = MARKDOWN_SPECIAL_CHARS.some(\n        (char) => nodeName.startsWith(char) && nodeName.endsWith(char)\n      )\n        ? `<p>${nodeName}</p>`\n        : nodeName;\n\n      let finalLabel = label;\n      if (Object.keys(node.metadata ?? {}).length) {\n        finalLabel += `<hr/><small><em>${Object.entries(node.metadata ?? {})\n          .map(([k, v]) => `${k} = ${v}`)\n          .join(\"\\n\")}</em></small>`;\n      }\n\n      const nodeLabel = (formatDict[key] ?? formatDict[defaultClassLabel])\n        .replace(\"{0}\", _escapeNodeLabel(key))\n        .replace(\"{1}\", finalLabel);\n\n      mermaidGraph += `\\t${nodeLabel}\\n`;\n    }\n  }\n\n  // Group edges by their common prefixes\n  const edgeGroups: Record<string, Edge[]> = {};\n  for (const edge of edges) {\n    const srcParts = edge.source.split(\":\");\n    const tgtParts = edge.target.split(\":\");\n    const commonPrefix = srcParts\n      .filter((src, i) => src === tgtParts[i])\n      .join(\":\");\n    if (!edgeGroups[commonPrefix]) {\n      edgeGroups[commonPrefix] = [];\n    }\n    edgeGroups[commonPrefix].push(edge);\n  }\n\n  const seenSubgraphs = new Set<string>();\n\n  function addSubgraph(edges: Edge[], prefix: string): void {\n    const selfLoop = edges.length === 1 && edges[0].source === edges[0].target;\n    if (prefix && !selfLoop) {\n      const subgraph = prefix.split(\":\").pop()!;\n      if (seenSubgraphs.has(subgraph)) {\n        throw new Error(\n          `Found duplicate subgraph '${subgraph}' -- this likely means that ` +\n            \"you're reusing a subgraph node with the same name. \" +\n            \"Please adjust your graph to have subgraph nodes with unique names.\"\n        );\n      }\n\n      seenSubgraphs.add(subgraph);\n      mermaidGraph += `\\tsubgraph ${subgraph}\\n`;\n    }\n\n    for (const edge of edges) {\n      const { source, target, data, conditional } = edge;\n\n      let edgeLabel = \"\";\n      if (data !== undefined) {\n        let edgeData = data;\n        const words = edgeData.split(\" \");\n        if (words.length > wrapLabelNWords) {\n          edgeData = Array.from(\n            { length: Math.ceil(words.length / wrapLabelNWords) },\n            (_, i) =>\n              words\n                .slice(i * wrapLabelNWords, (i + 1) * wrapLabelNWords)\n                .join(\" \")\n          ).join(\"&nbsp;<br>&nbsp;\");\n        }\n        edgeLabel = conditional\n          ? ` -. &nbsp;${edgeData}&nbsp; .-> `\n          : ` -- &nbsp;${edgeData}&nbsp; --> `;\n      } else {\n        edgeLabel = conditional ? \" -.-> \" : \" --> \";\n      }\n\n      mermaidGraph += `\\t${_escapeNodeLabel(\n        source\n      )}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n    }\n\n    // Recursively add nested subgraphs\n    for (const nestedPrefix in edgeGroups) {\n      if (nestedPrefix.startsWith(`${prefix}:`) && nestedPrefix !== prefix) {\n        addSubgraph(edgeGroups[nestedPrefix], nestedPrefix);\n      }\n    }\n\n    if (prefix && !selfLoop) {\n      mermaidGraph += \"\\tend\\n\";\n    }\n  }\n\n  // Start with the top-level edges (no common prefix)\n  addSubgraph(edgeGroups[\"\"] ?? [], \"\");\n\n  // Add remaining subgraphs\n  for (const prefix in edgeGroups) {\n    if (!prefix.includes(\":\") && prefix !== \"\") {\n      addSubgraph(edgeGroups[prefix], prefix);\n    }\n  }\n\n  // Add custom styles for nodes\n  if (withStyles) {\n    mermaidGraph += _generateMermaidGraphStyles(nodeColors ?? {});\n  }\n\n  return mermaidGraph;\n}\n\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n *\n * @example\n * ```javascript\n * const image = await drawMermaidImage(mermaidSyntax, {\n *   backgroundColor: \"white\",\n *   imageType: \"png\",\n * });\n * fs.writeFileSync(\"image.png\", image);\n * ```\n *\n * @param mermaidSyntax - The Mermaid syntax to render.\n * @param config - The configuration for the image.\n * @returns The image as a Blob.\n */\nexport async function drawMermaidImage(\n  mermaidSyntax: string,\n  config?: {\n    /**\n     * The type of image to render.\n     * @default \"png\"\n     */\n    imageType?: \"png\" | \"jpeg\" | \"webp\";\n    backgroundColor?: string;\n  }\n) {\n  let backgroundColor = config?.backgroundColor ?? \"white\";\n  const imageType = config?.imageType ?? \"png\";\n\n  // Use btoa for compatibility, assume ASCII\n  const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n  // Check if the background color is a hexadecimal color code using regex\n  if (backgroundColor !== undefined) {\n    const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n    if (!hexColorPattern.test(backgroundColor)) {\n      backgroundColor = `!${backgroundColor}`;\n    }\n  }\n  const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}&type=${imageType}`;\n  const res = await fetch(imageUrl);\n  if (!res.ok) {\n    throw new Error(\n      [\n        `Failed to render the graph using the Mermaid.INK API.`,\n        `Status code: ${res.status}`,\n        `Status text: ${res.statusText}`,\n      ].join(\"\\n\")\n    );\n  }\n  const content = await res.blob();\n  return content;\n}\n"],"names":["nodeLabel: string","nodeColors: Record<string, string>","nodes: Record<string, Node>","edges: Edge[]","config?: {\n    firstNode?: string;\n    lastNode?: string;\n    curveStyle?: string;\n    withStyles?: boolean;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n  }","formatDict: Record<string, string>","edgeGroups: Record<string, Edge[]>","prefix: string","edges","mermaidSyntax: string","config?: {\n    /**\n     * The type of image to render.\n     * @default \"png\"\n     */\n    imageType?: \"png\" | \"jpeg\" | \"webp\";\n    backgroundColor?: string;\n  }"],"mappings":"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","debugId":null}},
    {"offset": {"line": 7896, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/Options.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/Options.ts"],"sourcesContent":["import { ZodSchema, ZodTypeDef } from \"zod/v3\";\nimport { Refs, Seen } from \"./Refs\";\nimport { JsonSchema7Type } from \"./parseTypes\";\n\nexport type Targets =\n  | \"jsonSchema7\"\n  | \"jsonSchema2019-09\"\n  | \"openApi3\"\n  | \"openAi\";\n\nexport type DateStrategy =\n  | \"format:date-time\"\n  | \"format:date\"\n  | \"string\"\n  | \"integer\";\n\nexport const ignoreOverride = Symbol(\n  \"Let zodToJsonSchema decide on which parser to use\"\n);\n\nexport type OverrideCallback = (\n  def: ZodTypeDef,\n  refs: Refs,\n  seen: Seen | undefined,\n  forceResolution?: boolean\n) => JsonSchema7Type | undefined | typeof ignoreOverride;\n\nexport type PostProcessCallback = (\n  jsonSchema: JsonSchema7Type | undefined,\n  def: ZodTypeDef,\n  refs: Refs\n) => JsonSchema7Type | undefined;\n\nexport const jsonDescription: PostProcessCallback = (jsonSchema, def) => {\n  if (def.description) {\n    try {\n      return {\n        ...jsonSchema,\n        ...JSON.parse(def.description),\n      };\n    } catch {}\n  }\n\n  return jsonSchema;\n};\n\nexport type Options<Target extends Targets = \"jsonSchema7\"> = {\n  name: string | undefined;\n  $refStrategy: \"root\" | \"relative\" | \"none\" | \"seen\";\n  basePath: string[];\n  effectStrategy: \"input\" | \"any\";\n  pipeStrategy: \"input\" | \"output\" | \"all\";\n  dateStrategy: DateStrategy | DateStrategy[];\n  mapStrategy: \"entries\" | \"record\";\n  removeAdditionalStrategy: \"passthrough\" | \"strict\";\n  allowedAdditionalProperties: true | undefined;\n  rejectedAdditionalProperties: false | undefined;\n  target: Target;\n  strictUnions: boolean;\n  definitionPath: string;\n  definitions: Record<string, ZodSchema>;\n  errorMessages: boolean;\n  markdownDescription: boolean;\n  patternStrategy: \"escape\" | \"preserve\";\n  applyRegexFlags: boolean;\n  emailStrategy: \"format:email\" | \"format:idn-email\" | \"pattern:zod\";\n  base64Strategy: \"format:binary\" | \"contentEncoding:base64\" | \"pattern:zod\";\n  nameStrategy: \"ref\" | \"title\";\n  override?: OverrideCallback;\n  postProcess?: PostProcessCallback;\n  openAiAnyTypeName: string;\n};\n\nexport const defaultOptions: Options = {\n  name: undefined,\n  $refStrategy: \"root\",\n  basePath: [\"#\"],\n  effectStrategy: \"input\",\n  pipeStrategy: \"all\",\n  dateStrategy: \"format:date-time\",\n  mapStrategy: \"entries\",\n  removeAdditionalStrategy: \"passthrough\",\n  allowedAdditionalProperties: true,\n  rejectedAdditionalProperties: false,\n  definitionPath: \"definitions\",\n  target: \"jsonSchema7\",\n  strictUnions: false,\n  definitions: {},\n  errorMessages: false,\n  markdownDescription: false,\n  patternStrategy: \"escape\",\n  applyRegexFlags: false,\n  emailStrategy: \"format:email\",\n  base64Strategy: \"contentEncoding:base64\",\n  nameStrategy: \"ref\",\n  openAiAnyTypeName: \"OpenAiAnyType\",\n};\n\nexport const getDefaultOptions = <Target extends Targets>(\n  options: Partial<Options<Target>> | string | undefined\n) =>\n  (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n      }\n    : {\n        ...defaultOptions,\n        ...options,\n      }) as Options<Target>;\n"],"names":["defaultOptions: Options","options: Partial<Options<Target>> | string | undefined"],"mappings":";;;;;;;;;AAgBA,MAAa,iBAAiB,OAC5B,oDACD;AAuDD,MAAaA,iBAA0B;IACrC,MAAM,KAAA;IACN,cAAc;IACd,UAAU;QAAC,GAAI;KAAA;IACf,gBAAgB;IAChB,cAAc;IACd,cAAc;IACd,aAAa;IACb,0BAA0B;IAC1B,6BAA6B;IAC7B,8BAA8B;IAC9B,gBAAgB;IAChB,QAAQ;IACR,cAAc;IACd,aAAa,CAAE;IACf,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,mBAAmB;AACpB;AAED,MAAa,oBAAoB,CAC/BC,UAEC,OAAO,YAAY,WAChB;QACE,GAAG,cAAA;QACH,MAAM;IACP,IACD;QACE,GAAG,cAAA;QACH,GAAG,OAAA;IACJ","debugId":null}},
    {"offset": {"line": 7945, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/Refs.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/Refs.ts"],"sourcesContent":["import { ZodTypeDef } from \"zod/v3\";\nimport { getDefaultOptions, Options, Targets } from \"./Options.js\";\nimport { JsonSchema7Type } from \"./parseTypes.js\";\n\nexport type Refs = {\n  seen: Map<ZodTypeDef, Seen>;\n  currentPath: string[];\n  propertyPath: string[] | undefined;\n  flags: { hasReferencedOpenAiAnyType: boolean };\n} & Options<Targets>;\n\nexport type Seen = {\n  def: ZodTypeDef;\n  path: string[];\n  jsonSchema: JsonSchema7Type | undefined;\n};\n\nexport const getRefs = (options?: string | Partial<Options<Targets>>): Refs => {\n  const _options = getDefaultOptions(options);\n  const currentPath =\n    _options.name !== undefined\n      ? [..._options.basePath, _options.definitionPath, _options.name]\n      : _options.basePath;\n  return {\n    ..._options,\n    flags: { hasReferencedOpenAiAnyType: false },\n    currentPath: currentPath,\n    propertyPath: undefined,\n    seen: new Map(\n      Object.entries(_options.definitions).map(([name, def]) => [\n        def._def,\n        {\n          def: def._def,\n          path: [..._options.basePath, _options.definitionPath, name],\n          // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n          jsonSchema: undefined,\n        },\n      ])\n    ),\n  };\n};\n"],"names":["options?: string | Partial<Options<Targets>>"],"mappings":";;;;;;;AAiBA,MAAa,UAAU,CAACA,YAAuD;IAC7E,MAAM,eAAW,+TAAA,EAAkB,QAAQ;IAC3C,MAAM,cACJ,SAAS,IAAA,KAAS,KAAA,IACd;WAAI,SAAS,QAAA;QAAU,SAAS,cAAA;QAAgB,SAAS,IAAA;KAAK,GAC9D,SAAS,QAAA;IACf,OAAO;QACL,GAAG,QAAA;QACH,OAAO;YAAE,4BAA4B;QAAO;QAC/B;QACb,cAAc,KAAA;QACd,MAAM,IAAI,IACR,OAAO,OAAA,CAAQ,SAAS,WAAA,CAAY,CAAC,GAAA,CAAI,CAAC,CAAC,MAAM,IAAI,GAAK;gBACxD,IAAI,IAAA;gBACJ;oBACE,KAAK,IAAI,IAAA;oBACT,MAAM;2BAAI,SAAS,QAAA;wBAAU,SAAS,cAAA;wBAAgB;qBAAK;oBAE3D,YAAY,KAAA;gBACb,CACF;aAAA,CAAC;IAEL;AACF","debugId":null}},
    {"offset": {"line": 7986, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/getRelativePath.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/getRelativePath.ts"],"sourcesContent":["\nexport const getRelativePath = (pathA: string[], pathB: string[]) => {\n  let i = 0;\n  for (; i < pathA.length && i < pathB.length; i++) {\n    if (pathA[i] !== pathB[i]) break;\n  }\n  return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\n\n"],"names":["pathA: string[]","pathB: string[]"],"mappings":";;;;;AACA,MAAa,kBAAkB,CAACA,OAAiBC,UAAoB;IACnE,IAAI,IAAI;IACR,MAAO,IAAI,MAAM,MAAA,IAAU,IAAI,MAAM,MAAA,EAAQ,IAC3C,IAAI,KAAA,CAAM,EAAA,KAAO,KAAA,CAAM,EAAA,CAAI,CAAA;IAE7B,OAAO;QAAA,CAAE,MAAM,MAAA,GAAS,CAAA,EAAG,QAAA,EAAU,EAAE;WAAG,MAAM,KAAA,CAAM,EAAE,AAAC;KAAA,CAAC,IAAA,CAAK,IAAI;AACpE","debugId":null}},
    {"offset": {"line": 8005, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/any.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/any.ts"],"sourcesContent":["import { Refs } from \"../Refs.js\";\nimport { getRelativePath } from \"../getRelativePath.js\";\n\nexport type JsonSchema7AnyType = { $ref?: string };\n\nexport function parseAnyDef(refs: Refs): JsonSchema7AnyType {\n  if (refs.target !== \"openAi\") {\n    return {};\n  }\n\n  const anyDefinitionPath = [\n    ...refs.basePath,\n    refs.definitionPath,\n    refs.openAiAnyTypeName,\n  ];\n\n  refs.flags.hasReferencedOpenAiAnyType = true;\n\n  return {\n    $ref:\n      refs.$refStrategy === \"relative\"\n        ? getRelativePath(anyDefinitionPath, refs.currentPath)\n        : anyDefinitionPath.join(\"/\"),\n  };\n}\n"],"names":["refs: Refs"],"mappings":";;;;;;;AAKA,SAAgB,YAAYA,IAAAA,EAAgC;IAC1D,IAAI,KAAK,MAAA,KAAW,SAClB,CAAA,OAAO,CAAE;IAGX,MAAM,oBAAoB;WACrB,KAAK,QAAA;QACR,KAAK,cAAA;QACL,KAAK,iBAAA;KACN;IAED,KAAK,KAAA,CAAM,0BAAA,GAA6B;IAExC,OAAO;QACL,MACE,KAAK,YAAA,KAAiB,iBAClB,qUAAA,EAAgB,mBAAmB,KAAK,WAAA,CAAY,GACpD,kBAAkB,IAAA,CAAK,IAAI;IAClC;AACF","debugId":null}},
    {"offset": {"line": 8030, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/errorMessages.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/errorMessages.ts"],"sourcesContent":["import { JsonSchema7TypeUnion } from \"./parseTypes.js\";\nimport { Refs } from \"./Refs.js\";\n\nexport type ErrorMessages<\n  T extends JsonSchema7TypeUnion | { format: string } | { pattern: string },\n  OmitProperties extends string = \"\",\n> = Partial<\n  Omit<{ [key in keyof T]: string }, OmitProperties | \"type\" | \"errorMessages\">\n>;\n\nexport function addErrorMessage<\n  T extends { errorMessage?: ErrorMessages<any> },\n>(res: T, key: keyof T, errorMessage: string | undefined, refs: Refs) {\n  if (!refs?.errorMessages) return;\n  if (errorMessage) {\n    res.errorMessage = {\n      ...res.errorMessage,\n      [key]: errorMessage,\n    };\n  }\n}\n\nexport function setResponseValueAndErrors<\n  Json7Type extends JsonSchema7TypeUnion & {\n    errorMessage?: ErrorMessages<Json7Type>;\n  },\n  Key extends keyof Omit<Json7Type, \"errorMessage\">,\n>(\n  res: Json7Type,\n  key: Key,\n  value: Json7Type[Key],\n  errorMessage: string | undefined,\n  refs: Refs,\n) {\n  res[key] = value;\n  addErrorMessage(res, key, errorMessage, refs);\n}\n"],"names":["res: T","key: keyof T","errorMessage: string | undefined","refs: Refs","res: Json7Type","key: Key","value: Json7Type[Key]"],"mappings":";;;;;;;AAUA,SAAgB,gBAEdA,GAAAA,EAAQC,GAAAA,EAAcC,YAAAA,EAAkCC,IAAAA,EAAY;IACpE,IAAI,CAAC,MAAM,cAAe,CAAA;IAC1B,IAAI,cACF,IAAI,YAAA,GAAe;QACjB,GAAG,IAAI,YAAA;SACN,IAAA,EAAM;IACR;AAEJ;AAED,SAAgB,0BAMdC,GAAAA,EACAC,GAAAA,EACAC,KAAAA,EACAJ,YAAAA,EACAC,IAAAA,EACA;IACA,GAAA,CAAI,IAAA,GAAO;IACX,gBAAgB,KAAK,KAAK,cAAc,KAAK;AAC9C","debugId":null}},
    {"offset": {"line": 8054, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/array.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/array.ts"],"sourcesContent":["import { ZodArrayDef, ZodFirstPartyTypeKind } from \"zod/v3\";\nimport { ErrorMessages, setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7ArrayType = {\n  type: \"array\";\n  items?: JsonSchema7Type;\n  minItems?: number;\n  maxItems?: number;\n  errorMessages?: ErrorMessages<JsonSchema7ArrayType, \"items\">;\n};\n\nexport function parseArrayDef(def: ZodArrayDef, refs: Refs) {\n  const res: JsonSchema7ArrayType = {\n    type: \"array\",\n  };\n  if (\n    def.type?._def &&\n    def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny\n  ) {\n    res.items = parseDef(def.type._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"items\"],\n    });\n  }\n\n  if (def.minLength) {\n    setResponseValueAndErrors(\n      res,\n      \"minItems\",\n      def.minLength.value,\n      def.minLength.message,\n      refs\n    );\n  }\n  if (def.maxLength) {\n    setResponseValueAndErrors(\n      res,\n      \"maxItems\",\n      def.maxLength.value,\n      def.maxLength.message,\n      refs\n    );\n  }\n  if (def.exactLength) {\n    setResponseValueAndErrors(\n      res,\n      \"minItems\",\n      def.exactLength.value,\n      def.exactLength.message,\n      refs\n    );\n    setResponseValueAndErrors(\n      res,\n      \"maxItems\",\n      def.exactLength.value,\n      def.exactLength.message,\n      refs\n    );\n  }\n  return res;\n}\n"],"names":["def: ZodArrayDef","refs: Refs","res: JsonSchema7ArrayType"],"mappings":";;;;;;;;;;;AAcA,SAAgB,cAAcA,GAAAA,EAAkBC,IAAAA,EAAY;IAC1D,MAAMC,MAA4B;QAChC,MAAM;IACP;IACD,IACE,IAAI,IAAA,EAAM,QACV,IAAI,IAAA,EAAM,MAAM,aAAa,+MAAA,CAAsB,MAAA,EAEnD,IAAI,KAAA,OAAQ,uTAAA,EAAS,IAAI,IAAA,CAAK,IAAA,EAAM;QAClC,GAAG,IAAA;QACH,aAAa,CAAC;eAAG,KAAK,WAAA;YAAa,OAAQ;SAAA;IAC5C,EAAC;IAGJ,IAAI,IAAI,SAAA,MACN,6UAAA,EACE,KACA,YACA,IAAI,SAAA,CAAU,KAAA,EACd,IAAI,SAAA,CAAU,OAAA,EACd,KACD;IAEH,IAAI,IAAI,SAAA,MACN,6UAAA,EACE,KACA,YACA,IAAI,SAAA,CAAU,KAAA,EACd,IAAI,SAAA,CAAU,OAAA,EACd,KACD;IAEH,IAAI,IAAI,WAAA,EAAa;YACnB,6UAAA,EACE,KACA,YACA,IAAI,WAAA,CAAY,KAAA,EAChB,IAAI,WAAA,CAAY,OAAA,EAChB,KACD;YACD,6UAAA,EACE,KACA,YACA,IAAI,WAAA,CAAY,KAAA,EAChB,IAAI,WAAA,CAAY,OAAA,EAChB,KACD;IACF;IACD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 8090, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/bigint.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/bigint.ts"],"sourcesContent":["import { ZodBigIntDef } from \"zod/v3\";\nimport { Refs } from \"../Refs.js\";\nimport { ErrorMessages, setResponseValueAndErrors } from \"../errorMessages.js\";\n\nexport type JsonSchema7BigintType = {\n  type: \"integer\";\n  format: \"int64\";\n  minimum?: BigInt;\n  exclusiveMinimum?: BigInt;\n  maximum?: BigInt;\n  exclusiveMaximum?: BigInt;\n  multipleOf?: BigInt;\n  errorMessage?: ErrorMessages<JsonSchema7BigintType>;\n};\n\nexport function parseBigintDef(\n  def: ZodBigIntDef,\n  refs: Refs\n): JsonSchema7BigintType {\n  const res: JsonSchema7BigintType = {\n    type: \"integer\",\n    format: \"int64\",\n  };\n\n  if (!def.checks) return res;\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"min\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(\n              res,\n              \"minimum\",\n              check.value,\n              check.message,\n              refs\n            );\n          } else {\n            setResponseValueAndErrors(\n              res,\n              \"exclusiveMinimum\",\n              check.value,\n              check.message,\n              refs\n            );\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMinimum = true as any;\n          }\n          setResponseValueAndErrors(\n            res,\n            \"minimum\",\n            check.value,\n            check.message,\n            refs\n          );\n        }\n        break;\n      case \"max\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(\n              res,\n              \"maximum\",\n              check.value,\n              check.message,\n              refs\n            );\n          } else {\n            setResponseValueAndErrors(\n              res,\n              \"exclusiveMaximum\",\n              check.value,\n              check.message,\n              refs\n            );\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMaximum = true as any;\n          }\n          setResponseValueAndErrors(\n            res,\n            \"maximum\",\n            check.value,\n            check.message,\n            refs\n          );\n        }\n        break;\n      case \"multipleOf\":\n        setResponseValueAndErrors(\n          res,\n          \"multipleOf\",\n          check.value,\n          check.message,\n          refs\n        );\n        break;\n    }\n  }\n  return res;\n}\n"],"names":["def: ZodBigIntDef","refs: Refs","res: JsonSchema7BigintType"],"mappings":";;;;;;;AAeA,SAAgB,eACdA,GAAAA,EACAC,IAAAA,EACuB;IACvB,MAAMC,MAA6B;QACjC,MAAM;QACN,QAAQ;IACT;IAED,IAAI,CAAC,IAAI,MAAA,CAAQ,CAAA,OAAO;IAExB,KAAK,MAAM,SAAS,IAAI,MAAA,CACtB,OAAQ,MAAM,IAAA,EAAd;QACE,KAAK;YACH,IAAI,KAAK,MAAA,KAAW,cAClB,CAAA,IAAI,MAAM,SAAA,MACR,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;qBAED,6UAAA,EACE,KACA,oBACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;iBAEE;gBACL,IAAI,CAAC,MAAM,SAAA,EACT,IAAI,gBAAA,GAAmB;oBAEzB,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACF;YACD;QACF,KAAK;YACH,IAAI,KAAK,MAAA,KAAW,cAClB,CAAA,IAAI,MAAM,SAAA,MACR,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;qBAED,6UAAA,EACE,KACA,oBACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;iBAEE;gBACL,IAAI,CAAC,MAAM,SAAA,EACT,IAAI,gBAAA,GAAmB;oBAEzB,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACF;YACD;QACF,KAAK;gBACH,6UAAA,EACE,KACA,cACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACD;IACH;IAEH,OAAO;AACR","debugId":null}},
    {"offset": {"line": 8132, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/boolean.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/boolean.ts"],"sourcesContent":["export type JsonSchema7BooleanType = {\n  type: \"boolean\";\n};\n\nexport function parseBooleanDef(): JsonSchema7BooleanType {\n  return {\n    type: \"boolean\",\n  };\n}\n"],"names":[],"mappings":";;;;;AAIA,SAAgB,kBAA0C;IACxD,OAAO;QACL,MAAM;IACP;AACF","debugId":null}},
    {"offset": {"line": 8148, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/branded.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/branded.ts"],"sourcesContent":["import { ZodBrandedDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport function parseBrandedDef(_def: ZodBrandedDef<any>, refs: Refs) {\n  return parseDef(_def.type._def, refs);\n}\n"],"names":["_def: ZodBrandedDef<any>","refs: Refs"],"mappings":";;;;;;;AAIA,SAAgB,gBAAgBA,IAAAA,EAA0BC,IAAAA,EAAY;IACpE,WAAO,uTAAA,EAAS,KAAK,IAAA,CAAK,IAAA,EAAM,KAAK;AACtC","debugId":null}},
    {"offset": {"line": 8164, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/catch.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/catch.ts"],"sourcesContent":["import { ZodCatchDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport const parseCatchDef = (def: ZodCatchDef<any>, refs: Refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n"],"names":["def: ZodCatchDef<any>","refs: Refs"],"mappings":";;;;;;;AAIA,MAAa,gBAAgB,CAACA,KAAuBC,SAAe;IAClE,WAAO,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM,KAAK;AAC1C","debugId":null}},
    {"offset": {"line": 8180, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/date.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/date.ts"],"sourcesContent":["import { ZodDateDef } from \"zod/v3\";\nimport { Refs } from \"../Refs.js\";\nimport { ErrorMessages, setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { JsonSchema7NumberType } from \"./number.js\";\nimport { DateStrategy } from \"../Options.js\";\n\nexport type JsonSchema7DateType =\n  | {\n      type: \"integer\" | \"string\";\n      format: \"unix-time\" | \"date-time\" | \"date\";\n      minimum?: number;\n      maximum?: number;\n      errorMessage?: ErrorMessages<JsonSchema7NumberType>;\n    }\n  | {\n      anyOf: JsonSchema7DateType[];\n    };\n\nexport function parseDateDef(\n  def: ZodDateDef,\n  refs: Refs,\n  overrideDateStrategy?: DateStrategy\n): JsonSchema7DateType {\n  const strategy = overrideDateStrategy ?? refs.dateStrategy;\n\n  if (Array.isArray(strategy)) {\n    return {\n      anyOf: strategy.map((item) => parseDateDef(def, refs, item)),\n    };\n  }\n\n  switch (strategy) {\n    case \"string\":\n    case \"format:date-time\":\n      return {\n        type: \"string\",\n        format: \"date-time\",\n      };\n    case \"format:date\":\n      return {\n        type: \"string\",\n        format: \"date\",\n      };\n    case \"integer\":\n      return integerDateParser(def, refs);\n  }\n}\n\nconst integerDateParser = (def: ZodDateDef, refs: Refs) => {\n  const res: JsonSchema7DateType = {\n    type: \"integer\",\n    format: \"unix-time\",\n  };\n\n  if (refs.target === \"openApi3\") {\n    return res;\n  }\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"min\":\n        setResponseValueAndErrors(\n          res,\n          \"minimum\",\n          check.value, // This is in milliseconds\n          check.message,\n          refs\n        );\n        break;\n      case \"max\":\n        setResponseValueAndErrors(\n          res,\n          \"maximum\",\n          check.value, // This is in milliseconds\n          check.message,\n          refs\n        );\n        break;\n    }\n  }\n\n  return res;\n};\n"],"names":["def: ZodDateDef","refs: Refs","overrideDateStrategy?: DateStrategy","res: JsonSchema7DateType"],"mappings":";;;;;;;AAkBA,SAAgB,aACdA,GAAAA,EACAC,IAAAA,EACAC,oBAAAA,EACqB;IACrB,MAAM,WAAW,wBAAwB,KAAK,YAAA;IAE9C,IAAI,MAAM,OAAA,CAAQ,SAAS,CACzB,CAAA,OAAO;QACL,OAAO,SAAS,GAAA,CAAI,CAAC,OAAS,aAAa,KAAK,MAAM,KAAK,CAAC;IAC7D;IAGH,OAAQ,UAAR;QACE,KAAK;QACL,KAAK,mBACH;YAAA,OAAO;gBACL,MAAM;gBACN,QAAQ;YACT;QACH,KAAK,cACH;YAAA,OAAO;gBACL,MAAM;gBACN,QAAQ;YACT;QACH,KAAK,UACH;YAAA,OAAO,kBAAkB,KAAK,KAAK;IACtC;AACF;AAED,MAAM,oBAAoB,CAACF,KAAiBC,SAAe;IACzD,MAAME,MAA2B;QAC/B,MAAM;QACN,QAAQ;IACT;IAED,IAAI,KAAK,MAAA,KAAW,WAClB,CAAA,OAAO;IAGT,KAAK,MAAM,SAAS,IAAI,MAAA,CACtB,OAAQ,MAAM,IAAA,EAAd;QACE,KAAK;gBACH,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACD;QACF,KAAK;gBACH,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACD;IACH;IAGH,OAAO;AACR","debugId":null}},
    {"offset": {"line": 8230, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/default.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/default.ts"],"sourcesContent":["import { ZodDefaultDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport function parseDefaultDef(\n  _def: ZodDefaultDef,\n  refs: Refs\n): JsonSchema7Type & { default: any } {\n  return {\n    ...parseDef(_def.innerType._def, refs),\n    default: _def.defaultValue(),\n  };\n}\n"],"names":["_def: ZodDefaultDef","refs: Refs"],"mappings":";;;;;;;AAKA,SAAgB,gBACdA,IAAAA,EACAC,IAAAA,EACoC;IACpC,OAAO;QACL,OAAG,uTAAA,EAAS,KAAK,SAAA,CAAU,IAAA,EAAM,KAAK;QACtC,SAAS,KAAK,YAAA,EAAc;IAC7B;AACF","debugId":null}},
    {"offset": {"line": 8249, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/effects.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/effects.ts"],"sourcesContent":["import { ZodEffectsDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { parseAnyDef } from \"./any.js\";\n\nexport function parseEffectsDef(\n  _def: ZodEffectsDef,\n  refs: Refs\n): JsonSchema7Type | undefined {\n  return refs.effectStrategy === \"input\"\n    ? parseDef(_def.schema._def, refs)\n    : parseAnyDef(refs);\n}\n"],"names":["_def: ZodEffectsDef","refs: Refs"],"mappings":";;;;;;;;;AAMA,SAAgB,gBACdA,IAAAA,EACAC,IAAAA,EAC6B;IAC7B,OAAO,KAAK,cAAA,KAAmB,cAC3B,uTAAA,EAAS,KAAK,MAAA,CAAO,IAAA,EAAM,KAAK,OAChC,gUAAA,EAAY,KAAK;AACtB","debugId":null}},
    {"offset": {"line": 8267, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/enum.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/enum.ts"],"sourcesContent":["import { ZodEnumDef } from \"zod/v3\";\n\nexport type JsonSchema7EnumType = {\n  type: \"string\";\n  enum: string[];\n};\n\nexport function parseEnumDef(def: ZodEnumDef): JsonSchema7EnumType {\n  return {\n    type: \"string\",\n    enum: Array.from(def.values),\n  };\n}\n"],"names":["def: ZodEnumDef"],"mappings":";;;;;AAOA,SAAgB,aAAaA,GAAAA,EAAsC;IACjE,OAAO;QACL,MAAM;QACN,MAAM,MAAM,IAAA,CAAK,IAAI,MAAA,CAAO;IAC7B;AACF","debugId":null}},
    {"offset": {"line": 8284, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/intersection.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/intersection.ts"],"sourcesContent":["import { ZodIntersectionDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7StringType } from \"./string.js\";\n\nexport type JsonSchema7AllOfType = {\n  allOf: JsonSchema7Type[];\n  unevaluatedProperties?: boolean;\n};\n\nconst isJsonSchema7AllOfType = (\n  type: JsonSchema7Type | JsonSchema7StringType\n): type is JsonSchema7AllOfType => {\n  if (\"type\" in type && type.type === \"string\") return false;\n  return \"allOf\" in type;\n};\n\nexport function parseIntersectionDef(\n  def: ZodIntersectionDef,\n  refs: Refs\n): JsonSchema7AllOfType | JsonSchema7Type | undefined {\n  const allOf = [\n    parseDef(def.left._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    }),\n    parseDef(def.right._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n    }),\n  ].filter((x): x is JsonSchema7Type => !!x);\n\n  let unevaluatedProperties:\n    | Pick<JsonSchema7AllOfType, \"unevaluatedProperties\">\n    | undefined =\n    refs.target === \"jsonSchema2019-09\"\n      ? { unevaluatedProperties: false }\n      : undefined;\n\n  const mergedAllOf: JsonSchema7Type[] = [];\n  // If either of the schemas is an allOf, merge them into a single allOf\n  allOf.forEach((schema) => {\n    if (isJsonSchema7AllOfType(schema)) {\n      mergedAllOf.push(...schema.allOf);\n      if (schema.unevaluatedProperties === undefined) {\n        // If one of the schemas has no unevaluatedProperties set,\n        // the merged schema should also have no unevaluatedProperties set\n        unevaluatedProperties = undefined;\n      }\n    } else {\n      let nestedSchema: JsonSchema7Type = schema;\n      if (\n        \"additionalProperties\" in schema &&\n        schema.additionalProperties === false\n      ) {\n        const { additionalProperties, ...rest } = schema;\n        nestedSchema = rest;\n      } else {\n        // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n        unevaluatedProperties = undefined;\n      }\n      mergedAllOf.push(nestedSchema);\n    }\n  });\n  return mergedAllOf.length\n    ? {\n        allOf: mergedAllOf,\n        ...unevaluatedProperties,\n      }\n    : undefined;\n}\n"],"names":["type: JsonSchema7Type | JsonSchema7StringType","def: ZodIntersectionDef","refs: Refs","unevaluatedProperties:\n    | Pick<JsonSchema7AllOfType, \"unevaluatedProperties\">\n    | undefined","mergedAllOf: JsonSchema7Type[]","nestedSchema: JsonSchema7Type"],"mappings":";;;;;;;AAWA,MAAM,yBAAyB,CAC7BA,SACiC;IACjC,IAAI,UAAU,QAAQ,KAAK,IAAA,KAAS,SAAU,CAAA,OAAO;IACrD,OAAO,WAAW;AACnB;AAED,SAAgB,qBACdC,GAAAA,EACAC,IAAAA,EACoD;IACpD,MAAM,QAAQ;YACZ,uTAAA,EAAS,IAAI,IAAA,CAAK,IAAA,EAAM;YACtB,GAAG,IAAA;YACH,aAAa;mBAAI,KAAK,WAAA;gBAAa;gBAAS;aAAI;QACjD,EAAC;YACF,uTAAA,EAAS,IAAI,KAAA,CAAM,IAAA,EAAM;YACvB,GAAG,IAAA;YACH,aAAa;mBAAI,KAAK,WAAA;gBAAa;gBAAS;aAAI;QACjD,EAAC,AACH;KAAA,CAAC,MAAA,CAAO,CAAC,IAA4B,CAAC,CAAC,EAAE;IAE1C,IAAIC,wBAGF,KAAK,MAAA,KAAW,sBACZ;QAAE,uBAAuB;IAAO,IAChC,KAAA;IAEN,MAAMC,cAAiC,CAAE,CAAA;IAEzC,MAAM,OAAA,CAAQ,CAAC,WAAW;QACxB,IAAI,uBAAuB,OAAO,EAAE;YAClC,YAAY,IAAA,CAAK,GAAG,OAAO,KAAA,CAAM;YACjC,IAAI,OAAO,qBAAA,KAA0B,KAAA,GAGnC,wBAAwB,KAAA;QAE3B,OAAM;YACL,IAAIC,eAAgC;YACpC,IACE,0BAA0B,UAC1B,OAAO,oBAAA,KAAyB,OAChC;gBACA,MAAM,EAAE,oBAAA,EAAsB,GAAG,MAAM,GAAG;gBAC1C,eAAe;YAChB,OAEC,wBAAwB,KAAA;YAE1B,YAAY,IAAA,CAAK,aAAa;QAC/B;IACF,EAAC;IACF,OAAO,YAAY,MAAA,GACf;QACE,OAAO;QACP,GAAG,qBAAA;IACJ,IACD,KAAA;AACL","debugId":null}},
    {"offset": {"line": 8342, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/literal.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/literal.ts"],"sourcesContent":["import { ZodLiteralDef } from \"zod/v3\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7LiteralType =\n  | {\n      type: \"string\" | \"number\" | \"integer\" | \"boolean\";\n      const: string | number | boolean;\n    }\n  | {\n      type: \"object\" | \"array\";\n    };\n\nexport function parseLiteralDef(\n  def: ZodLiteralDef,\n  refs: Refs\n): JsonSchema7LiteralType {\n  const parsedType = typeof def.value;\n  if (\n    parsedType !== \"bigint\" &&\n    parsedType !== \"number\" &&\n    parsedType !== \"boolean\" &&\n    parsedType !== \"string\"\n  ) {\n    return {\n      type: Array.isArray(def.value) ? \"array\" : \"object\",\n    };\n  }\n\n  if (refs.target === \"openApi3\") {\n    return {\n      type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n      enum: [def.value],\n    } as any;\n  }\n\n  return {\n    type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n    const: def.value,\n  };\n}\n"],"names":["def: ZodLiteralDef","refs: Refs"],"mappings":";;;;;AAYA,SAAgB,gBACdA,GAAAA,EACAC,IAAAA,EACwB;IACxB,MAAM,aAAa,OAAO,IAAI,KAAA;IAC9B,IACE,eAAe,YACf,eAAe,YACf,eAAe,aACf,eAAe,SAEf,CAAA,OAAO;QACL,MAAM,MAAM,OAAA,CAAQ,IAAI,KAAA,CAAM,GAAG,UAAU;IAC5C;IAGH,IAAI,KAAK,MAAA,KAAW,WAClB,CAAA,OAAO;QACL,MAAM,eAAe,WAAW,YAAY;QAC5C,MAAM;YAAC,IAAI,KAAM;SAAA;IAClB;IAGH,OAAO;QACL,MAAM,eAAe,WAAW,YAAY;QAC5C,OAAO,IAAI,KAAA;IACZ;AACF","debugId":null}},
    {"offset": {"line": 8369, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/string.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/string.ts"],"sourcesContent":["import { ZodStringDef } from \"zod/v3\";\nimport { ErrorMessages, setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { Refs } from \"../Refs.js\";\n\nlet emojiRegex: RegExp | undefined = undefined;\n\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n  /**\n   * `c` was changed to `[cC]` to replicate /i flag\n   */\n  cuid: /^[cC][^\\s-]{8,}$/,\n  cuid2: /^[0-9a-z]+$/,\n  ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n  /**\n   * `a-z` was added to replicate /i flag\n   */\n  email:\n    /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n  /**\n   * Constructed a valid Unicode RegExp\n   *\n   * Lazily instantiate since this type of regex isn't supported\n   * in all envs (e.g. React Native).\n   *\n   * See:\n   * https://github.com/colinhacks/zod/issues/2433\n   * Fix in Zod:\n   * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n   */\n  emoji: () => {\n    if (emojiRegex === undefined) {\n      emojiRegex = RegExp(\n        \"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\",\n        \"u\"\n      );\n    }\n    return emojiRegex;\n  },\n  /**\n   * Unused\n   */\n  uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n  /**\n   * Unused\n   */\n  ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n  ipv4Cidr:\n    /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n  /**\n   * Unused\n   */\n  ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n  ipv6Cidr:\n    /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n  base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n  base64url:\n    /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n  nanoid: /^[a-zA-Z0-9_-]{21}$/,\n  jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n} as const;\n\nexport type JsonSchema7StringType = {\n  type: \"string\";\n  minLength?: number;\n  maxLength?: number;\n  format?:\n    | \"email\"\n    | \"idn-email\"\n    | \"uri\"\n    | \"uuid\"\n    | \"date-time\"\n    | \"ipv4\"\n    | \"ipv6\"\n    | \"date\"\n    | \"time\"\n    | \"duration\";\n  pattern?: string;\n  allOf?: {\n    pattern: string;\n    errorMessage?: ErrorMessages<{ pattern: string }>;\n  }[];\n  anyOf?: {\n    format: string;\n    errorMessage?: ErrorMessages<{ format: string }>;\n  }[];\n  errorMessage?: ErrorMessages<JsonSchema7StringType>;\n  contentEncoding?: string;\n};\n\nexport function parseStringDef(\n  def: ZodStringDef,\n  refs: Refs\n): JsonSchema7StringType {\n  const res: JsonSchema7StringType = {\n    type: \"string\",\n  };\n\n  if (def.checks) {\n    for (const check of def.checks) {\n      switch (check.kind) {\n        case \"min\":\n          setResponseValueAndErrors(\n            res,\n            \"minLength\",\n            typeof res.minLength === \"number\"\n              ? Math.max(res.minLength, check.value)\n              : check.value,\n            check.message,\n            refs\n          );\n          break;\n        case \"max\":\n          setResponseValueAndErrors(\n            res,\n            \"maxLength\",\n            typeof res.maxLength === \"number\"\n              ? Math.min(res.maxLength, check.value)\n              : check.value,\n            check.message,\n            refs\n          );\n\n          break;\n        case \"email\":\n          switch (refs.emailStrategy) {\n            case \"format:email\":\n              addFormat(res, \"email\", check.message, refs);\n              break;\n            case \"format:idn-email\":\n              addFormat(res, \"idn-email\", check.message, refs);\n              break;\n            case \"pattern:zod\":\n              addPattern(res, zodPatterns.email, check.message, refs);\n              break;\n          }\n\n          break;\n        case \"url\":\n          addFormat(res, \"uri\", check.message, refs);\n          break;\n        case \"uuid\":\n          addFormat(res, \"uuid\", check.message, refs);\n          break;\n        case \"regex\":\n          addPattern(res, check.regex, check.message, refs);\n          break;\n        case \"cuid\":\n          addPattern(res, zodPatterns.cuid, check.message, refs);\n          break;\n        case \"cuid2\":\n          addPattern(res, zodPatterns.cuid2, check.message, refs);\n          break;\n        case \"startsWith\":\n          addPattern(\n            res,\n            RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`),\n            check.message,\n            refs\n          );\n          break;\n        case \"endsWith\":\n          addPattern(\n            res,\n            RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`),\n            check.message,\n            refs\n          );\n          break;\n        case \"datetime\":\n          addFormat(res, \"date-time\", check.message, refs);\n          break;\n        case \"date\":\n          addFormat(res, \"date\", check.message, refs);\n          break;\n        case \"time\":\n          addFormat(res, \"time\", check.message, refs);\n          break;\n        case \"duration\":\n          addFormat(res, \"duration\", check.message, refs);\n          break;\n        case \"length\":\n          setResponseValueAndErrors(\n            res,\n            \"minLength\",\n            typeof res.minLength === \"number\"\n              ? Math.max(res.minLength, check.value)\n              : check.value,\n            check.message,\n            refs\n          );\n          setResponseValueAndErrors(\n            res,\n            \"maxLength\",\n            typeof res.maxLength === \"number\"\n              ? Math.min(res.maxLength, check.value)\n              : check.value,\n            check.message,\n            refs\n          );\n          break;\n        case \"includes\": {\n          addPattern(\n            res,\n            RegExp(escapeLiteralCheckValue(check.value, refs)),\n            check.message,\n            refs\n          );\n          break;\n        }\n        case \"ip\": {\n          if (check.version !== \"v6\") {\n            addFormat(res, \"ipv4\", check.message, refs);\n          }\n          if (check.version !== \"v4\") {\n            addFormat(res, \"ipv6\", check.message, refs);\n          }\n          break;\n        }\n        case \"base64url\":\n          addPattern(res, zodPatterns.base64url, check.message, refs);\n          break;\n        case \"jwt\":\n          addPattern(res, zodPatterns.jwt, check.message, refs);\n          break;\n        case \"cidr\": {\n          if (check.version !== \"v6\") {\n            addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n          }\n          if (check.version !== \"v4\") {\n            addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n          }\n          break;\n        }\n        case \"emoji\":\n          addPattern(res, zodPatterns.emoji(), check.message, refs);\n          break;\n        case \"ulid\": {\n          addPattern(res, zodPatterns.ulid, check.message, refs);\n          break;\n        }\n        case \"base64\": {\n          switch (refs.base64Strategy) {\n            case \"format:binary\": {\n              addFormat(res, \"binary\" as any, check.message, refs);\n              break;\n            }\n\n            case \"contentEncoding:base64\": {\n              setResponseValueAndErrors(\n                res,\n                \"contentEncoding\",\n                \"base64\",\n                check.message,\n                refs\n              );\n              break;\n            }\n\n            case \"pattern:zod\": {\n              addPattern(res, zodPatterns.base64, check.message, refs);\n              break;\n            }\n          }\n          break;\n        }\n        case \"nanoid\": {\n          addPattern(res, zodPatterns.nanoid, check.message, refs);\n          break;\n        }\n        case \"toLowerCase\":\n        case \"toUpperCase\":\n        case \"trim\":\n          break;\n        default:\n          /* c8 ignore next */\n          ((_: never) => {})(check);\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction escapeLiteralCheckValue(literal: string, refs: Refs): string {\n  return refs.patternStrategy === \"escape\"\n    ? escapeNonAlphaNumeric(literal)\n    : literal;\n}\n\nconst ALPHA_NUMERIC = new Set(\n  \"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\"\n);\n\nfunction escapeNonAlphaNumeric(source: string) {\n  let result = \"\";\n\n  for (let i = 0; i < source.length; i++) {\n    if (!ALPHA_NUMERIC.has(source[i])) {\n      result += \"\\\\\";\n    }\n\n    result += source[i];\n  }\n\n  return result;\n}\n\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(\n  schema: JsonSchema7StringType,\n  value: Required<JsonSchema7StringType>[\"format\"],\n  message: string | undefined,\n  refs: Refs\n) {\n  if (schema.format || schema.anyOf?.some((x) => x.format)) {\n    if (!schema.anyOf) {\n      schema.anyOf = [];\n    }\n\n    if (schema.format) {\n      schema.anyOf!.push({\n        format: schema.format,\n        ...(schema.errorMessage &&\n          refs.errorMessages && {\n            errorMessage: { format: schema.errorMessage.format },\n          }),\n      });\n      delete schema.format;\n      if (schema.errorMessage) {\n        delete schema.errorMessage.format;\n        if (Object.keys(schema.errorMessage).length === 0) {\n          delete schema.errorMessage;\n        }\n      }\n    }\n\n    schema.anyOf!.push({\n      format: value,\n      ...(message &&\n        refs.errorMessages && { errorMessage: { format: message } }),\n    });\n  } else {\n    setResponseValueAndErrors(schema, \"format\", value, message, refs);\n  }\n}\n\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(\n  schema: JsonSchema7StringType,\n  regex: RegExp,\n  message: string | undefined,\n  refs: Refs\n) {\n  if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n    if (!schema.allOf) {\n      schema.allOf = [];\n    }\n\n    if (schema.pattern) {\n      schema.allOf!.push({\n        pattern: schema.pattern,\n        ...(schema.errorMessage &&\n          refs.errorMessages && {\n            errorMessage: { pattern: schema.errorMessage.pattern },\n          }),\n      });\n      delete schema.pattern;\n      if (schema.errorMessage) {\n        delete schema.errorMessage.pattern;\n        if (Object.keys(schema.errorMessage).length === 0) {\n          delete schema.errorMessage;\n        }\n      }\n    }\n\n    schema.allOf!.push({\n      pattern: stringifyRegExpWithFlags(regex, refs),\n      ...(message &&\n        refs.errorMessages && { errorMessage: { pattern: message } }),\n    });\n  } else {\n    setResponseValueAndErrors(\n      schema,\n      \"pattern\",\n      stringifyRegExpWithFlags(regex, refs),\n      message,\n      refs\n    );\n  }\n}\n\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex: RegExp, refs: Refs): string {\n  if (!refs.applyRegexFlags || !regex.flags) {\n    return regex.source;\n  }\n\n  // Currently handled flags\n  const flags = {\n    i: regex.flags.includes(\"i\"), // Case-insensitive\n    m: regex.flags.includes(\"m\"), // `^` and `$` matches adjacent to newline characters\n    s: regex.flags.includes(\"s\"), // `.` matches newlines\n  };\n\n  // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n  const source = flags.i ? regex.source.toLowerCase() : regex.source;\n  let pattern = \"\";\n  let isEscaped = false;\n  let inCharGroup = false;\n  let inCharRange = false;\n\n  for (let i = 0; i < source.length; i++) {\n    if (isEscaped) {\n      pattern += source[i];\n      isEscaped = false;\n      continue;\n    }\n\n    if (flags.i) {\n      if (inCharGroup) {\n        if (source[i].match(/[a-z]/)) {\n          if (inCharRange) {\n            pattern += source[i];\n            pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n            inCharRange = false;\n          } else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n            pattern += source[i];\n            inCharRange = true;\n          } else {\n            pattern += `${source[i]}${source[i].toUpperCase()}`;\n          }\n          continue;\n        }\n      } else if (source[i].match(/[a-z]/)) {\n        pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n        continue;\n      }\n    }\n\n    if (flags.m) {\n      if (source[i] === \"^\") {\n        pattern += `(^|(?<=[\\r\\n]))`;\n        continue;\n      } else if (source[i] === \"$\") {\n        pattern += `($|(?=[\\r\\n]))`;\n        continue;\n      }\n    }\n\n    if (flags.s && source[i] === \".\") {\n      pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n      continue;\n    }\n\n    pattern += source[i];\n    if (source[i] === \"\\\\\") {\n      isEscaped = true;\n    } else if (inCharGroup && source[i] === \"]\") {\n      inCharGroup = false;\n    } else if (!inCharGroup && source[i] === \"[\") {\n      inCharGroup = true;\n    }\n  }\n\n  try {\n    new RegExp(pattern);\n  } catch {\n    console.warn(\n      `Could not convert regex pattern at ${refs.currentPath.join(\n        \"/\"\n      )} to a flag-independent form! Falling back to the flag-ignorant source`\n    );\n    return regex.source;\n  }\n\n  return pattern;\n}\n"],"names":["emojiRegex: RegExp | undefined","def: ZodStringDef","refs: Refs","res: JsonSchema7StringType","_: never","literal: string","source: string","schema: JsonSchema7StringType","value: Required<JsonSchema7StringType>[\"format\"]","message: string | undefined","regex: RegExp"],"mappings":"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","debugId":null}},
    {"offset": {"line": 8648, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/record.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/record.ts"],"sourcesContent":["import {\n  ZodFirstPartyTypeKind,\n  ZodMapDef,\n  ZodRecordDef,\n  ZodTypeAny,\n} from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7EnumType } from \"./enum.js\";\nimport { JsonSchema7ObjectType } from \"./object.js\";\nimport { JsonSchema7StringType, parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\n\ntype JsonSchema7RecordPropertyNamesType =\n  | Omit<JsonSchema7StringType, \"type\">\n  | Omit<JsonSchema7EnumType, \"type\">;\n\nexport type JsonSchema7RecordType = {\n  type: \"object\";\n  additionalProperties?: JsonSchema7Type | true;\n  propertyNames?: JsonSchema7RecordPropertyNamesType;\n};\n\nexport function parseRecordDef(\n  def: ZodRecordDef<ZodTypeAny, ZodTypeAny> | ZodMapDef,\n  refs: Refs\n): JsonSchema7RecordType {\n  if (refs.target === \"openAi\") {\n    console.warn(\n      \"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\"\n    );\n  }\n\n  if (\n    refs.target === \"openApi3\" &&\n    def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum\n  ) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce(\n        (acc: Record<string, JsonSchema7Type>, key: string) => ({\n          ...acc,\n          [key]:\n            parseDef(def.valueType._def, {\n              ...refs,\n              currentPath: [...refs.currentPath, \"properties\", key],\n            }) ?? parseAnyDef(refs),\n        }),\n        {}\n      ),\n      additionalProperties: refs.rejectedAdditionalProperties,\n    } satisfies JsonSchema7ObjectType as any;\n  }\n\n  const schema: JsonSchema7RecordType = {\n    type: \"object\",\n    additionalProperties:\n      parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"additionalProperties\"],\n      }) ?? refs.allowedAdditionalProperties,\n  };\n\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n\n  if (\n    def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n    def.keyType._def.checks?.length\n  ) {\n    const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n\n    return {\n      ...schema,\n      propertyNames: keyType,\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values,\n      },\n    };\n  } else if (\n    def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n    def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n    def.keyType._def.type._def.checks?.length\n  ) {\n    const { type, ...keyType } = parseBrandedDef(\n      def.keyType._def,\n      refs\n    ) as JsonSchema7StringType;\n\n    return {\n      ...schema,\n      propertyNames: keyType,\n    };\n  }\n\n  return schema;\n}\n"],"names":["def: ZodRecordDef<ZodTypeAny, ZodTypeAny> | ZodMapDef","refs: Refs","acc: Record<string, JsonSchema7Type>","key: string","schema: JsonSchema7RecordType"],"mappings":";;;;;;;;;;;;;;;AAyBA,SAAgB,eACdA,GAAAA,EACAC,IAAAA,EACuB;IACvB,IAAI,KAAK,MAAA,KAAW,UAClB,QAAQ,IAAA,CACN,+FACD;IAGH,IACE,KAAK,MAAA,KAAW,cAChB,IAAI,OAAA,EAAS,KAAK,aAAa,+MAAA,CAAsB,OAAA,CAErD,CAAA,OAAO;QACL,MAAM;QACN,UAAU,IAAI,OAAA,CAAQ,IAAA,CAAK,MAAA;QAC3B,YAAY,IAAI,OAAA,CAAQ,IAAA,CAAK,MAAA,CAAO,MAAA,CAClC,CAACC,KAAsCC,MAAAA,CAAiB;gBACtD,GAAG,GAAA;iBACF,IAAA,MACC,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;oBAC3B,GAAG,IAAA;oBACH,aAAa;2BAAI,KAAK,WAAA;wBAAa;wBAAc;qBAAI;gBACtD,EAAC,QAAI,gUAAA,EAAY,KAAK;YAC1B,CAAA,GACD,CAAE,EACH;QACD,sBAAsB,KAAK,4BAAA;IAC5B;IAGH,MAAMC,SAAgC;QACpC,MAAM;QACN,0BACE,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;YAC3B,GAAG,IAAA;YACH,aAAa,CAAC;mBAAG,KAAK,WAAA;gBAAa,sBAAuB;aAAA;QAC3D,EAAC,IAAI,KAAK,2BAAA;IACd;IAED,IAAI,KAAK,MAAA,KAAW,WAClB,CAAA,OAAO;IAGT,IACE,IAAI,OAAA,EAAS,KAAK,aAAa,+MAAA,CAAsB,SAAA,IACrD,IAAI,OAAA,CAAQ,IAAA,CAAK,MAAA,EAAQ,QACzB;QACA,MAAM,EAAE,IAAA,EAAM,GAAG,SAAS,OAAG,sUAAA,EAAe,IAAI,OAAA,CAAQ,IAAA,EAAM,KAAK;QAEnE,OAAO;YACL,GAAG,MAAA;YACH,eAAe;QAChB;IACF,OAAA,IAAU,IAAI,OAAA,EAAS,KAAK,aAAa,+MAAA,CAAsB,OAAA,CAC9D,CAAA,OAAO;QACL,GAAG,MAAA;QACH,eAAe;YACb,MAAM,IAAI,OAAA,CAAQ,IAAA,CAAK,MAAA;QACxB;IACF;aAED,IAAI,OAAA,EAAS,KAAK,aAAa,+MAAA,CAAsB,UAAA,IACrD,IAAI,OAAA,CAAQ,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,QAAA,KAAa,+MAAA,CAAsB,SAAA,IAC9D,IAAI,OAAA,CAAQ,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,MAAA,EAAQ,QACnC;QACA,MAAM,EAAE,IAAA,EAAM,GAAG,SAAS,OAAG,wUAAA,EAC3B,IAAI,OAAA,CAAQ,IAAA,EACZ,KACD;QAED,OAAO;YACL,GAAG,MAAA;YACH,eAAe;QAChB;IACF;IAED,OAAO;AACR","debugId":null}},
    {"offset": {"line": 8719, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/map.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/map.ts"],"sourcesContent":["import { ZodMapDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7RecordType, parseRecordDef } from \"./record.js\";\nimport { parseAnyDef } from \"./any.js\";\n\nexport type JsonSchema7MapType = {\n  type: \"array\";\n  maxItems: 125;\n  items: {\n    type: \"array\";\n    items: [JsonSchema7Type, JsonSchema7Type];\n    minItems: 2;\n    maxItems: 2;\n  };\n};\n\nexport function parseMapDef(\n  def: ZodMapDef,\n  refs: Refs\n): JsonSchema7MapType | JsonSchema7RecordType {\n  if (refs.mapStrategy === \"record\") {\n    return parseRecordDef(def, refs);\n  }\n\n  const keys =\n    parseDef(def.keyType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || parseAnyDef(refs);\n  const values =\n    parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || parseAnyDef(refs);\n  return {\n    type: \"array\",\n    maxItems: 125,\n    items: {\n      type: \"array\",\n      items: [keys, values],\n      minItems: 2,\n      maxItems: 2,\n    },\n  };\n}\n"],"names":["def: ZodMapDef","refs: Refs"],"mappings":";;;;;;;;;;;AAkBA,SAAgB,YACdA,GAAAA,EACAC,IAAAA,EAC4C;IAC5C,IAAI,KAAK,WAAA,KAAgB,SACvB,CAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;IAGlC,MAAM,WACJ,uTAAA,EAAS,IAAI,OAAA,CAAQ,IAAA,EAAM;QACzB,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS;YAAS;SAAI;IAC1D,EAAC,QAAI,gUAAA,EAAY,KAAK;IACzB,MAAM,aACJ,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;QAC3B,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS;YAAS;SAAI;IAC1D,EAAC,QAAI,gUAAA,EAAY,KAAK;IACzB,OAAO;QACL,MAAM;QACN,UAAU;QACV,OAAO;YACL,MAAM;YACN,OAAO;gBAAC;gBAAM,MAAO;aAAA;YACrB,UAAU;YACV,UAAU;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 8770, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/nativeEnum.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/nativeEnum.ts"],"sourcesContent":["import { ZodNativeEnumDef } from \"zod/v3\";\n\nexport type JsonSchema7NativeEnumType = {\n  type: \"string\" | \"number\" | [\"string\", \"number\"];\n  enum: (string | number)[];\n};\n\nexport function parseNativeEnumDef(\n  def: ZodNativeEnumDef\n): JsonSchema7NativeEnumType {\n  const object = def.values;\n  const actualKeys = Object.keys(def.values).filter((key: string) => {\n    return typeof object[object[key]] !== \"number\";\n  });\n\n  const actualValues = actualKeys.map((key: string) => object[key]);\n\n  const parsedTypes = Array.from(\n    new Set(actualValues.map((values: string | number) => typeof values))\n  );\n\n  return {\n    type:\n      parsedTypes.length === 1\n        ? parsedTypes[0] === \"string\"\n          ? \"string\"\n          : \"number\"\n        : [\"string\", \"number\"],\n    enum: actualValues,\n  };\n}\n"],"names":["def: ZodNativeEnumDef","key: string","values: string | number"],"mappings":";;;;;AAOA,SAAgB,mBACdA,GAAAA,EAC2B;IAC3B,MAAM,SAAS,IAAI,MAAA;IACnB,MAAM,aAAa,OAAO,IAAA,CAAK,IAAI,MAAA,CAAO,CAAC,MAAA,CAAO,CAACC,QAAgB;QACjE,OAAO,OAAO,MAAA,CAAO,MAAA,CAAO,IAAA,CAAA,KAAU;IACvC,EAAC;IAEF,MAAM,eAAe,WAAW,GAAA,CAAI,CAACA,MAAgB,MAAA,CAAO,IAAA,CAAK;IAEjE,MAAM,cAAc,MAAM,IAAA,CACxB,IAAI,IAAI,aAAa,GAAA,CAAI,CAACC,SAA4B,OAAO,OAAO,EACrE;IAED,OAAO;QACL,MACE,YAAY,MAAA,KAAW,IACnB,WAAA,CAAY,EAAA,KAAO,WACjB,WACA,WACF;YAAC;YAAU,QAAS;SAAA;QAC1B,MAAM;IACP;AACF","debugId":null}},
    {"offset": {"line": 8796, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/never.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/never.ts"],"sourcesContent":["import { Refs } from \"../Refs.js\";\nimport { JsonSchema7AnyType, parseAnyDef } from \"./any.js\";\n\nexport type JsonSchema7NeverType = {\n  not: JsonSchema7AnyType;\n};\n\nexport function parseNeverDef(refs: Refs): JsonSchema7NeverType | undefined {\n  return refs.target === \"openAi\"\n    ? undefined\n    : {\n        not: parseAnyDef({\n          ...refs,\n          currentPath: [...refs.currentPath, \"not\"],\n        }),\n      };\n}\n"],"names":["refs: Refs"],"mappings":";;;;;;;AAOA,SAAgB,cAAcA,IAAAA,EAA8C;IAC1E,OAAO,KAAK,MAAA,KAAW,WACnB,KAAA,IACA;QACE,SAAK,gUAAA,EAAY;YACf,GAAG,IAAA;YACH,aAAa,CAAC;mBAAG,KAAK,WAAA;gBAAa,KAAM;aAAA;QAC1C,EAAC;IACH;AACN","debugId":null}},
    {"offset": {"line": 8820, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/null.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/null.ts"],"sourcesContent":["import { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7NullType = {\n  type: \"null\";\n};\n\nexport function parseNullDef(refs: Refs): JsonSchema7NullType {\n  return refs.target === \"openApi3\"\n    ? ({\n        enum: [\"null\"],\n        nullable: true,\n      } as any)\n    : {\n        type: \"null\",\n      };\n}\n"],"names":["refs: Refs"],"mappings":";;;;;AAMA,SAAgB,aAAaA,IAAAA,EAAiC;IAC5D,OAAO,KAAK,MAAA,KAAW,aAClB;QACC,MAAM;YAAC,MAAO;SAAA;QACd,UAAU;IACX,IACD;QACE,MAAM;IACP;AACN","debugId":null}},
    {"offset": {"line": 8841, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/union.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/union.ts"],"sourcesContent":["import {\n  ZodDiscriminatedUnionDef,\n  ZodLiteralDef,\n  ZodTypeAny,\n  ZodUnionDef,\n} from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport const primitiveMappings = {\n  ZodString: \"string\",\n  ZodNumber: \"number\",\n  ZodBigInt: \"integer\",\n  ZodBoolean: \"boolean\",\n  ZodNull: \"null\",\n} as const;\ntype ZodPrimitive = keyof typeof primitiveMappings;\ntype JsonSchema7Primitive =\n  (typeof primitiveMappings)[keyof typeof primitiveMappings];\n\nexport type JsonSchema7UnionType =\n  | JsonSchema7PrimitiveUnionType\n  | JsonSchema7AnyOfType;\n\ntype JsonSchema7PrimitiveUnionType =\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n    }\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n      enum: (string | number | bigint | boolean | null)[];\n    };\n\ntype JsonSchema7AnyOfType = {\n  anyOf: JsonSchema7Type[];\n};\n\nexport function parseUnionDef(\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined {\n  if (refs.target === \"openApi3\") return asAnyOf(def, refs);\n\n  const options: readonly ZodTypeAny[] =\n    def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n\n  // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n  if (\n    options.every(\n      (x) =>\n        x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length)\n    )\n  ) {\n    // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n\n    const types = options.reduce((types: JsonSchema7Primitive[], x) => {\n      const type = primitiveMappings[x._def.typeName as ZodPrimitive]; //Can be safely casted due to row 43\n      return type && !types.includes(type) ? [...types, type] : types;\n    }, []);\n\n    return {\n      type: types.length > 1 ? types : types[0],\n    };\n  } else if (\n    options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)\n  ) {\n    // all options literals\n\n    const types = options.reduce(\n      (acc: JsonSchema7Primitive[], x: { _def: ZodLiteralDef }) => {\n        const type = typeof x._def.value;\n        switch (type) {\n          case \"string\":\n          case \"number\":\n          case \"boolean\":\n            return [...acc, type];\n          case \"bigint\":\n            return [...acc, \"integer\" as const];\n          case \"object\":\n            if (x._def.value === null) return [...acc, \"null\" as const];\n            return acc;\n          case \"symbol\":\n          case \"undefined\":\n          case \"function\":\n          default:\n            return acc;\n        }\n      },\n      []\n    );\n\n    if (types.length === options.length) {\n      // all the literals are primitive, as far as null can be considered primitive\n\n      const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n      return {\n        type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n        enum: options.reduce((acc, x) => {\n          return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n        }, [] as (string | number | bigint | boolean | null)[]),\n      };\n    }\n  } else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n    return {\n      type: \"string\",\n      enum: options.reduce(\n        (acc: string[], x) => [\n          ...acc,\n          ...x._def.values.filter((x: string) => !acc.includes(x)),\n        ],\n        []\n      ),\n    };\n  }\n\n  return asAnyOf(def, refs);\n}\n\nconst asAnyOf = (\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined => {\n  const anyOf = (\n    (def.options instanceof Map\n      ? Array.from(def.options.values())\n      : def.options) as any[]\n  )\n    .map((x, i) =>\n      parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n      })\n    )\n    .filter(\n      (x): x is JsonSchema7Type =>\n        !!x &&\n        (!refs.strictUnions ||\n          (typeof x === \"object\" && Object.keys(x).length > 0))\n    );\n\n  return anyOf.length ? { anyOf } : undefined;\n};\n"],"names":["def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>","refs: Refs","options: readonly ZodTypeAny[]","types: JsonSchema7Primitive[]","types","acc: JsonSchema7Primitive[]","x: { _def: ZodLiteralDef }","acc: string[]","x: string","x"],"mappings":"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","debugId":null}},
    {"offset": {"line": 8940, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/nullable.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/nullable.ts"],"sourcesContent":["import { ZodNullableDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7NullType } from \"./null.js\";\nimport { primitiveMappings } from \"./union.js\";\n\nexport type JsonSchema7NullableType =\n  | {\n      anyOf: [JsonSchema7Type, JsonSchema7NullType];\n    }\n  | {\n      type: [string, \"null\"];\n    };\n\nexport function parseNullableDef(\n  def: ZodNullableDef,\n  refs: Refs\n): JsonSchema7NullableType | undefined {\n  if (\n    [\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(\n      def.innerType._def.typeName\n    ) &&\n    (!def.innerType._def.checks || !def.innerType._def.checks.length)\n  ) {\n    if (refs.target === \"openApi3\") {\n      return {\n        type: primitiveMappings[\n          def.innerType._def.typeName as keyof typeof primitiveMappings\n        ],\n        nullable: true,\n      } as any;\n    }\n\n    return {\n      type: [\n        primitiveMappings[\n          def.innerType._def.typeName as keyof typeof primitiveMappings\n        ],\n        \"null\",\n      ],\n    };\n  }\n\n  if (refs.target === \"openApi3\") {\n    const base = parseDef(def.innerType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath],\n    });\n\n    if (base && \"$ref\" in base) return { allOf: [base], nullable: true } as any;\n\n    return base && ({ ...base, nullable: true } as any);\n  }\n\n  const base = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n  });\n\n  return base && { anyOf: [base, { type: \"null\" }] };\n}\n"],"names":["def: ZodNullableDef","refs: Refs","base"],"mappings":";;;;;;;;;AAeA,SAAgB,iBACdA,GAAAA,EACAC,IAAAA,EACqC;IACrC,IACE;QAAC;QAAa;QAAa;QAAa;QAAc;KAAU,CAAC,QAAA,CAC/D,IAAI,SAAA,CAAU,IAAA,CAAK,QAAA,CACpB,IAAA,CACA,CAAC,IAAI,SAAA,CAAU,IAAA,CAAK,MAAA,IAAU,CAAC,IAAI,SAAA,CAAU,IAAA,CAAK,MAAA,CAAO,MAAA,GAC1D;QACA,IAAI,KAAK,MAAA,KAAW,WAClB,CAAA,OAAO;YACL,MAAM,wUAAA,CACJ,IAAI,SAAA,CAAU,IAAA,CAAK,QAAA,CAAA;YAErB,UAAU;QACX;QAGH,OAAO;YACL,MAAM;gBACJ,wUAAA,CACE,IAAI,SAAA,CAAU,IAAA,CAAK,QAAA,CAAA;gBAErB,MACD;aAAA;QACF;IACF;IAED,IAAI,KAAK,MAAA,KAAW,YAAY;QAC9B,MAAMC,aAAO,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;YACxC,GAAG,IAAA;YACH,aAAa,CAAC;mBAAG,KAAK,WAAY;aAAA;QACnC,EAAC;QAEF,IAAIA,UAAQ,UAAUA,OAAM,CAAA,OAAO;YAAE,OAAO;gBAACA,MAAK;aAAA;YAAE,UAAU;QAAM;QAEpE,OAAOA,UAAS;YAAE,GAAGA,MAAAA;YAAM,UAAU;QAAM;IAC5C;IAED,MAAM,WAAO,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;QACxC,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS;SAAI;IACjD,EAAC;IAEF,OAAO,QAAQ;QAAE,OAAO;YAAC;YAAM;gBAAE,MAAM;YAAQ,CAAC;SAAA;IAAE;AACnD","debugId":null}},
    {"offset": {"line": 9009, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/number.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/number.ts"],"sourcesContent":["import { ZodNumberDef } from \"zod/v3\";\nimport {\n  addErrorMessage,\n  ErrorMessages,\n  setResponseValueAndErrors,\n} from \"../errorMessages.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7NumberType = {\n  type: \"number\" | \"integer\";\n  minimum?: number;\n  exclusiveMinimum?: number;\n  maximum?: number;\n  exclusiveMaximum?: number;\n  multipleOf?: number;\n  errorMessage?: ErrorMessages<JsonSchema7NumberType>;\n};\n\nexport function parseNumberDef(\n  def: ZodNumberDef,\n  refs: Refs\n): JsonSchema7NumberType {\n  const res: JsonSchema7NumberType = {\n    type: \"number\",\n  };\n\n  if (!def.checks) return res;\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case \"int\":\n        res.type = \"integer\";\n        addErrorMessage(res, \"type\", check.message, refs);\n        break;\n      case \"min\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(\n              res,\n              \"minimum\",\n              check.value,\n              check.message,\n              refs\n            );\n          } else {\n            setResponseValueAndErrors(\n              res,\n              \"exclusiveMinimum\",\n              check.value,\n              check.message,\n              refs\n            );\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMinimum = true as any;\n          }\n          setResponseValueAndErrors(\n            res,\n            \"minimum\",\n            check.value,\n            check.message,\n            refs\n          );\n        }\n        break;\n      case \"max\":\n        if (refs.target === \"jsonSchema7\") {\n          if (check.inclusive) {\n            setResponseValueAndErrors(\n              res,\n              \"maximum\",\n              check.value,\n              check.message,\n              refs\n            );\n          } else {\n            setResponseValueAndErrors(\n              res,\n              \"exclusiveMaximum\",\n              check.value,\n              check.message,\n              refs\n            );\n          }\n        } else {\n          if (!check.inclusive) {\n            res.exclusiveMaximum = true as any;\n          }\n          setResponseValueAndErrors(\n            res,\n            \"maximum\",\n            check.value,\n            check.message,\n            refs\n          );\n        }\n        break;\n      case \"multipleOf\":\n        setResponseValueAndErrors(\n          res,\n          \"multipleOf\",\n          check.value,\n          check.message,\n          refs\n        );\n        break;\n    }\n  }\n  return res;\n}\n"],"names":["def: ZodNumberDef","refs: Refs","res: JsonSchema7NumberType"],"mappings":";;;;;;;AAkBA,SAAgB,eACdA,GAAAA,EACAC,IAAAA,EACuB;IACvB,MAAMC,MAA6B;QACjC,MAAM;IACP;IAED,IAAI,CAAC,IAAI,MAAA,CAAQ,CAAA,OAAO;IAExB,KAAK,MAAM,SAAS,IAAI,MAAA,CACtB,OAAQ,MAAM,IAAA,EAAd;QACE,KAAK;YACH,IAAI,IAAA,GAAO;gBACX,mUAAA,EAAgB,KAAK,QAAQ,MAAM,OAAA,EAAS,KAAK;YACjD;QACF,KAAK;YACH,IAAI,KAAK,MAAA,KAAW,cAClB,CAAA,IAAI,MAAM,SAAA,MACR,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;qBAED,6UAAA,EACE,KACA,oBACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;iBAEE;gBACL,IAAI,CAAC,MAAM,SAAA,EACT,IAAI,gBAAA,GAAmB;oBAEzB,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACF;YACD;QACF,KAAK;YACH,IAAI,KAAK,MAAA,KAAW,cAClB,CAAA,IAAI,MAAM,SAAA,MACR,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;qBAED,6UAAA,EACE,KACA,oBACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;iBAEE;gBACL,IAAI,CAAC,MAAM,SAAA,EACT,IAAI,gBAAA,GAAmB;oBAEzB,6UAAA,EACE,KACA,WACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACF;YACD;QACF,KAAK;gBACH,6UAAA,EACE,KACA,cACA,MAAM,KAAA,EACN,MAAM,OAAA,EACN,KACD;YACD;IACH;IAEH,OAAO;AACR","debugId":null}},
    {"offset": {"line": 9054, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/object.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/object.ts"],"sourcesContent":["import { ZodObjectDef, ZodTypeAny } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7ObjectType = {\n  type: \"object\";\n  properties: Record<string, JsonSchema7Type>;\n  additionalProperties?: boolean | JsonSchema7Type;\n  required?: string[];\n};\n\nexport function parseObjectDef(def: ZodObjectDef, refs: Refs) {\n  const forceOptionalIntoNullable = refs.target === \"openAi\";\n\n  const result: JsonSchema7ObjectType = {\n    type: \"object\",\n    properties: {},\n  };\n\n  const required: string[] = [];\n\n  const shape = def.shape();\n\n  for (const propName in shape) {\n    let propDef = shape[propName];\n\n    if (propDef === undefined || propDef._def === undefined) {\n      continue;\n    }\n\n    let propOptional = safeIsOptional(propDef);\n\n    if (propOptional && forceOptionalIntoNullable) {\n      if (propDef._def.typeName === \"ZodOptional\") {\n        propDef = propDef._def.innerType;\n      }\n\n      if (!propDef.isNullable()) {\n        propDef = propDef.nullable();\n      }\n\n      propOptional = false;\n    }\n\n    const parsedDef = parseDef(propDef._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"properties\", propName],\n      propertyPath: [...refs.currentPath, \"properties\", propName],\n    });\n\n    if (parsedDef === undefined) {\n      continue;\n    }\n\n    result.properties[propName] = parsedDef;\n\n    if (!propOptional) {\n      required.push(propName);\n    }\n  }\n\n  if (required.length) {\n    result.required = required;\n  }\n\n  const additionalProperties = decideAdditionalProperties(def, refs);\n\n  if (additionalProperties !== undefined) {\n    result.additionalProperties = additionalProperties;\n  }\n\n  return result;\n}\n\nfunction decideAdditionalProperties(def: ZodObjectDef, refs: Refs) {\n  if (def.catchall._def.typeName !== \"ZodNever\") {\n    return parseDef(def.catchall._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, \"additionalProperties\"],\n    });\n  }\n\n  switch (def.unknownKeys) {\n    case \"passthrough\":\n      return refs.allowedAdditionalProperties;\n    case \"strict\":\n      return refs.rejectedAdditionalProperties;\n    case \"strip\":\n      return refs.removeAdditionalStrategy === \"strict\"\n        ? refs.allowedAdditionalProperties\n        : refs.rejectedAdditionalProperties;\n  }\n}\n\nfunction safeIsOptional(schema: ZodTypeAny): boolean {\n  try {\n    return schema.isOptional();\n  } catch {\n    return true;\n  }\n}\n"],"names":["def: ZodObjectDef","refs: Refs","result: JsonSchema7ObjectType","required: string[]","schema: ZodTypeAny"],"mappings":";;;;;;;AAYA,SAAgB,eAAeA,GAAAA,EAAmBC,IAAAA,EAAY;IAC5D,MAAM,4BAA4B,KAAK,MAAA,KAAW;IAElD,MAAMC,SAAgC;QACpC,MAAM;QACN,YAAY,CAAE;IACf;IAED,MAAMC,WAAqB,CAAE,CAAA;IAE7B,MAAM,QAAQ,IAAI,KAAA,EAAO;IAEzB,IAAK,MAAM,YAAY,MAAO;QAC5B,IAAI,UAAU,KAAA,CAAM,SAAA;QAEpB,IAAI,YAAY,KAAA,KAAa,QAAQ,IAAA,KAAS,KAAA,EAC5C,CAAA;QAGF,IAAI,eAAe,eAAe,QAAQ;QAE1C,IAAI,gBAAgB,2BAA2B;YAC7C,IAAI,QAAQ,IAAA,CAAK,QAAA,KAAa,eAC5B,UAAU,QAAQ,IAAA,CAAK,SAAA;YAGzB,IAAI,CAAC,QAAQ,UAAA,EAAY,EACvB,UAAU,QAAQ,QAAA,EAAU;YAG9B,eAAe;QAChB;QAED,MAAM,gBAAY,uTAAA,EAAS,QAAQ,IAAA,EAAM;YACvC,GAAG,IAAA;YACH,aAAa;mBAAI,KAAK,WAAA;gBAAa;gBAAc;aAAS;YAC1D,cAAc;mBAAI,KAAK,WAAA;gBAAa;gBAAc;aAAS;QAC5D,EAAC;QAEF,IAAI,cAAc,KAAA,EAChB,CAAA;QAGF,OAAO,UAAA,CAAW,SAAA,GAAY;QAE9B,IAAI,CAAC,cACH,SAAS,IAAA,CAAK,SAAS;IAE1B;IAED,IAAI,SAAS,MAAA,EACX,OAAO,QAAA,GAAW;IAGpB,MAAM,uBAAuB,2BAA2B,KAAK,KAAK;IAElE,IAAI,yBAAyB,KAAA,GAC3B,OAAO,oBAAA,GAAuB;IAGhC,OAAO;AACR;AAED,SAAS,2BAA2BH,GAAAA,EAAmBC,IAAAA,EAAY;IACjE,IAAI,IAAI,QAAA,CAAS,IAAA,CAAK,QAAA,KAAa,WACjC,CAAA,WAAO,uTAAA,EAAS,IAAI,QAAA,CAAS,IAAA,EAAM;QACjC,GAAG,IAAA;QACH,aAAa,CAAC;eAAG,KAAK,WAAA;YAAa,sBAAuB;SAAA;IAC3D,EAAC;IAGJ,OAAQ,IAAI,WAAA,EAAZ;QACE,KAAK,cACH;YAAA,OAAO,KAAK,2BAAA;QACd,KAAK,SACH;YAAA,OAAO,KAAK,4BAAA;QACd,KAAK,QACH;YAAA,OAAO,KAAK,wBAAA,KAA6B,WACrC,KAAK,2BAAA,GACL,KAAK,4BAAA;IACZ;AACF;AAED,SAAS,eAAeG,MAAAA,EAA6B;IACnD,IAAI;QACF,OAAO,OAAO,UAAA,EAAY;IAC3B,EAAA,OAAO;QACN,OAAO;IACR;AACF","debugId":null}},
    {"offset": {"line": 9130, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/optional.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/optional.ts"],"sourcesContent":["import { ZodOptionalDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { parseAnyDef } from \"./any.js\";\n\nexport const parseOptionalDef = (\n  def: ZodOptionalDef,\n  refs: Refs\n): JsonSchema7Type | undefined => {\n  if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n    return parseDef(def.innerType._def, refs);\n  }\n\n  const innerSchema = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n  });\n\n  return innerSchema\n    ? {\n        anyOf: [\n          {\n            not: parseAnyDef(refs),\n          },\n          innerSchema,\n        ],\n      }\n    : parseAnyDef(refs);\n};\n"],"names":["def: ZodOptionalDef","refs: Refs"],"mappings":";;;;;;;;;AAMA,MAAa,mBAAmB,CAC9BA,KACAC,SACgC;IAChC,IAAI,KAAK,WAAA,CAAY,QAAA,EAAU,KAAK,KAAK,YAAA,EAAc,UAAU,CAC/D,CAAA,WAAO,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM,KAAK;IAG3C,MAAM,kBAAc,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;QAC/C,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS;SAAI;IACjD,EAAC;IAEF,OAAO,cACH;QACE,OAAO;YACL;gBACE,SAAK,gUAAA,EAAY,KAAK;YACvB;YACD,WACD;SAAA;IACF,QACD,gUAAA,EAAY,KAAK;AACtB","debugId":null}},
    {"offset": {"line": 9164, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/pipeline.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/pipeline.ts"],"sourcesContent":["import { ZodPipelineDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\nimport { JsonSchema7AllOfType } from \"./intersection.js\";\n\nexport const parsePipelineDef = (\n  def: ZodPipelineDef<any, any>,\n  refs: Refs\n): JsonSchema7AllOfType | JsonSchema7Type | undefined => {\n  if (refs.pipeStrategy === \"input\") {\n    return parseDef(def.in._def, refs);\n  } else if (refs.pipeStrategy === \"output\") {\n    return parseDef(def.out._def, refs);\n  }\n\n  const a = parseDef(def.in._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n  });\n  const b = parseDef(def.out._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n  });\n\n  return {\n    allOf: [a, b].filter((x): x is JsonSchema7Type => x !== undefined),\n  };\n};\n"],"names":["def: ZodPipelineDef<any, any>","refs: Refs"],"mappings":";;;;;;;AAMA,MAAa,mBAAmB,CAC9BA,KACAC,SACuD;IACvD,IAAI,KAAK,YAAA,KAAiB,QACxB,CAAA,WAAO,uTAAA,EAAS,IAAI,EAAA,CAAG,IAAA,EAAM,KAAK;aACzB,KAAK,YAAA,KAAiB,SAC/B,CAAA,WAAO,uTAAA,EAAS,IAAI,GAAA,CAAI,IAAA,EAAM,KAAK;IAGrC,MAAM,QAAI,uTAAA,EAAS,IAAI,EAAA,CAAG,IAAA,EAAM;QAC9B,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS;SAAI;IACjD,EAAC;IACF,MAAM,QAAI,uTAAA,EAAS,IAAI,GAAA,CAAI,IAAA,EAAM;QAC/B,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,WAAA;YAAa;YAAS,IAAI,MAAM;SAAI;IAC3D,EAAC;IAEF,OAAO;QACL,OAAO;YAAC;YAAG,CAAE;SAAA,CAAC,MAAA,CAAO,CAAC,IAA4B,MAAM,KAAA,EAAU;IACnE;AACF","debugId":null}},
    {"offset": {"line": 9203, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/promise.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/promise.ts"],"sourcesContent":["import { ZodPromiseDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport function parsePromiseDef(\n  def: ZodPromiseDef,\n  refs: Refs\n): JsonSchema7Type | undefined {\n  return parseDef(def.type._def, refs);\n}\n"],"names":["def: ZodPromiseDef","refs: Refs"],"mappings":";;;;;;;AAKA,SAAgB,gBACdA,GAAAA,EACAC,IAAAA,EAC6B;IAC7B,WAAO,uTAAA,EAAS,IAAI,IAAA,CAAK,IAAA,EAAM,KAAK;AACrC","debugId":null}},
    {"offset": {"line": 9219, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/set.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/set.ts"],"sourcesContent":["import { ZodSetDef } from \"zod/v3\";\nimport { ErrorMessages, setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7SetType = {\n  type: \"array\";\n  uniqueItems: true;\n  items?: JsonSchema7Type;\n  minItems?: number;\n  maxItems?: number;\n  errorMessage?: ErrorMessages<JsonSchema7SetType>;\n};\n\nexport function parseSetDef(def: ZodSetDef, refs: Refs): JsonSchema7SetType {\n  const items = parseDef(def.valueType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, \"items\"],\n  });\n\n  const schema: JsonSchema7SetType = {\n    type: \"array\",\n    uniqueItems: true,\n    items,\n  };\n\n  if (def.minSize) {\n    setResponseValueAndErrors(\n      schema,\n      \"minItems\",\n      def.minSize.value,\n      def.minSize.message,\n      refs\n    );\n  }\n\n  if (def.maxSize) {\n    setResponseValueAndErrors(\n      schema,\n      \"maxItems\",\n      def.maxSize.value,\n      def.maxSize.message,\n      refs\n    );\n  }\n\n  return schema;\n}\n"],"names":["def: ZodSetDef","refs: Refs","schema: JsonSchema7SetType"],"mappings":";;;;;;;;;AAeA,SAAgB,YAAYA,GAAAA,EAAgBC,IAAAA,EAAgC;IAC1E,MAAM,YAAQ,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM;QACzC,GAAG,IAAA;QACH,aAAa,CAAC;eAAG,KAAK,WAAA;YAAa,OAAQ;SAAA;IAC5C,EAAC;IAEF,MAAMC,SAA6B;QACjC,MAAM;QACN,aAAa;QACb;IACD;IAED,IAAI,IAAI,OAAA,MACN,6UAAA,EACE,QACA,YACA,IAAI,OAAA,CAAQ,KAAA,EACZ,IAAI,OAAA,CAAQ,OAAA,EACZ,KACD;IAGH,IAAI,IAAI,OAAA,MACN,6UAAA,EACE,QACA,YACA,IAAI,OAAA,CAAQ,KAAA,EACZ,IAAI,OAAA,CAAQ,OAAA,EACZ,KACD;IAGH,OAAO;AACR","debugId":null}},
    {"offset": {"line": 9251, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/tuple.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/tuple.ts"],"sourcesContent":["import { ZodTupleDef, ZodTupleItems, ZodTypeAny } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { JsonSchema7Type } from \"../parseTypes.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport type JsonSchema7TupleType = {\n  type: \"array\";\n  minItems: number;\n  items: JsonSchema7Type[];\n} & (\n  | {\n      maxItems: number;\n    }\n  | {\n      additionalItems?: JsonSchema7Type;\n    }\n);\n\nexport function parseTupleDef(\n  def: ZodTupleDef<ZodTupleItems | [], ZodTypeAny | null>,\n  refs: Refs\n): JsonSchema7TupleType {\n  if (def.rest) {\n    return {\n      type: \"array\",\n      minItems: def.items.length,\n      items: def.items\n        .map((x, i) =>\n          parseDef(x._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\", `${i}`],\n          })\n        )\n        .reduce(\n          (acc: JsonSchema7Type[], x) => (x === undefined ? acc : [...acc, x]),\n          []\n        ),\n      additionalItems: parseDef(def.rest._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"additionalItems\"],\n      }),\n    };\n  } else {\n    return {\n      type: \"array\",\n      minItems: def.items.length,\n      maxItems: def.items.length,\n      items: def.items\n        .map((x, i) =>\n          parseDef(x._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\", `${i}`],\n          })\n        )\n        .reduce(\n          (acc: JsonSchema7Type[], x) => (x === undefined ? acc : [...acc, x]),\n          []\n        ),\n    };\n  }\n}\n"],"names":["def: ZodTupleDef<ZodTupleItems | [], ZodTypeAny | null>","refs: Refs","acc: JsonSchema7Type[]"],"mappings":";;;;;;;AAkBA,SAAgB,cACdA,GAAAA,EACAC,IAAAA,EACsB;IACtB,IAAI,IAAI,IAAA,CACN,CAAA,OAAO;QACL,MAAM;QACN,UAAU,IAAI,KAAA,CAAM,MAAA;QACpB,OAAO,IAAI,KAAA,CACR,GAAA,CAAI,CAAC,GAAG,QACP,uTAAA,EAAS,EAAE,IAAA,EAAM;gBACf,GAAG,IAAA;gBACH,aAAa;uBAAI,KAAK,WAAA;oBAAa;oBAAS,GAAG,GAAG;iBAAC;YACpD,EAAC,CACH,CACA,MAAA,CACC,CAACC,KAAwB,IAAO,MAAM,KAAA,IAAY,MAAM,CAAC;mBAAG;gBAAK,CAAE;aAAA,EACnE,CAAE,CAAA,CACH;QACH,qBAAiB,uTAAA,EAAS,IAAI,IAAA,CAAK,IAAA,EAAM;YACvC,GAAG,IAAA;YACH,aAAa,CAAC;mBAAG,KAAK,WAAA;gBAAa,iBAAkB;aAAA;QACtD,EAAC;IACH;SAED,OAAO;QACL,MAAM;QACN,UAAU,IAAI,KAAA,CAAM,MAAA;QACpB,UAAU,IAAI,KAAA,CAAM,MAAA;QACpB,OAAO,IAAI,KAAA,CACR,GAAA,CAAI,CAAC,GAAG,QACP,uTAAA,EAAS,EAAE,IAAA,EAAM;gBACf,GAAG,IAAA;gBACH,aAAa;uBAAI,KAAK,WAAA;oBAAa;oBAAS,GAAG,GAAG;iBAAC;YACpD,EAAC,CACH,CACA,MAAA,CACC,CAACA,KAAwB,IAAO,MAAM,KAAA,IAAY,MAAM,CAAC;mBAAG;gBAAK,CAAE;aAAA,EACnE,CAAE,CAAA,CACH;IACJ;AAEJ","debugId":null}},
    {"offset": {"line": 9304, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/undefined.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/undefined.ts"],"sourcesContent":["import { Refs } from \"../Refs.js\";\nimport { JsonSchema7AnyType, parseAnyDef } from \"./any.js\";\n\nexport type JsonSchema7UndefinedType = {\n  not: JsonSchema7AnyType;\n};\n\nexport function parseUndefinedDef(refs: Refs): JsonSchema7UndefinedType {\n  return {\n    not: parseAnyDef(refs),\n  };\n}\n"],"names":["refs: Refs"],"mappings":";;;;;;;AAOA,SAAgB,kBAAkBA,IAAAA,EAAsC;IACtE,OAAO;QACL,SAAK,gUAAA,EAAY,KAAK;IACvB;AACF","debugId":null}},
    {"offset": {"line": 9322, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/unknown.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/unknown.ts"],"sourcesContent":["import { Refs } from \"../Refs\";\nimport { JsonSchema7AnyType, parseAnyDef } from \"./any.js\";\n\nexport type JsonSchema7UnknownType = JsonSchema7AnyType;\n\nexport function parseUnknownDef(refs: Refs): JsonSchema7UnknownType {\n  return parseAnyDef(refs);\n}\n"],"names":["refs: Refs"],"mappings":";;;;;;;AAKA,SAAgB,gBAAgBA,IAAAA,EAAoC;IAClE,WAAO,gUAAA,EAAY,KAAK;AACzB","debugId":null}},
    {"offset": {"line": 9338, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parsers/readonly.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parsers/readonly.ts"],"sourcesContent":["import { ZodReadonlyDef } from \"zod/v3\";\nimport { parseDef } from \"../parseDef.js\";\nimport { Refs } from \"../Refs.js\";\n\nexport const parseReadonlyDef = (def: ZodReadonlyDef<any>, refs: Refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n"],"names":["def: ZodReadonlyDef<any>","refs: Refs"],"mappings":";;;;;;;AAIA,MAAa,mBAAmB,CAACA,KAA0BC,SAAe;IACxE,WAAO,uTAAA,EAAS,IAAI,SAAA,CAAU,IAAA,EAAM,KAAK;AAC1C","debugId":null}},
    {"offset": {"line": 9354, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/selectParser.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/selectParser.ts"],"sourcesContent":["import { ZodFirstPartyTypeKind } from \"zod/v3\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { Refs } from \"./Refs.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nimport { JsonSchema7Type } from \"./parseTypes.js\";\n\nexport type InnerDefGetter = () => any;\n\nexport const selectParser = (\n  def: any,\n  typeName: ZodFirstPartyTypeKind,\n  refs: Refs\n): JsonSchema7Type | undefined | InnerDefGetter => {\n  switch (typeName) {\n    case ZodFirstPartyTypeKind.ZodString:\n      return parseStringDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNumber:\n      return parseNumberDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodObject:\n      return parseObjectDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBigInt:\n      return parseBigintDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBoolean:\n      return parseBooleanDef();\n    case ZodFirstPartyTypeKind.ZodDate:\n      return parseDateDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUndefined:\n      return parseUndefinedDef(refs);\n    case ZodFirstPartyTypeKind.ZodNull:\n      return parseNullDef(refs);\n    case ZodFirstPartyTypeKind.ZodArray:\n      return parseArrayDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUnion:\n    case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n      return parseUnionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodIntersection:\n      return parseIntersectionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodTuple:\n      return parseTupleDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodRecord:\n      return parseRecordDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLiteral:\n      return parseLiteralDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodEnum:\n      return parseEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNativeEnum:\n      return parseNativeEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNullable:\n      return parseNullableDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodOptional:\n      return parseOptionalDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodMap:\n      return parseMapDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodSet:\n      return parseSetDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLazy:\n      return () => (def as any).getter()._def;\n    case ZodFirstPartyTypeKind.ZodPromise:\n      return parsePromiseDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNaN:\n    case ZodFirstPartyTypeKind.ZodNever:\n      return parseNeverDef(refs);\n    case ZodFirstPartyTypeKind.ZodEffects:\n      return parseEffectsDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodAny:\n      return parseAnyDef(refs);\n    case ZodFirstPartyTypeKind.ZodUnknown:\n      return parseUnknownDef(refs);\n    case ZodFirstPartyTypeKind.ZodDefault:\n      return parseDefaultDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBranded:\n      return parseBrandedDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodReadonly:\n      return parseReadonlyDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodCatch:\n      return parseCatchDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodPipeline:\n      return parsePipelineDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodFunction:\n    case ZodFirstPartyTypeKind.ZodVoid:\n    case ZodFirstPartyTypeKind.ZodSymbol:\n      return undefined;\n    default:\n      /* c8 ignore next */\n      return ((_: never) => undefined)(typeName);\n  }\n};\n"],"names":["def: any","typeName: ZodFirstPartyTypeKind","refs: Refs","_: never"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,MAAa,eAAe,CAC1BA,KACAC,UACAC,SACiD;IACjD,OAAQ,UAAR;QACE,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;QAClC,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;QAClC,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;QAClC,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;QAClC,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAiB;QAC1B,KAAK,+MAAA,CAAsB,OAAA,CACzB;YAAA,WAAO,kUAAA,EAAa,KAAK,KAAK;QAChC,KAAK,+MAAA,CAAsB,YAAA,CACzB;YAAA,WAAO,4UAAA,EAAkB,KAAK;QAChC,KAAK,+MAAA,CAAsB,OAAA,CACzB;YAAA,WAAO,kUAAA,EAAa,KAAK;QAC3B,KAAK,+MAAA,CAAsB,QAAA,CACzB;YAAA,WAAO,oUAAA,EAAc,KAAK,KAAK;QACjC,KAAK,+MAAA,CAAsB,QAAA;QAC3B,KAAK,+MAAA,CAAsB,qBAAA,CACzB;YAAA,WAAO,oUAAA,EAAc,KAAK,KAAK;QACjC,KAAK,+MAAA,CAAsB,eAAA,CACzB;YAAA,WAAO,kVAAA,EAAqB,KAAK,KAAK;QACxC,KAAK,+MAAA,CAAsB,QAAA,CACzB;YAAA,WAAO,oUAAA,EAAc,KAAK,KAAK;QACjC,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,WAAO,sUAAA,EAAe,KAAK,KAAK;QAClC,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK,KAAK;QACnC,KAAK,+MAAA,CAAsB,OAAA,CACzB;YAAA,WAAO,kUAAA,EAAa,IAAI;QAC1B,KAAK,+MAAA,CAAsB,aAAA,CACzB;YAAA,WAAO,8UAAA,EAAmB,IAAI;QAChC,KAAK,+MAAA,CAAsB,WAAA,CACzB;YAAA,WAAO,0UAAA,EAAiB,KAAK,KAAK;QACpC,KAAK,+MAAA,CAAsB,WAAA,CACzB;YAAA,WAAO,0UAAA,EAAiB,KAAK,KAAK;QACpC,KAAK,+MAAA,CAAsB,MAAA,CACzB;YAAA,WAAO,gUAAA,EAAY,KAAK,KAAK;QAC/B,KAAK,+MAAA,CAAsB,MAAA,CACzB;YAAA,WAAO,gUAAA,EAAY,KAAK,KAAK;QAC/B,KAAK,+MAAA,CAAsB,OAAA,CACzB;YAAA,OAAO,IAAO,IAAY,MAAA,EAAQ,CAAC,IAAA;QACrC,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK,KAAK;QACnC,KAAK,+MAAA,CAAsB,MAAA;QAC3B,KAAK,+MAAA,CAAsB,QAAA,CACzB;YAAA,WAAO,oUAAA,EAAc,KAAK;QAC5B,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK,KAAK;QACnC,KAAK,+MAAA,CAAsB,MAAA,CACzB;YAAA,WAAO,gUAAA,EAAY,KAAK;QAC1B,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK;QAC9B,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK,KAAK;QACnC,KAAK,+MAAA,CAAsB,UAAA,CACzB;YAAA,WAAO,wUAAA,EAAgB,KAAK,KAAK;QACnC,KAAK,+MAAA,CAAsB,WAAA,CACzB;YAAA,WAAO,0UAAA,EAAiB,KAAK,KAAK;QACpC,KAAK,+MAAA,CAAsB,QAAA,CACzB;YAAA,WAAO,oUAAA,EAAc,KAAK,KAAK;QACjC,KAAK,+MAAA,CAAsB,WAAA,CACzB;YAAA,WAAO,0UAAA,EAAiB,KAAK,KAAK;QACpC,KAAK,+MAAA,CAAsB,WAAA;QAC3B,KAAK,+MAAA,CAAsB,OAAA;QAC3B,KAAK,+MAAA,CAAsB,SAAA,CACzB;YAAA,OAAO,KAAA;QACT;iCAEE,OAAA,CAAQ,CAACC,IAAa,KAAA,CAAA,EAAW,SAAS;IAC7C;AACF","debugId":null}},
    {"offset": {"line": 9501, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/parseDef.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/parseDef.ts"],"sourcesContent":["import { ZodTypeDef } from \"zod/v3\";\nimport { Refs, Seen } from \"./Refs.js\";\nimport { ignoreOverride } from \"./Options.js\";\nimport { JsonSchema7Type } from \"./parseTypes.js\";\nimport { selectParser } from \"./selectParser.js\";\nimport { getRelativePath } from \"./getRelativePath.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\n\nexport function parseDef(\n  def: ZodTypeDef,\n  refs: Refs,\n  forceResolution = false // Forces a new schema to be instantiated even though its def has been seen. Used for improving refs in definitions. See https://github.com/StefanTerdell/zod-to-json-schema/pull/61.\n): JsonSchema7Type | undefined {\n  const seenItem = refs.seen.get(def);\n\n  if (refs.override) {\n    const overrideResult = refs.override?.(\n      def,\n      refs,\n      seenItem,\n      forceResolution\n    );\n\n    if (overrideResult !== ignoreOverride) {\n      return overrideResult;\n    }\n  }\n\n  if (seenItem && !forceResolution) {\n    const seenSchema = get$ref(seenItem, refs);\n\n    if (seenSchema !== undefined) {\n      return seenSchema;\n    }\n  }\n\n  const newItem: Seen = { def, path: refs.currentPath, jsonSchema: undefined };\n\n  refs.seen.set(def, newItem);\n\n  const jsonSchemaOrGetter = selectParser(def, (def as any).typeName, refs);\n\n  // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n  const jsonSchema =\n    typeof jsonSchemaOrGetter === \"function\"\n      ? parseDef(jsonSchemaOrGetter(), refs)\n      : jsonSchemaOrGetter;\n\n  if (jsonSchema) {\n    addMeta(def, refs, jsonSchema);\n  }\n\n  if (refs.postProcess) {\n    const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n\n    newItem.jsonSchema = jsonSchema;\n\n    return postProcessResult;\n  }\n\n  newItem.jsonSchema = jsonSchema;\n\n  return jsonSchema;\n}\n\nconst get$ref = (\n  item: Seen,\n  refs: Refs\n):\n  | {\n      $ref: string;\n    }\n  | {}\n  | undefined => {\n  switch (refs.$refStrategy) {\n    case \"root\":\n      return { $ref: item.path.join(\"/\") };\n    case \"relative\":\n      return { $ref: getRelativePath(refs.currentPath, item.path) };\n    case \"none\":\n    case \"seen\": {\n      if (\n        item.path.length < refs.currentPath.length &&\n        item.path.every((value, index) => refs.currentPath[index] === value)\n      ) {\n        console.warn(\n          `Recursive reference detected at ${refs.currentPath.join(\n            \"/\"\n          )}! Defaulting to any`\n        );\n\n        return parseAnyDef(refs);\n      }\n\n      return refs.$refStrategy === \"seen\" ? parseAnyDef(refs) : undefined;\n    }\n  }\n};\n\nconst addMeta = (\n  def: ZodTypeDef,\n  refs: Refs,\n  jsonSchema: JsonSchema7Type\n): JsonSchema7Type => {\n  if (def.description) {\n    jsonSchema.description = def.description;\n\n    if (refs.markdownDescription) {\n      jsonSchema.markdownDescription = def.description;\n    }\n  }\n  return jsonSchema;\n};\n"],"names":["def: ZodTypeDef","refs: Refs","newItem: Seen","item: Seen","jsonSchema: JsonSchema7Type"],"mappings":";;;;;;;;;;;;;AAQA,SAAgB,SACdA,GAAAA,EACAC,IAAAA,EACA,kBAAkB,KAAA,EACW;IAC7B,MAAM,WAAW,KAAK,IAAA,CAAK,GAAA,CAAI,IAAI;IAEnC,IAAI,KAAK,QAAA,EAAU;QACjB,MAAM,iBAAiB,KAAK,QAAA,GAC1B,KACA,MACA,UACA,gBACD;QAED,IAAI,mBAAmB,4TAAA,CACrB,CAAA,OAAO;IAEV;IAED,IAAI,YAAY,CAAC,iBAAiB;QAChC,MAAM,aAAa,QAAQ,UAAU,KAAK;QAE1C,IAAI,eAAe,KAAA,EACjB,CAAA,OAAO;IAEV;IAED,MAAMC,UAAgB;QAAE;QAAK,MAAM,KAAK,WAAA;QAAa,YAAY,KAAA;IAAW;IAE5E,KAAK,IAAA,CAAK,GAAA,CAAI,KAAK,QAAQ;IAE3B,MAAM,yBAAqB,+TAAA,EAAa,KAAM,IAAY,QAAA,EAAU,KAAK;IAGzE,MAAM,aACJ,OAAO,uBAAuB,aAC1B,SAAS,oBAAoB,EAAE,KAAK,GACpC;IAEN,IAAI,YACF,QAAQ,KAAK,MAAM,WAAW;IAGhC,IAAI,KAAK,WAAA,EAAa;QACpB,MAAM,oBAAoB,KAAK,WAAA,CAAY,YAAY,KAAK,KAAK;QAEjE,QAAQ,UAAA,GAAa;QAErB,OAAO;IACR;IAED,QAAQ,UAAA,GAAa;IAErB,OAAO;AACR;AAED,MAAM,UAAU,CACdC,MACAF,SAMe;IACf,OAAQ,KAAK,YAAA,EAAb;QACE,KAAK,OACH;YAAA,OAAO;gBAAE,MAAM,KAAK,IAAA,CAAK,IAAA,CAAK,IAAI;YAAE;QACtC,KAAK,WACH;YAAA,OAAO;gBAAE,UAAM,qUAAA,EAAgB,KAAK,WAAA,EAAa,KAAK,IAAA,CAAK;YAAE;QAC/D,KAAK;QACL,KAAK;YACH,IACE,KAAK,IAAA,CAAK,MAAA,GAAS,KAAK,WAAA,CAAY,MAAA,IACpC,KAAK,IAAA,CAAK,KAAA,CAAM,CAAC,OAAO,QAAU,KAAK,WAAA,CAAY,MAAA,KAAW,MAAM,EACpE;gBACA,QAAQ,IAAA,CACN,CAAC,gCAAgC,EAAE,KAAK,WAAA,CAAY,IAAA,CAClD,IACD,CAAC,mBAAmB,CAAC,CACvB;gBAED,WAAO,gUAAA,EAAY,KAAK;YACzB;YAED,OAAO,KAAK,YAAA,KAAiB,aAAS,gUAAA,EAAY,KAAK,GAAG,KAAA;IAE7D;AACF;AAED,MAAM,UAAU,CACdD,KACAC,MACAG,eACoB;IACpB,IAAI,IAAI,WAAA,EAAa;QACnB,WAAW,WAAA,GAAc,IAAI,WAAA;QAE7B,IAAI,KAAK,mBAAA,EACP,WAAW,mBAAA,GAAsB,IAAI,WAAA;IAExC;IACD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 9573, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/zod-to-json-schema/zodToJsonSchema.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/zod-to-json-schema/zodToJsonSchema.ts"],"sourcesContent":["import { ZodSchema } from \"zod/v3\";\nimport { Options, Targets } from \"./Options.js\";\nimport { parseDef } from \"./parseDef.js\";\nimport { JsonSchema7Type } from \"./parseTypes.js\";\nimport { getRefs } from \"./Refs.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\n\nconst zodToJsonSchema = <Target extends Targets = \"jsonSchema7\">(\n  schema: ZodSchema<any>,\n  options?: Partial<Options<Target>> | string\n): (Target extends \"jsonSchema7\" ? JsonSchema7Type : object) & {\n  $schema?: string;\n  definitions?: {\n    [key: string]: Target extends \"jsonSchema7\"\n      ? JsonSchema7Type\n      : Target extends \"jsonSchema2019-09\"\n      ? JsonSchema7Type\n      : object;\n  };\n} => {\n  const refs = getRefs(options);\n\n  let definitions =\n    typeof options === \"object\" && options.definitions\n      ? Object.entries(options.definitions).reduce(\n          (acc: { [key: string]: JsonSchema7Type }, [name, schema]) => ({\n            ...acc,\n            [name]:\n              parseDef(\n                schema._def,\n                {\n                  ...refs,\n                  currentPath: [...refs.basePath, refs.definitionPath, name],\n                },\n                true\n              ) ?? parseAnyDef(refs),\n          }),\n          {}\n        )\n      : undefined;\n\n  const name =\n    typeof options === \"string\"\n      ? options\n      : options?.nameStrategy === \"title\"\n      ? undefined\n      : options?.name;\n\n  const main =\n    parseDef(\n      schema._def,\n      name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n          },\n      false\n    ) ?? (parseAnyDef(refs) as JsonSchema7Type);\n\n  const title =\n    typeof options === \"object\" &&\n    options.name !== undefined &&\n    options.nameStrategy === \"title\"\n      ? options.name\n      : undefined;\n\n  if (title !== undefined) {\n    main.title = title;\n  }\n\n  if (refs.flags.hasReferencedOpenAiAnyType) {\n    if (!definitions) {\n      definitions = {};\n    }\n\n    if (!definitions[refs.openAiAnyTypeName]) {\n      definitions[refs.openAiAnyTypeName] = {\n        // Skipping \"object\" as no properties can be defined and additionalProperties must be \"false\"\n        type: [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"null\"],\n        items: {\n          $ref:\n            refs.$refStrategy === \"relative\"\n              ? \"1\"\n              : [\n                  ...refs.basePath,\n                  refs.definitionPath,\n                  refs.openAiAnyTypeName,\n                ].join(\"/\"),\n        },\n      } as JsonSchema7Type;\n    }\n  }\n\n  const combined: ReturnType<typeof zodToJsonSchema<Target>> =\n    name === undefined\n      ? definitions\n        ? {\n            ...main,\n            [refs.definitionPath]: definitions,\n          }\n        : main\n      : {\n          $ref: [\n            ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n            refs.definitionPath,\n            name,\n          ].join(\"/\"),\n          [refs.definitionPath]: {\n            ...definitions,\n            [name]: main,\n          },\n        };\n\n  if (refs.target === \"jsonSchema7\") {\n    combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n  } else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n    combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n  }\n\n  if (\n    refs.target === \"openAi\" &&\n    (\"anyOf\" in combined ||\n      \"oneOf\" in combined ||\n      \"allOf\" in combined ||\n      (\"type\" in combined && Array.isArray(combined.type)))\n  ) {\n    console.warn(\n      \"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\"\n    );\n  }\n\n  return combined;\n};\n\nexport { zodToJsonSchema };\n"],"names":["schema: ZodSchema<any>","options?: Partial<Options<Target>> | string","acc: { [key: string]: JsonSchema7Type }","name","schema","combined: ReturnType<typeof zodToJsonSchema<Target>>"],"mappings":";;;;;;;;;;;AAOA,MAAM,kBAAkB,CACtBA,QACAC,YAUG;IACH,MAAM,WAAO,kTAAA,EAAQ,QAAQ;IAE7B,IAAI,cACF,OAAO,YAAY,YAAY,QAAQ,WAAA,GACnC,OAAO,OAAA,CAAQ,QAAQ,WAAA,CAAY,CAAC,MAAA,CAClC,CAACC,KAAyC,CAACC,QAAMC,SAAO,GAAA,CAAM;YAC5D,GAAG,GAAA;aACFD,OAAAA,MACC,uTAAA,EACEC,SAAO,IAAA,EACP;gBACE,GAAG,IAAA;gBACH,aAAa;uBAAI,KAAK,QAAA;oBAAU,KAAK,cAAA;oBAAgBD;iBAAK;YAC3D,GACD,KACD,QAAI,gUAAA,EAAY,KAAK;QACzB,CAAA,GACD,CAAE,EACH,GACD,KAAA;IAEN,MAAM,OACJ,OAAO,YAAY,WACf,UACA,SAAS,iBAAiB,UAC1B,KAAA,IACA,SAAS;IAEf,MAAM,WACJ,uTAAA,EACE,OAAO,IAAA,EACP,SAAS,KAAA,IACL,OACA;QACE,GAAG,IAAA;QACH,aAAa;eAAI,KAAK,QAAA;YAAU,KAAK,cAAA;YAAgB;SAAK;IAC3D,GACL,MACD,QAAK,gUAAA,EAAY,KAAK;IAEzB,MAAM,QACJ,OAAO,YAAY,YACnB,QAAQ,IAAA,KAAS,KAAA,KACjB,QAAQ,YAAA,KAAiB,UACrB,QAAQ,IAAA,GACR,KAAA;IAEN,IAAI,UAAU,KAAA,GACZ,KAAK,KAAA,GAAQ;IAGf,IAAI,KAAK,KAAA,CAAM,0BAAA,EAA4B;QACzC,IAAI,CAAC,aACH,cAAc,CAAE;QAGlB,IAAI,CAAC,WAAA,CAAY,KAAK,iBAAA,CAAA,EACpB,WAAA,CAAY,KAAK,iBAAA,CAAA,GAAqB;YAEpC,MAAM;gBAAC;gBAAU;gBAAU;gBAAW;gBAAW;gBAAS;aAAO;YACjE,OAAO;gBACL,MACE,KAAK,YAAA,KAAiB,aAClB,MACA;uBACK,KAAK,QAAA;oBACR,KAAK,cAAA;oBACL,KAAK,iBAAA;iBACN,CAAC,IAAA,CAAK,IAAI;YAClB;QACF;IAEJ;IAED,MAAME,WACJ,SAAS,KAAA,IACL,cACE;QACE,GAAG,IAAA;SACF,KAAK,cAAA,CAAA,EAAiB;IACxB,IACD,OACF;QACE,MAAM;eACA,KAAK,YAAA,KAAiB,aAAa,CAAE,CAAA,GAAG,KAAK,QAAA;YACjD,KAAK,cAAA;YACL;SACD,CAAC,IAAA,CAAK,IAAI;SACV,KAAK,cAAA,CAAA,EAAiB;YACrB,GAAG,WAAA;aACF,KAAA,EAAO;QACT;IACF;IAEP,IAAI,KAAK,MAAA,KAAW,eAClB,SAAS,OAAA,GAAU;aACV,KAAK,MAAA,KAAW,uBAAuB,KAAK,MAAA,KAAW,UAChE,SAAS,OAAA,GAAU;IAGrB,IACE,KAAK,MAAA,KAAW,YAAA,CACf,WAAW,YACV,WAAW,YACX,WAAW,YACV,UAAU,YAAY,MAAM,OAAA,CAAQ,SAAS,IAAA,CAAK,GAErD,QAAQ,IAAA,CACN,uGACD;IAGH,OAAO;AACR","debugId":null}},
    {"offset": {"line": 9653, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/dist/utils/zod-to-json-schema/index.js"],"sourcesContent":["import { defaultOptions, getDefaultOptions, ignoreOverride } from \"./Options.js\";\nimport { getRefs } from \"./Refs.js\";\nimport { addErrorMessage, setResponseValueAndErrors } from \"./errorMessages.js\";\nimport { getRelativePath } from \"./getRelativePath.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseStringDef, zodPatterns } from \"./parsers/string.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseUnionDef, primitiveMappings } from \"./parsers/union.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nimport { selectParser } from \"./selectParser.js\";\nimport { parseDef } from \"./parseDef.js\";\nimport { zodToJsonSchema } from \"./zodToJsonSchema.js\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9732, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/utils/json_schema.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/utils/json_schema.ts"],"sourcesContent":["import { toJSONSchema } from \"zod/v4/core\";\nimport { dereference, type Schema } from \"@cfworker/json-schema\";\nimport {\n  isZodSchemaV3,\n  isZodSchemaV4,\n  InteropZodType,\n  interopZodObjectStrict,\n  isZodObjectV4,\n  ZodObjectV4,\n  interopZodTransformInputSchema,\n} from \"./types/zod.js\";\nimport {\n  type JsonSchema7Type as JSONSchema,\n  zodToJsonSchema,\n} from \"./zod-to-json-schema/index.js\";\n\nexport { deepCompareStrict, Validator } from \"@cfworker/json-schema\";\n\n/**\n * Converts a Zod schema or JSON schema to a JSON schema.\n * @param schema - The schema to convert.\n * @returns The converted schema.\n */\nexport function toJsonSchema(schema: InteropZodType | JSONSchema): JSONSchema {\n  if (isZodSchemaV4(schema)) {\n    const inputSchema = interopZodTransformInputSchema(schema, true);\n    if (isZodObjectV4(inputSchema)) {\n      const strictSchema = interopZodObjectStrict(\n        inputSchema,\n        true\n      ) as ZodObjectV4;\n      return toJSONSchema(strictSchema);\n    } else {\n      return toJSONSchema(schema);\n    }\n  }\n  if (isZodSchemaV3(schema)) {\n    return zodToJsonSchema(schema);\n  }\n  return schema as JSONSchema;\n}\n\n/**\n * Validates if a JSON schema validates only strings. May return false negatives in some edge cases\n * (like recursive or unresolvable refs).\n *\n * @param schema - The schema to validate.\n * @returns `true` if the schema validates only strings, `false` otherwise.\n */\nexport function validatesOnlyStrings(schema: unknown): boolean {\n  // Null, undefined, or empty schema\n  if (\n    !schema ||\n    typeof schema !== \"object\" ||\n    Object.keys(schema).length === 0 ||\n    Array.isArray(schema)\n  ) {\n    return false; // Validates anything, not just strings\n  }\n\n  // Explicit type constraint\n  if (\"type\" in schema) {\n    if (typeof schema.type === \"string\") {\n      return schema.type === \"string\";\n    }\n\n    if (Array.isArray(schema.type)) {\n      // not sure why someone would do `\"type\": [\"string\"]` or especially `\"type\": [\"string\",\n      // \"string\", \"string\", ...]` but we're not here to judge\n      return schema.type.every((t) => t === \"string\");\n    }\n    return false; // Invalid or non-string type\n  }\n\n  // Enum with only string values\n  if (\"enum\" in schema) {\n    return (\n      Array.isArray(schema.enum) &&\n      schema.enum.length > 0 &&\n      schema.enum.every((val) => typeof val === \"string\")\n    );\n  }\n\n  // String constant\n  if (\"const\" in schema) {\n    return typeof schema.const === \"string\";\n  }\n\n  // Schema combinations\n  if (\"allOf\" in schema && Array.isArray(schema.allOf)) {\n    // If any subschema validates only strings, then the overall schema validates only strings\n    return schema.allOf.some((subschema) => validatesOnlyStrings(subschema));\n  }\n\n  if (\n    (\"anyOf\" in schema && Array.isArray(schema.anyOf)) ||\n    (\"oneOf\" in schema && Array.isArray(schema.oneOf))\n  ) {\n    const subschemas = (\n      \"anyOf\" in schema ? schema.anyOf : schema.oneOf\n    ) as unknown[];\n\n    // All subschemas must validate only strings\n    return (\n      subschemas.length > 0 &&\n      subschemas.every((subschema) => validatesOnlyStrings(subschema))\n    );\n  }\n\n  // We're not going to try on this one, it's too complex - we just assume if it has a \"not\" key and hasn't matched one of the above checks, it's not a string schema.\n  if (\"not\" in schema) {\n    return false; // The not case can validate non-strings\n  }\n\n  if (\"$ref\" in schema && typeof schema.$ref === \"string\") {\n    const ref = schema.$ref as string;\n    const resolved = dereference(schema as Schema);\n    if (resolved[ref]) {\n      return validatesOnlyStrings(resolved[ref]);\n    }\n    return false;\n  }\n\n  // ignore recursive refs and other cases where type is omitted for now\n  // ignore other cases for now where type is omitted\n\n  return false;\n}\n\n// Re-export of the types used throughout langchain for json schema serialization.\n// The plan is to eventually nix zod-to-json-schema altogether in place for\n// zod v4 / a more standardized way of serializing validated inputs, so its re-exported\n// here to remove the dependency on zod-to-json-schema in downstream packages until\n// a determination is made.\n\nexport {\n  type JsonSchema7Type,\n  type JsonSchema7Type as JSONSchema,\n  type JsonSchema7ArrayType,\n  type JsonSchema7ObjectType,\n  type JsonSchema7StringType,\n  type JsonSchema7NumberType,\n  type JsonSchema7NullableType,\n} from \"./zod-to-json-schema/index.js\";\n"],"names":["schema: InteropZodType | JSONSchema","schema: unknown"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuBA,SAAgB,aAAaA,MAAAA,EAAiD;IAC5E,QAAI,iSAAA,EAAc,OAAO,EAAE;QACzB,MAAM,kBAAc,kTAAA,EAA+B,QAAQ,KAAK;QAChE,QAAI,iSAAA,EAAc,YAAY,EAAE;YAC9B,MAAM,mBAAe,0SAAA,EACnB,aACA,KACD;YACD,WAAO,6NAAA,EAAa,aAAa;QAClC,MACC,CAAA,WAAO,6NAAA,EAAa,OAAO;IAE9B;IACD,QAAI,iSAAA,EAAc,OAAO,CACvB,CAAA,WAAO,qUAAA,EAAgB,OAAO;IAEhC,OAAO;AACR;;;;;;;GASD,SAAgB,qBAAqBC,MAAAA,EAA0B;IAE7D,IACE,CAAC,UACD,OAAO,WAAW,YAClB,OAAO,IAAA,CAAK,OAAO,CAAC,MAAA,KAAW,KAC/B,MAAM,OAAA,CAAQ,OAAO,CAErB,CAAA,OAAO;IAIT,IAAI,UAAU,QAAQ;QACpB,IAAI,OAAO,OAAO,IAAA,KAAS,SACzB,CAAA,OAAO,OAAO,IAAA,KAAS;QAGzB,IAAI,MAAM,OAAA,CAAQ,OAAO,IAAA,CAAK,CAG5B,CAAA,OAAO,OAAO,IAAA,CAAK,KAAA,CAAM,CAAC,IAAM,MAAM,SAAS;QAEjD,OAAO;IACR;IAGD,IAAI,UAAU,OACZ,CAAA,OACE,MAAM,OAAA,CAAQ,OAAO,IAAA,CAAK,IAC1B,OAAO,IAAA,CAAK,MAAA,GAAS,KACrB,OAAO,IAAA,CAAK,KAAA,CAAM,CAAC,MAAQ,OAAO,QAAQ,SAAS;IAKvD,IAAI,WAAW,OACb,CAAA,OAAO,OAAO,OAAO,KAAA,KAAU;IAIjC,IAAI,WAAW,UAAU,MAAM,OAAA,CAAQ,OAAO,KAAA,CAAM,CAElD,CAAA,OAAO,OAAO,KAAA,CAAM,IAAA,CAAK,CAAC,YAAc,qBAAqB,UAAU,CAAC;IAG1E,IACG,WAAW,UAAU,MAAM,OAAA,CAAQ,OAAO,KAAA,CAAM,IAChD,WAAW,UAAU,MAAM,OAAA,CAAQ,OAAO,KAAA,CAAM,EACjD;QACA,MAAM,aACJ,WAAW,SAAS,OAAO,KAAA,GAAQ,OAAO,KAAA;QAI5C,OACE,WAAW,MAAA,GAAS,KACpB,WAAW,KAAA,CAAM,CAAC,YAAc,qBAAqB,UAAU,CAAC;IAEnE;IAGD,IAAI,SAAS,OACX,CAAA,OAAO;IAGT,IAAI,UAAU,UAAU,OAAO,OAAO,IAAA,KAAS,UAAU;QACvD,MAAM,MAAM,OAAO,IAAA;QACnB,MAAM,eAAW,oQAAA,EAAY,OAAiB;QAC9C,IAAI,QAAA,CAAS,IAAA,CACX,CAAA,OAAO,qBAAqB,QAAA,CAAS,IAAA,CAAK;QAE5C,OAAO;IACR;IAKD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 9813, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/graph.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/graph.ts"],"sourcesContent":["import { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport type {\n  RunnableInterface,\n  RunnableIOSchema,\n  Node,\n  Edge,\n} from \"./types.js\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidImage } from \"./graph_mermaid.js\";\nimport { toJsonSchema } from \"../utils/json_schema.js\";\n\nexport { Node, Edge };\n\nfunction nodeDataStr(\n  id: string | undefined,\n  data: RunnableInterface | RunnableIOSchema\n): string {\n  if (id !== undefined && !isUuid(id)) {\n    return id;\n  } else if (isRunnableInterface(data)) {\n    try {\n      let dataStr = data.getName();\n      dataStr = dataStr.startsWith(\"Runnable\")\n        ? dataStr.slice(\"Runnable\".length)\n        : dataStr;\n      return dataStr;\n    } catch {\n      return data.getName();\n    }\n  } else {\n    return data.name ?? \"UnknownSchema\";\n  }\n}\n\nfunction nodeDataJson(node: Node) {\n  // if node.data implements Runnable\n  if (isRunnableInterface(node.data)) {\n    return {\n      type: \"runnable\",\n      data: {\n        id: node.data.lc_id,\n        name: node.data.getName(),\n      },\n    };\n  } else {\n    return {\n      type: \"schema\",\n      data: { ...toJsonSchema(node.data.schema), title: node.data.name },\n    };\n  }\n}\n\nexport class Graph {\n  nodes: Record<string, Node> = {};\n\n  edges: Edge[] = [];\n\n  constructor(params?: { nodes: Record<string, Node>; edges: Edge[] }) {\n    this.nodes = params?.nodes ?? this.nodes;\n    this.edges = params?.edges ?? this.edges;\n  }\n\n  // Convert the graph to a JSON-serializable format.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  toJSON(): Record<string, any> {\n    const stableNodeIds: Record<string, string | number> = {};\n    Object.values(this.nodes).forEach((node, i) => {\n      stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n    });\n\n    return {\n      nodes: Object.values(this.nodes).map((node) => ({\n        id: stableNodeIds[node.id],\n        ...nodeDataJson(node),\n      })),\n      edges: this.edges.map((edge) => {\n        const item: Record<string, unknown> = {\n          source: stableNodeIds[edge.source],\n          target: stableNodeIds[edge.target],\n        };\n\n        if (typeof edge.data !== \"undefined\") {\n          item.data = edge.data;\n        }\n\n        if (typeof edge.conditional !== \"undefined\") {\n          item.conditional = edge.conditional;\n        }\n        return item;\n      }),\n    };\n  }\n\n  addNode(\n    data: RunnableInterface | RunnableIOSchema,\n    id?: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: Record<string, any>\n  ): Node {\n    if (id !== undefined && this.nodes[id] !== undefined) {\n      throw new Error(`Node with id ${id} already exists`);\n    }\n    const nodeId = id ?? uuidv4();\n    const node: Node = {\n      id: nodeId,\n      data,\n      name: nodeDataStr(id, data),\n      metadata,\n    };\n    this.nodes[nodeId] = node;\n    return node;\n  }\n\n  removeNode(node: Node): void {\n    // Remove the node from the nodes map\n    delete this.nodes[node.id];\n\n    // Filter out edges connected to the node\n    this.edges = this.edges.filter(\n      (edge) => edge.source !== node.id && edge.target !== node.id\n    );\n  }\n\n  addEdge(\n    source: Node,\n    target: Node,\n    data?: string,\n    conditional?: boolean\n  ): Edge {\n    if (this.nodes[source.id] === undefined) {\n      throw new Error(`Source node ${source.id} not in graph`);\n    }\n    if (this.nodes[target.id] === undefined) {\n      throw new Error(`Target node ${target.id} not in graph`);\n    }\n    const edge: Edge = {\n      source: source.id,\n      target: target.id,\n      data,\n      conditional,\n    };\n    this.edges.push(edge);\n    return edge;\n  }\n\n  firstNode(): Node | undefined {\n    return _firstNode(this);\n  }\n\n  lastNode(): Node | undefined {\n    return _lastNode(this);\n  }\n\n  /**\n   * Add all nodes and edges from another graph.\n   * Note this doesn't check for duplicates, nor does it connect the graphs.\n   */\n  extend(graph: Graph, prefix = \"\") {\n    let finalPrefix = prefix;\n    const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n    if (nodeIds.every(isUuid)) {\n      finalPrefix = \"\";\n    }\n\n    const prefixed = (id: string) => {\n      return finalPrefix ? `${finalPrefix}:${id}` : id;\n    };\n\n    Object.entries(graph.nodes).forEach(([key, value]) => {\n      this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n    });\n\n    const newEdges = graph.edges.map((edge) => {\n      return {\n        ...edge,\n        source: prefixed(edge.source),\n        target: prefixed(edge.target),\n      };\n    });\n    // Add all edges from the other graph\n    this.edges = [...this.edges, ...newEdges];\n    const first = graph.firstNode();\n    const last = graph.lastNode();\n    return [\n      first ? { id: prefixed(first.id), data: first.data } : undefined,\n      last ? { id: prefixed(last.id), data: last.data } : undefined,\n    ];\n  }\n\n  trimFirstNode(): void {\n    const firstNode = this.firstNode();\n    if (firstNode && _firstNode(this, [firstNode.id])) {\n      this.removeNode(firstNode);\n    }\n  }\n\n  trimLastNode(): void {\n    const lastNode = this.lastNode();\n    if (lastNode && _lastNode(this, [lastNode.id])) {\n      this.removeNode(lastNode);\n    }\n  }\n\n  /**\n   * Return a new graph with all nodes re-identified,\n   * using their unique, readable names where possible.\n   */\n  reid(): Graph {\n    const nodeLabels: Record<string, string> = Object.fromEntries(\n      Object.values(this.nodes).map((node) => [node.id, node.name])\n    );\n    const nodeLabelCounts = new Map<string, number>();\n    Object.values(nodeLabels).forEach((label) => {\n      nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n    });\n\n    const getNodeId = (nodeId: string): string => {\n      const label = nodeLabels[nodeId];\n      if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n        return label;\n      } else {\n        return nodeId;\n      }\n    };\n\n    return new Graph({\n      nodes: Object.fromEntries(\n        Object.entries(this.nodes).map(([id, node]) => [\n          getNodeId(id),\n          { ...node, id: getNodeId(id) },\n        ])\n      ),\n      edges: this.edges.map((edge) => ({\n        ...edge,\n        source: getNodeId(edge.source),\n        target: getNodeId(edge.target),\n      })),\n    });\n  }\n\n  drawMermaid(params?: {\n    withStyles?: boolean;\n    curveStyle?: string;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n  }): string {\n    const {\n      withStyles,\n      curveStyle,\n      nodeColors = {\n        default: \"fill:#f2f0ff,line-height:1.2\",\n        first: \"fill-opacity:0\",\n        last: \"fill:#bfb6fc\",\n      },\n      wrapLabelNWords,\n    } = params ?? {};\n    const graph = this.reid();\n    const firstNode = graph.firstNode();\n\n    const lastNode = graph.lastNode();\n\n    return drawMermaid(graph.nodes, graph.edges, {\n      firstNode: firstNode?.id,\n      lastNode: lastNode?.id,\n      withStyles,\n      curveStyle,\n      nodeColors,\n      wrapLabelNWords,\n    });\n  }\n\n  async drawMermaidPng(params?: {\n    withStyles?: boolean;\n    curveStyle?: string;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n    backgroundColor?: string;\n  }): Promise<Blob> {\n    const mermaidSyntax = this.drawMermaid(params);\n    return drawMermaidImage(mermaidSyntax, {\n      backgroundColor: params?.backgroundColor,\n    });\n  }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph: Graph, exclude: string[] = []): Node | undefined {\n  const targets = new Set(\n    graph.edges\n      .filter((edge) => !exclude.includes(edge.source))\n      .map((edge) => edge.target)\n  );\n\n  const found: Node[] = [];\n  for (const node of Object.values(graph.nodes)) {\n    if (!exclude.includes(node.id) && !targets.has(node.id)) {\n      found.push(node);\n    }\n  }\n  return found.length === 1 ? found[0] : undefined;\n}\n\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph: Graph, exclude: string[] = []): Node | undefined {\n  const sources = new Set(\n    graph.edges\n      .filter((edge) => !exclude.includes(edge.target))\n      .map((edge) => edge.source)\n  );\n\n  const found: Node[] = [];\n  for (const node of Object.values(graph.nodes)) {\n    if (!exclude.includes(node.id) && !sources.has(node.id)) {\n      found.push(node);\n    }\n  }\n  return found.length === 1 ? found[0] : undefined;\n}\n"],"names":["id: string | undefined","data: RunnableInterface | RunnableIOSchema","isUuid","node: Node","params?: { nodes: Record<string, Node>; edges: Edge[] }","stableNodeIds: Record<string, string | number>","item: Record<string, unknown>","id?: string","metadata?: Record<string, any>","uuidv4","source: Node","target: Node","data?: string","conditional?: boolean","edge: Edge","graph: Graph","id: string","nodeLabels: Record<string, string>","nodeId: string","params?: {\n    withStyles?: boolean;\n    curveStyle?: string;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n  }","params?: {\n    withStyles?: boolean;\n    curveStyle?: string;\n    nodeColors?: Record<string, string>;\n    wrapLabelNWords?: number;\n    backgroundColor?: string;\n  }","exclude: string[]","found: Node[]"],"mappings":"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","debugId":null}},
    {"offset": {"line": 10061, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/wrappers.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/wrappers.ts"],"sourcesContent":["import { IterableReadableStream } from \"../utils/stream.js\";\n\nexport function convertToHttpEventStream(stream: AsyncGenerator) {\n  const encoder = new TextEncoder();\n  const finalStream = new ReadableStream<Uint8Array>({\n    async start(controller) {\n      for await (const chunk of stream) {\n        controller.enqueue(\n          encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`)\n        );\n      }\n      controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n      controller.close();\n    },\n  });\n  return IterableReadableStream.fromReadableStream(finalStream);\n}\n"],"names":["stream: AsyncGenerator"],"mappings":";;;;;;;AAEA,SAAgB,yBAAyBA,MAAAA,EAAwB;IAC/D,MAAM,UAAU,IAAI;IACpB,MAAM,cAAc,IAAI,eAA2B;QACjD,MAAM,OAAM,UAAA,EAAY;YACtB,WAAW,MAAM,SAAS,OACxB,WAAW,OAAA,CACT,QAAQ,MAAA,CAAO,CAAC,mBAAmB,EAAE,KAAK,SAAA,CAAU,MAAM,CAAC,IAAI,CAAC,CAAC,CAClE;YAEH,WAAW,OAAA,CAAQ,QAAQ,MAAA,CAAO,iBAAiB,CAAC;YACpD,WAAW,KAAA,EAAO;QACnB;IACF;IACD,OAAO,oSAAA,CAAuB,kBAAA,CAAmB,YAAY;AAC9D","debugId":null}},
    {"offset": {"line": 10085, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/iter.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/iter.ts"],"sourcesContent":["import type { RunnableConfig } from \"../runnables/types.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { pickRunnableConfigKeys } from \"./config.js\";\n\nexport function isIterableIterator(\n  thing: unknown\n): thing is IterableIterator<unknown> {\n  return (\n    typeof thing === \"object\" &&\n    thing !== null &&\n    typeof (thing as Generator)[Symbol.iterator] === \"function\" &&\n    // avoid detecting array/set as iterator\n    typeof (thing as Generator).next === \"function\"\n  );\n}\n\nexport const isIterator = (x: unknown): x is Iterator<unknown> =>\n  x != null &&\n  typeof x === \"object\" &&\n  \"next\" in x &&\n  typeof x.next === \"function\";\n\nexport function isAsyncIterable(\n  thing: unknown\n): thing is AsyncIterable<unknown> {\n  return (\n    typeof thing === \"object\" &&\n    thing !== null &&\n    typeof (thing as AsyncIterable<unknown>)[Symbol.asyncIterator] ===\n      \"function\"\n  );\n}\n\nexport function* consumeIteratorInContext<T>(\n  context: Partial<RunnableConfig> | undefined,\n  iter: IterableIterator<T>\n): IterableIterator<T> {\n  while (true) {\n    const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(\n      pickRunnableConfigKeys(context),\n      iter.next.bind(iter),\n      true\n    );\n    if (done) {\n      break;\n    } else {\n      yield value;\n    }\n  }\n}\n\nexport async function* consumeAsyncIterableInContext<T>(\n  context: Partial<RunnableConfig> | undefined,\n  iter: AsyncIterable<T>\n): AsyncIterableIterator<T> {\n  const iterator = iter[Symbol.asyncIterator]();\n  while (true) {\n    const { value, done } =\n      await AsyncLocalStorageProviderSingleton.runWithConfig(\n        pickRunnableConfigKeys(context),\n        iterator.next.bind(iter),\n        true\n      );\n    if (done) {\n      break;\n    } else {\n      yield value;\n    }\n  }\n}\n"],"names":["thing: unknown","x: unknown","context: Partial<RunnableConfig> | undefined","iter: IterableIterator<T>","iter: AsyncIterable<T>"],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,SAAgB,mBACdA,KAAAA,EACoC;IACpC,OACE,OAAO,UAAU,YACjB,UAAU,QACV,OAAQ,KAAA,CAAoB,OAAO,QAAA,CAAA,KAAc,cAEjD,OAAQ,MAAoB,IAAA,KAAS;AAExC;AAED,MAAa,aAAa,CAACC,IACzB,KAAK,QACL,OAAO,MAAM,YACb,UAAU,KACV,OAAO,EAAE,IAAA,KAAS;AAEpB,SAAgB,gBACdD,KAAAA,EACiC;IACjC,OACE,OAAO,UAAU,YACjB,UAAU,QACV,OAAQ,KAAA,CAAiC,OAAO,aAAA,CAAA,KAC9C;AAEL;AAED,UAAiB,yBACfE,OAAAA,EACAC,IAAAA,EACqB;IACrB,MAAO,KAAM;QACX,MAAM,EAAE,KAAA,EAAO,IAAA,EAAM,GAAG,2UAAA,CAAmC,aAAA,KACzD,wSAAA,EAAuB,QAAQ,EAC/B,KAAK,IAAA,CAAK,IAAA,CAAK,KAAK,EACpB,KACD;QACD,IAAI,KACF,CAAA;aAEA,MAAM;IAET;AACF;AAED,gBAAuB,8BACrBD,OAAAA,EACAE,IAAAA,EAC0B;IAC1B,MAAM,WAAW,IAAA,CAAK,OAAO,aAAA,CAAA,EAAgB;IAC7C,MAAO,KAAM;QACX,MAAM,EAAE,KAAA,EAAO,IAAA,EAAM,GACnB,MAAM,2UAAA,CAAmC,aAAA,KACvC,wSAAA,EAAuB,QAAQ,EAC/B,SAAS,IAAA,CAAK,IAAA,CAAK,KAAK,EACxB,KACD;QACH,IAAI,KACF,CAAA;aAEA,MAAM;IAET;AACF","debugId":null}},
    {"offset": {"line": 10132, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/runnables/base.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/runnables/base.ts"],"sourcesContent":["import { z } from \"zod/v3\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  type TraceableFunction,\n  isTraceableFunction,\n} from \"langsmith/singletons/traceable\";\nimport type {\n  RunnableInterface,\n  RunnableBatchOptions,\n  RunnableConfig,\n} from \"./types.js\";\nimport { CallbackManagerForChainRun } from \"../callbacks/manager.js\";\nimport {\n  LogStreamCallbackHandler,\n  LogStreamCallbackHandlerInput,\n  RunLog,\n  RunLogPatch,\n  isLogStreamHandler,\n} from \"../tracers/log_stream.js\";\nimport {\n  EventStreamCallbackHandler,\n  EventStreamCallbackHandlerInput,\n  StreamEvent,\n  StreamEventData,\n  isStreamEventsHandler,\n} from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport {\n  IterableReadableStream,\n  concat,\n  atee,\n  pipeGeneratorWithSetup,\n  AsyncGeneratorWithSetup,\n} from \"../utils/stream.js\";\nimport { raceWithSignal, getAbortSignalError } from \"../utils/signal.js\";\nimport {\n  DEFAULT_RECURSION_LIMIT,\n  ensureConfig,\n  getCallbackManagerForConfig,\n  mergeConfigs,\n  patchConfig,\n  pickRunnableConfigKeys,\n} from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { Run } from \"../tracers/base.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport {\n  consumeAsyncIterableInContext,\n  consumeIteratorInContext,\n  isAsyncIterable,\n  isIterableIterator,\n  isIterator,\n} from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\nimport { ToolCall } from \"../messages/tool.js\";\nimport {\n  getSchemaDescription,\n  InferInteropZodOutput,\n  interopParseAsync,\n  InteropZodType,\n  isSimpleStringZodSchema,\n} from \"../utils/types/zod.js\";\n\nexport { type RunnableInterface, RunnableBatchOptions };\n\nexport type RunnableFunc<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n> = (\n  input: RunInput,\n  options:\n    | CallOptions\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | Record<string, any>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & CallOptions)\n) => RunOutput | Promise<RunOutput>;\n\nexport type RunnableMapLike<RunInput, RunOutput> = {\n  [K in keyof RunOutput]: RunnableLike<RunInput, RunOutput[K]>;\n};\n\nexport type RunnableLike<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunInput = any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunOutput = any,\n  CallOptions extends RunnableConfig = RunnableConfig\n> =\n  | RunnableInterface<RunInput, RunOutput, CallOptions>\n  | RunnableFunc<RunInput, RunOutput, CallOptions>\n  | RunnableMapLike<RunInput, RunOutput>;\n\nexport type RunnableRetryFailedAttemptHandler = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  input: any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => any;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value: any, defaultKey: string) {\n  return value &&\n    !Array.isArray(value) &&\n    // eslint-disable-next-line no-instanceof/no-instanceof\n    !(value instanceof Date) &&\n    typeof value === \"object\"\n    ? value\n    : { [defaultKey]: value };\n}\n\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport abstract class Runnable<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunInput = any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunOutput = any,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >\n  extends Serializable\n  implements RunnableInterface<RunInput, RunOutput, CallOptions>\n{\n  protected lc_runnable = true;\n\n  name?: string;\n\n  getName(suffix?: string): string {\n    const name =\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.name ?? (this.constructor as any).lc_name() ?? this.constructor.name;\n    return suffix ? `${name}${suffix}` : name;\n  }\n\n  abstract invoke(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<RunOutput>;\n\n  /**\n   * Add retry logic to an existing runnable.\n   * @param fields.stopAfterAttempt The number of attempts to retry.\n   * @param fields.onFailedAttempt A function that is called when a retry fails.\n   * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n   */\n  withRetry(fields?: {\n    stopAfterAttempt?: number;\n    onFailedAttempt?: RunnableRetryFailedAttemptHandler;\n  }): RunnableRetry<RunInput, RunOutput, CallOptions> {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableRetry({\n      bound: this,\n      kwargs: {},\n      config: {},\n      maxAttemptNumber: fields?.stopAfterAttempt,\n      ...fields,\n    });\n  }\n\n  /**\n   * Bind config to a Runnable, returning a new Runnable.\n   * @param config New configuration parameters to attach to the new runnable.\n   * @returns A new RunnableBinding with a config matching what's passed.\n   */\n  withConfig(\n    config: Partial<CallOptions>\n  ): Runnable<RunInput, RunOutput, CallOptions> {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableBinding({\n      bound: this,\n      config,\n      kwargs: {},\n    });\n  }\n\n  /**\n   * Create a new runnable from the current one that will try invoking\n   * other passed fallback runnables if the initial invocation fails.\n   * @param fields.fallbacks Other runnables to call if the runnable errors.\n   * @returns A new RunnableWithFallbacks.\n   */\n  withFallbacks(\n    fields:\n      | {\n          fallbacks: Runnable<RunInput, RunOutput>[];\n        }\n      | Runnable<RunInput, RunOutput>[]\n  ): RunnableWithFallbacks<RunInput, RunOutput> {\n    const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableWithFallbacks<RunInput, RunOutput>({\n      runnable: this,\n      fallbacks,\n    });\n  }\n\n  protected _getOptionsList<O extends CallOptions & { runType?: string }>(\n    options: Partial<O> | Partial<O>[],\n    length = 0\n  ): Partial<O>[] {\n    if (Array.isArray(options) && options.length !== length) {\n      throw new Error(\n        `Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`\n      );\n    }\n\n    if (Array.isArray(options)) {\n      return options.map(ensureConfig);\n    }\n    if (length > 1 && !Array.isArray(options) && options.runId) {\n      console.warn(\n        \"Provided runId will be used only for the first element of the batch.\"\n      );\n      const subsequent = Object.fromEntries(\n        Object.entries(options).filter(([key]) => key !== \"runId\")\n      );\n\n      return Array.from({ length }, (_, i) =>\n        ensureConfig(i === 0 ? options : subsequent)\n      ) as Partial<O>[];\n    }\n    return Array.from({ length }, () => ensureConfig(options));\n  }\n\n  /**\n   * Default implementation of batch, which calls invoke N times.\n   * Subclasses should override this method if they can batch more efficiently.\n   * @param inputs Array of inputs to each batch call.\n   * @param options Either a single call options object to apply to each batch call or an array for each call.\n   * @param batchOptions.returnExceptions Whether to return errors rather than throwing on the first one\n   * @returns An array of RunOutputs, or mixed RunOutputs and errors if batchOptions.returnExceptions is set\n   */\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions?: false }\n  ): Promise<RunOutput[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions: true }\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    const configList = this._getOptionsList(options ?? {}, inputs.length);\n    const maxConcurrency =\n      configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n    const caller = new AsyncCaller({\n      maxConcurrency,\n      onFailedAttempt: (e) => {\n        throw e;\n      },\n    });\n    const batchCalls = inputs.map((input, i) =>\n      caller.call(async () => {\n        try {\n          const result = await this.invoke(input, configList[i]);\n          return result;\n        } catch (e) {\n          if (batchOptions?.returnExceptions) {\n            return e as Error;\n          }\n          throw e;\n        }\n      })\n    );\n    return Promise.all(batchCalls);\n  }\n\n  /**\n   * Default streaming implementation.\n   * Subclasses should override this method if they support streaming output.\n   * @param input\n   * @param options\n   */\n  async *_streamIterator(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): AsyncGenerator<RunOutput> {\n    yield this.invoke(input, options);\n  }\n\n  /**\n   * Stream output in chunks.\n   * @param input\n   * @param options\n   * @returns A readable stream that is also an iterable.\n   */\n  async stream(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<IterableReadableStream<RunOutput>> {\n    // Buffer the first streamed chunk to allow for initial errors\n    // to surface immediately.\n    const config = ensureConfig(options);\n    const wrappedGenerator = new AsyncGeneratorWithSetup({\n      generator: this._streamIterator(input, config),\n      config,\n    });\n    await wrappedGenerator.setup;\n    return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n  }\n\n  protected _separateRunnableConfigFromCallOptions(\n    options?: Partial<CallOptions>\n  ): [RunnableConfig, Omit<Partial<CallOptions>, keyof RunnableConfig>] {\n    let runnableConfig;\n    if (options === undefined) {\n      runnableConfig = ensureConfig(options);\n    } else {\n      runnableConfig = ensureConfig({\n        callbacks: options.callbacks,\n        tags: options.tags,\n        metadata: options.metadata,\n        runName: options.runName,\n        configurable: options.configurable,\n        recursionLimit: options.recursionLimit,\n        maxConcurrency: options.maxConcurrency,\n        runId: options.runId,\n        timeout: options.timeout,\n        signal: options.signal,\n      });\n    }\n    const callOptions = { ...(options as Partial<CallOptions>) };\n    delete callOptions.callbacks;\n    delete callOptions.tags;\n    delete callOptions.metadata;\n    delete callOptions.runName;\n    delete callOptions.configurable;\n    delete callOptions.recursionLimit;\n    delete callOptions.maxConcurrency;\n    delete callOptions.runId;\n    delete callOptions.timeout;\n    delete callOptions.signal;\n    return [runnableConfig, callOptions];\n  }\n\n  protected async _callWithConfig<T extends RunInput>(\n    func:\n      | ((input: T) => Promise<RunOutput>)\n      | ((\n          input: T,\n          config?: Partial<CallOptions>,\n          runManager?: CallbackManagerForChainRun\n        ) => Promise<RunOutput>),\n    input: T,\n    options?: Partial<CallOptions> & { runType?: string }\n  ) {\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      _coerceToDict(input, \"input\"),\n      config.runId,\n      config?.runType,\n      undefined,\n      undefined,\n      config?.runName ?? this.getName()\n    );\n    delete config.runId;\n    let output;\n    try {\n      const promise = func.call(this, input, config, runManager);\n      output = await raceWithSignal(promise, options?.signal);\n    } catch (e) {\n      await runManager?.handleChainError(e);\n      throw e;\n    }\n    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    return output;\n  }\n\n  /**\n   * Internal method that handles batching and configuration for a runnable\n   * It takes a function, input values, and optional configuration, and\n   * returns a promise that resolves to the output values.\n   * @param func The function to be executed for each input value.\n   * @param input The input values to be processed.\n   * @param config Optional configuration for the function execution.\n   * @returns A promise that resolves to the output values.\n   */\n  async _batchWithConfig<T extends RunInput>(\n    func: (\n      inputs: T[],\n      options?: Partial<CallOptions>[],\n      runManagers?: (CallbackManagerForChainRun | undefined)[],\n      batchOptions?: RunnableBatchOptions\n    ) => Promise<(RunOutput | Error)[]>,\n    inputs: T[],\n    options?:\n      | Partial<CallOptions & { runType?: string }>\n      | Partial<CallOptions & { runType?: string }>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n    const callbackManagers = await Promise.all(\n      optionsList.map(getCallbackManagerForConfig)\n    );\n    const runManagers = await Promise.all(\n      callbackManagers.map(async (callbackManager, i) => {\n        const handleStartRes = await callbackManager?.handleChainStart(\n          this.toJSON(),\n          _coerceToDict(inputs[i], \"input\"),\n          optionsList[i].runId,\n          optionsList[i].runType,\n          undefined,\n          undefined,\n          optionsList[i].runName ?? this.getName()\n        );\n        delete optionsList[i].runId;\n        return handleStartRes;\n      })\n    );\n    let outputs: (RunOutput | Error)[];\n    try {\n      const promise = func.call(\n        this,\n        inputs,\n        optionsList,\n        runManagers,\n        batchOptions\n      );\n      outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n    } catch (e) {\n      await Promise.all(\n        runManagers.map((runManager) => runManager?.handleChainError(e))\n      );\n      throw e;\n    }\n    await Promise.all(\n      runManagers.map((runManager) =>\n        runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))\n      )\n    );\n    return outputs;\n  }\n\n  /** @internal */\n  _concatOutputChunks<O>(first: O, second: O): O {\n    return concat(first, second);\n  }\n\n  /**\n   * Helper method to transform an Iterator of Input values into an Iterator of\n   * Output values, with callbacks.\n   * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n   */\n  protected async *_transformStreamWithConfig<\n    I extends RunInput,\n    O extends RunOutput\n  >(\n    inputGenerator: AsyncGenerator<I>,\n    transformer: (\n      generator: AsyncGenerator<I>,\n      runManager?: CallbackManagerForChainRun,\n      options?: Partial<CallOptions>\n    ) => AsyncGenerator<O>,\n    options?: Partial<CallOptions> & { runType?: string }\n  ): AsyncGenerator<O> {\n    let finalInput: I | undefined;\n    let finalInputSupported = true;\n    let finalOutput: O | undefined;\n    let finalOutputSupported = true;\n\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const outerThis = this;\n    async function* wrapInputForTracing() {\n      for await (const chunk of inputGenerator) {\n        if (finalInputSupported) {\n          if (finalInput === undefined) {\n            finalInput = chunk;\n          } else {\n            try {\n              finalInput = outerThis._concatOutputChunks(\n                finalInput,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                chunk as any\n              );\n            } catch {\n              finalInput = undefined;\n              finalInputSupported = false;\n            }\n          }\n        }\n        yield chunk;\n      }\n    }\n\n    let runManager: CallbackManagerForChainRun | undefined;\n    try {\n      const pipe = await pipeGeneratorWithSetup(\n        transformer.bind(this),\n        wrapInputForTracing(),\n        async () =>\n          callbackManager_?.handleChainStart(\n            this.toJSON(),\n            { input: \"\" },\n            config.runId,\n            config.runType,\n            undefined,\n            undefined,\n            config.runName ?? this.getName()\n          ),\n        options?.signal,\n        config\n      );\n      delete config.runId;\n      runManager = pipe.setup;\n\n      const streamEventsHandler = runManager?.handlers.find(\n        isStreamEventsHandler\n      );\n      let iterator = pipe.output;\n      if (streamEventsHandler !== undefined && runManager !== undefined) {\n        iterator = streamEventsHandler.tapOutputIterable(\n          runManager.runId,\n          iterator\n        );\n      }\n\n      const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n      if (streamLogHandler !== undefined && runManager !== undefined) {\n        iterator = streamLogHandler.tapOutputIterable(\n          runManager.runId,\n          iterator\n        );\n      }\n\n      for await (const chunk of iterator) {\n        yield chunk;\n        if (finalOutputSupported) {\n          if (finalOutput === undefined) {\n            finalOutput = chunk;\n          } else {\n            try {\n              finalOutput = this._concatOutputChunks(\n                finalOutput,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                chunk as any\n              );\n            } catch {\n              finalOutput = undefined;\n              finalOutputSupported = false;\n            }\n          }\n        }\n      }\n    } catch (e) {\n      await runManager?.handleChainError(e, undefined, undefined, undefined, {\n        inputs: _coerceToDict(finalInput, \"input\"),\n      });\n      throw e;\n    }\n    await runManager?.handleChainEnd(\n      finalOutput ?? {},\n      undefined,\n      undefined,\n      undefined,\n      { inputs: _coerceToDict(finalInput, \"input\") }\n    );\n  }\n\n  getGraph(_?: RunnableConfig): Graph {\n    const graph = new Graph();\n\n    // TODO: Add input schema for runnables\n    const inputNode = graph.addNode({\n      name: `${this.getName()}Input`,\n      schema: z.any(),\n    });\n\n    const runnableNode = graph.addNode(this);\n\n    // TODO: Add output schemas for runnables\n    const outputNode = graph.addNode({\n      name: `${this.getName()}Output`,\n      schema: z.any(),\n    });\n\n    graph.addEdge(inputNode, runnableNode);\n    graph.addEdge(runnableNode, outputNode);\n    return graph;\n  }\n\n  /**\n   * Create a new runnable sequence that runs each individual runnable in series,\n   * piping the output of one runnable into another runnable or runnable-like.\n   * @param coerceable A runnable, function, or object whose values are functions or runnables.\n   * @returns A new runnable sequence.\n   */\n  pipe<NewRunOutput>(\n    coerceable: RunnableLike<RunOutput, NewRunOutput>\n  ): Runnable<RunInput, Exclude<NewRunOutput, Error>> {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableSequence({\n      first: this,\n      last: _coerceToRunnable(coerceable),\n    });\n  }\n\n  /**\n   * Pick keys from the dict output of this runnable. Returns a new runnable.\n   */\n  pick(keys: string | string[]): Runnable {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return this.pipe(new RunnablePick(keys) as Runnable);\n  }\n\n  /**\n   * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n   */\n  assign(\n    mapping: RunnableMapLike<Record<string, unknown>, Record<string, unknown>>\n  ): Runnable {\n    return this.pipe(\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap<Record<string, unknown>>({ steps: mapping })\n      ) as Runnable\n    );\n  }\n\n  /**\n   * Default implementation of transform, which buffers input and then calls stream.\n   * Subclasses should override this method if they can start producing output while\n   * input is still being generated.\n   * @param generator\n   * @param options\n   */\n  async *transform(\n    generator: AsyncGenerator<RunInput>,\n    options: Partial<CallOptions>\n  ): AsyncGenerator<RunOutput> {\n    let finalChunk;\n    for await (const chunk of generator) {\n      if (finalChunk === undefined) {\n        finalChunk = chunk;\n      } else {\n        // Make a best effort to gather, for any type that supports concat.\n        // This method should throw an error if gathering fails.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        finalChunk = this._concatOutputChunks(finalChunk, chunk as any);\n      }\n    }\n    yield* this._streamIterator(finalChunk, ensureConfig(options));\n  }\n\n  /**\n   * Stream all output from a runnable, as reported to the callback system.\n   * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n   * Output is streamed as Log objects, which include a list of\n   * jsonpatch ops that describe how the state of the run has changed in each\n   * step, and the final state of the run.\n   * The jsonpatch ops can be applied in order to construct state.\n   * @param input\n   * @param options\n   * @param streamOptions\n   */\n  async *streamLog(\n    input: RunInput,\n    options?: Partial<CallOptions>,\n    streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">\n  ): AsyncGenerator<RunLogPatch> {\n    const logStreamCallbackHandler = new LogStreamCallbackHandler({\n      ...streamOptions,\n      autoClose: false,\n      _schemaFormat: \"original\",\n    });\n    const config = ensureConfig(options);\n    yield* this._streamLog(input, logStreamCallbackHandler, config);\n  }\n\n  protected async *_streamLog(\n    input: RunInput,\n    logStreamCallbackHandler: LogStreamCallbackHandler,\n    config: Partial<CallOptions>\n  ): AsyncGenerator<RunLogPatch> {\n    const { callbacks } = config;\n    if (callbacks === undefined) {\n      config.callbacks = [logStreamCallbackHandler];\n    } else if (Array.isArray(callbacks)) {\n      config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n    } else {\n      const copiedCallbacks = callbacks.copy();\n      copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n      config.callbacks = copiedCallbacks;\n    }\n    const runnableStreamPromise = this.stream(input, config);\n    async function consumeRunnableStream() {\n      try {\n        const runnableStream = await runnableStreamPromise;\n        for await (const chunk of runnableStream) {\n          const patch = new RunLogPatch({\n            ops: [\n              {\n                op: \"add\",\n                path: \"/streamed_output/-\",\n                value: chunk,\n              },\n            ],\n          });\n          await logStreamCallbackHandler.writer.write(patch);\n        }\n      } finally {\n        await logStreamCallbackHandler.writer.close();\n      }\n    }\n    const runnableStreamConsumePromise = consumeRunnableStream();\n    try {\n      for await (const log of logStreamCallbackHandler) {\n        yield log;\n      }\n    } finally {\n      await runnableStreamConsumePromise;\n    }\n  }\n\n  /**\n   * Generate a stream of events emitted by the internal steps of the runnable.\n   *\n   * Use to create an iterator over StreamEvents that provide real-time information\n   * about the progress of the runnable, including StreamEvents from intermediate\n   * results.\n   *\n   * A StreamEvent is a dictionary with the following schema:\n   *\n   * - `event`: string - Event names are of the format: on_[runnable_type]_(start|stream|end).\n   * - `name`: string - The name of the runnable that generated the event.\n   * - `run_id`: string - Randomly generated ID associated with the given execution of\n   *   the runnable that emitted the event. A child runnable that gets invoked as part of the execution of a\n   *   parent runnable is assigned its own unique ID.\n   * - `tags`: string[] - The tags of the runnable that generated the event.\n   * - `metadata`: Record<string, any> - The metadata of the runnable that generated the event.\n   * - `data`: Record<string, any>\n   *\n   * Below is a table that illustrates some events that might be emitted by various\n   * chains. Metadata fields have been omitted from the table for brevity.\n   * Chain definitions have been included after the table.\n   *\n   * **ATTENTION** This reference table is for the V2 version of the schema.\n   *\n   * ```md\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | event                | input                       | output/chunk                             |\n   * +======================+=============================+==========================================+\n   * | on_chat_model_start  | {\"messages\": BaseMessage[]} |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_chat_model_stream |                             | AIMessageChunk(\"hello\")                  |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_chat_model_end    | {\"messages\": BaseMessage[]} | AIMessageChunk(\"hello world\")            |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_llm_start         | {'input': 'hello'}          |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_llm_stream        |                             | 'Hello'                                  |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_llm_end           | 'Hello human!'              |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_chain_start       |                             |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_chain_stream      |                             | \"hello world!\"                           |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_chain_end         | [Document(...)]             | \"hello world!, goodbye world!\"           |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_tool_start        | {\"x\": 1, \"y\": \"2\"}          |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_tool_end          |                             | {\"x\": 1, \"y\": \"2\"}                       |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_retriever_start   | {\"query\": \"hello\"}          |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_retriever_end     | {\"query\": \"hello\"}          | [Document(...), ..]                      |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_prompt_start      | {\"question\": \"hello\"}       |                                          |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * | on_prompt_end        | {\"question\": \"hello\"}       | ChatPromptValue(messages: BaseMessage[]) |\n   * +----------------------+-----------------------------+------------------------------------------+\n   * ```\n   *\n   * The \"on_chain_*\" events are the default for Runnables that don't fit one of the above categories.\n   *\n   * In addition to the standard events above, users can also dispatch custom events.\n   *\n   * Custom events will be only be surfaced with in the `v2` version of the API!\n   *\n   * A custom event has following format:\n   *\n   * ```md\n   * +-----------+------+------------------------------------------------------------+\n   * | Attribute | Type | Description                                                |\n   * +===========+======+============================================================+\n   * | name      | str  | A user defined name for the event.                         |\n   * +-----------+------+------------------------------------------------------------+\n   * | data      | Any  | The data associated with the event. This can be anything.  |\n   * +-----------+------+------------------------------------------------------------+\n   * ```\n   *\n   * Here's an example:\n   *\n   * ```ts\n   * import { RunnableLambda } from \"@langchain/core/runnables\";\n   * import { dispatchCustomEvent } from \"@langchain/core/callbacks/dispatch\";\n   * // Use this import for web environments that don't support \"async_hooks\"\n   * // and manually pass config to child runs.\n   * // import { dispatchCustomEvent } from \"@langchain/core/callbacks/dispatch/web\";\n   *\n   * const slowThing = RunnableLambda.from(async (someInput: string) => {\n   *   // Placeholder for some slow operation\n   *   await new Promise((resolve) => setTimeout(resolve, 100));\n   *   await dispatchCustomEvent(\"progress_event\", {\n   *    message: \"Finished step 1 of 2\",\n   *  });\n   *  await new Promise((resolve) => setTimeout(resolve, 100));\n   *  return \"Done\";\n   * });\n   *\n   * const eventStream = await slowThing.streamEvents(\"hello world\", {\n   *   version: \"v2\",\n   * });\n   *\n   * for await (const event of eventStream) {\n   *  if (event.event === \"on_custom_event\") {\n   *    console.log(event);\n   *  }\n   * }\n   * ```\n   */\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & { version: \"v1\" | \"v2\" },\n    streamOptions?: Omit<EventStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<StreamEvent>;\n\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & {\n      version: \"v1\" | \"v2\";\n      encoding: \"text/event-stream\";\n    },\n    streamOptions?: Omit<EventStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<Uint8Array>;\n\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & {\n      version: \"v1\" | \"v2\";\n      encoding?: \"text/event-stream\" | undefined;\n    },\n    streamOptions?: Omit<EventStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<StreamEvent | Uint8Array> {\n    let stream;\n    if (options.version === \"v1\") {\n      stream = this._streamEventsV1(input, options, streamOptions);\n    } else if (options.version === \"v2\") {\n      stream = this._streamEventsV2(input, options, streamOptions);\n    } else {\n      throw new Error(\n        `Only versions \"v1\" and \"v2\" of the schema are currently supported.`\n      );\n    }\n    if (options.encoding === \"text/event-stream\") {\n      return convertToHttpEventStream(stream);\n    } else {\n      return IterableReadableStream.fromAsyncGenerator(stream);\n    }\n  }\n\n  private async *_streamEventsV2(\n    input: RunInput,\n    options: Partial<CallOptions> & { version: \"v1\" | \"v2\" },\n    streamOptions?: Omit<EventStreamCallbackHandlerInput, \"autoClose\">\n  ): AsyncGenerator<StreamEvent> {\n    const eventStreamer = new EventStreamCallbackHandler({\n      ...streamOptions,\n      autoClose: false,\n    });\n    const config = ensureConfig(options);\n    const runId = config.runId ?? uuidv4();\n    config.runId = runId;\n    const callbacks = config.callbacks;\n    if (callbacks === undefined) {\n      config.callbacks = [eventStreamer];\n    } else if (Array.isArray(callbacks)) {\n      config.callbacks = callbacks.concat(eventStreamer);\n    } else {\n      const copiedCallbacks = callbacks.copy();\n      copiedCallbacks.addHandler(eventStreamer, true);\n      config.callbacks = copiedCallbacks;\n    }\n    const abortController = new AbortController();\n    // Call the runnable in streaming mode,\n    // add each chunk to the output stream\n    const outerThis = this;\n    async function consumeRunnableStream() {\n      let signal;\n      let listener: (() => void) | null = null;\n\n      try {\n        if (options?.signal) {\n          if (\"any\" in AbortSignal) {\n            // Use native AbortSignal.any() if available (Node 19+)\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            signal = (AbortSignal as any).any([\n              abortController.signal,\n              options.signal,\n            ]);\n          } else {\n            // Fallback for Node 18 and below - just use the provided signal\n            signal = options.signal;\n            // Ensure we still abort our controller when the parent signal aborts\n\n            listener = () => {\n              abortController.abort();\n            };\n\n            options.signal.addEventListener(\"abort\", listener, { once: true });\n          }\n        } else {\n          signal = abortController.signal;\n        }\n        const runnableStream = await outerThis.stream(input, {\n          ...config,\n          signal,\n        });\n        const tappedStream = eventStreamer.tapOutputIterable(\n          runId,\n          runnableStream\n        );\n        for await (const _ of tappedStream) {\n          // Just iterate so that the callback handler picks up events\n          if (abortController.signal.aborted) break;\n        }\n      } finally {\n        await eventStreamer.finish();\n\n        if (signal && listener) {\n          signal.removeEventListener(\"abort\", listener);\n        }\n      }\n    }\n    const runnableStreamConsumePromise = consumeRunnableStream();\n    let firstEventSent = false;\n    let firstEventRunId;\n    try {\n      for await (const event of eventStreamer) {\n        // This is a work-around an issue where the inputs into the\n        // chain are not available until the entire input is consumed.\n        // As a temporary solution, we'll modify the input to be the input\n        // that was passed into the chain.\n        if (!firstEventSent) {\n          event.data.input = input;\n          firstEventSent = true;\n          firstEventRunId = event.run_id;\n          yield event;\n          continue;\n        }\n        if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n          // If it's the end event corresponding to the root runnable\n          // we dont include the input in the event since it's guaranteed\n          // to be included in the first event.\n          if (event.data?.input) {\n            delete event.data.input;\n          }\n        }\n        yield event;\n      }\n    } finally {\n      abortController.abort();\n      await runnableStreamConsumePromise;\n    }\n  }\n\n  private async *_streamEventsV1(\n    input: RunInput,\n    options: Partial<CallOptions> & { version: \"v1\" | \"v2\" },\n    streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">\n  ): AsyncGenerator<StreamEvent> {\n    let runLog;\n    let hasEncounteredStartEvent = false;\n    const config = ensureConfig(options);\n    const rootTags = config.tags ?? [];\n    const rootMetadata = config.metadata ?? {};\n    const rootName = config.runName ?? this.getName();\n    const logStreamCallbackHandler = new LogStreamCallbackHandler({\n      ...streamOptions,\n      autoClose: false,\n      _schemaFormat: \"streaming_events\",\n    });\n    const rootEventFilter = new _RootEventFilter({\n      ...streamOptions,\n    });\n    const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n    for await (const log of logStream) {\n      if (!runLog) {\n        runLog = RunLog.fromRunLogPatch(log);\n      } else {\n        runLog = runLog.concat(log);\n      }\n      if (runLog.state === undefined) {\n        throw new Error(\n          `Internal error: \"streamEvents\" state is missing. Please open a bug report.`\n        );\n      }\n      // Yield the start event for the root runnable if it hasn't been seen.\n      // The root run is never filtered out\n      if (!hasEncounteredStartEvent) {\n        hasEncounteredStartEvent = true;\n        const state = { ...runLog.state };\n        const event: StreamEvent = {\n          run_id: state.id,\n          event: `on_${state.type}_start`,\n          name: rootName,\n          tags: rootTags,\n          metadata: rootMetadata,\n          data: {\n            input,\n          },\n        };\n        if (rootEventFilter.includeEvent(event, state.type)) {\n          yield event;\n        }\n      }\n      const paths = log.ops\n        .filter((op) => op.path.startsWith(\"/logs/\"))\n        .map((op) => op.path.split(\"/\")[2]);\n      const dedupedPaths = [...new Set(paths)];\n      for (const path of dedupedPaths) {\n        let eventType;\n        let data: StreamEventData = {};\n        const logEntry = runLog.state.logs[path];\n        if (logEntry.end_time === undefined) {\n          if (logEntry.streamed_output.length > 0) {\n            eventType = \"stream\";\n          } else {\n            eventType = \"start\";\n          }\n        } else {\n          eventType = \"end\";\n        }\n        if (eventType === \"start\") {\n          // Include the inputs with the start event if they are available.\n          // Usually they will NOT be available for components that operate\n          // on streams, since those components stream the input and\n          // don't know its final value until the end of the stream.\n          if (logEntry.inputs !== undefined) {\n            data.input = logEntry.inputs;\n          }\n        } else if (eventType === \"end\") {\n          if (logEntry.inputs !== undefined) {\n            data.input = logEntry.inputs;\n          }\n          data.output = logEntry.final_output;\n        } else if (eventType === \"stream\") {\n          const chunkCount = logEntry.streamed_output.length;\n          if (chunkCount !== 1) {\n            throw new Error(\n              `Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`\n            );\n          }\n          data = { chunk: logEntry.streamed_output[0] };\n          // Clean up the stream, we don't need it anymore.\n          // And this avoids duplicates as well!\n          logEntry.streamed_output = [];\n        }\n        yield {\n          event: `on_${logEntry.type}_${eventType}`,\n          name: logEntry.name,\n          run_id: logEntry.id,\n          tags: logEntry.tags,\n          metadata: logEntry.metadata,\n          data,\n        };\n      }\n      // Finally, we take care of the streaming output from the root chain\n      // if there is any.\n      const { state } = runLog;\n      if (state.streamed_output.length > 0) {\n        const chunkCount = state.streamed_output.length;\n        if (chunkCount !== 1) {\n          throw new Error(\n            `Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`\n          );\n        }\n        const data = { chunk: state.streamed_output[0] };\n        // Clean up the stream, we don't need it anymore.\n        state.streamed_output = [];\n        const event = {\n          event: `on_${state.type}_stream`,\n          run_id: state.id,\n          tags: rootTags,\n          metadata: rootMetadata,\n          name: rootName,\n          data,\n        };\n        if (rootEventFilter.includeEvent(event, state.type)) {\n          yield event;\n        }\n      }\n    }\n    const state = runLog?.state;\n    if (state !== undefined) {\n      // Finally, yield the end event for the root runnable.\n      const event = {\n        event: `on_${state.type}_end`,\n        name: rootName,\n        run_id: state.id,\n        tags: rootTags,\n        metadata: rootMetadata,\n        data: {\n          output: state.final_output,\n        },\n      };\n      if (rootEventFilter.includeEvent(event, state.type)) yield event;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static isRunnable(thing: any): thing is Runnable {\n    return isRunnableInterface(thing);\n  }\n\n  /**\n   * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n   * The Run object contains information about the run, including its id,\n   * type, input, output, error, startTime, endTime, and any tags or metadata\n   * added to the run.\n   *\n   * @param {Object} params - The object containing the callback functions.\n   * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n   * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n   * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n   */\n  withListeners({\n    onStart,\n    onEnd,\n    onError,\n  }: {\n    onStart?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onEnd?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onError?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n  }): Runnable<RunInput, RunOutput, CallOptions> {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableBinding<RunInput, RunOutput, CallOptions>({\n      bound: this,\n      config: {},\n      configFactories: [\n        (config) => ({\n          callbacks: [\n            new RootListenersTracer({\n              config,\n              onStart,\n              onEnd,\n              onError,\n            }),\n          ],\n        }),\n      ],\n    });\n  }\n\n  /**\n   * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n   * which contains the runnable, name, description and schema.\n   *\n   * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n   *\n   * @param fields\n   * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n   * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n   * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n   * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n   */\n  asTool<T extends RunInput = RunInput>(fields: {\n    name?: string;\n    description?: string;\n    schema: InteropZodType<T>;\n  }): RunnableToolLike<InteropZodType<T | ToolCall>, RunOutput> {\n    return convertRunnableToTool<T, RunOutput>(this, fields);\n  }\n}\n\nexport type RunnableBindingArgs<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n> = {\n  bound: Runnable<RunInput, RunOutput, CallOptions>;\n  /** @deprecated Use {@link config} instead. */\n  kwargs?: Partial<CallOptions>;\n  config: RunnableConfig;\n  configFactories?: Array<\n    (config: RunnableConfig) => RunnableConfig | Promise<RunnableConfig>\n  >;\n};\n\n/**\n * Wraps a runnable and applies partial config upon invocation.\n *\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.withConfig({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.withConfig({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n> extends Runnable<RunInput, RunOutput, CallOptions> {\n  static lc_name() {\n    return \"RunnableBinding\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  lc_serializable = true;\n\n  bound: Runnable<RunInput, RunOutput, CallOptions>;\n\n  config: RunnableConfig;\n\n  kwargs?: Partial<CallOptions>;\n\n  configFactories?: Array<\n    (config: RunnableConfig) => RunnableConfig | Promise<RunnableConfig>\n  >;\n\n  constructor(fields: RunnableBindingArgs<RunInput, RunOutput, CallOptions>) {\n    super(fields);\n    this.bound = fields.bound;\n    this.kwargs = fields.kwargs;\n    this.config = fields.config;\n    this.configFactories = fields.configFactories;\n  }\n\n  getName(suffix?: string | undefined): string {\n    return this.bound.getName(suffix);\n  }\n\n  async _mergeConfig(\n    ...options: (Partial<CallOptions> | RunnableConfig | undefined)[]\n  ): Promise<Partial<CallOptions>> {\n    const config = mergeConfigs(this.config, ...options);\n    return mergeConfigs(\n      config,\n      ...(this.configFactories\n        ? await Promise.all(\n            this.configFactories.map(\n              async (configFactory) => await configFactory(config)\n            )\n          )\n        : [])\n    );\n  }\n\n  withConfig(\n    config: Partial<CallOptions>\n  ): Runnable<RunInput, RunOutput, CallOptions> {\n    return new (this.constructor as {\n      new (\n        fields: RunnableBindingArgs<RunInput, RunOutput, CallOptions>\n      ): RunnableBinding<RunInput, RunOutput, CallOptions>;\n    })({\n      bound: this.bound,\n      kwargs: this.kwargs,\n      config: { ...this.config, ...config },\n    });\n  }\n\n  withRetry(fields?: {\n    stopAfterAttempt?: number;\n    onFailedAttempt?: RunnableRetryFailedAttemptHandler;\n  }): RunnableRetry<RunInput, RunOutput, CallOptions> {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new RunnableRetry({\n      bound: this.bound,\n      kwargs: this.kwargs,\n      config: this.config,\n      maxAttemptNumber: fields?.stopAfterAttempt,\n      ...fields,\n    });\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<RunOutput> {\n    return this.bound.invoke(\n      input,\n      await this._mergeConfig(options, this.kwargs)\n    );\n  }\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions?: false }\n  ): Promise<RunOutput[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions: true }\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    const mergedOptions = Array.isArray(options)\n      ? await Promise.all(\n          options.map(async (individualOption) =>\n            this._mergeConfig(ensureConfig(individualOption), this.kwargs)\n          )\n        )\n      : await this._mergeConfig(ensureConfig(options), this.kwargs);\n    return this.bound.batch(inputs, mergedOptions, batchOptions);\n  }\n\n  /** @internal */\n  override _concatOutputChunks<O>(first: O, second: O): O {\n    return this.bound._concatOutputChunks(first, second);\n  }\n\n  async *_streamIterator(\n    input: RunInput,\n    options?: Partial<CallOptions> | undefined\n  ) {\n    yield* this.bound._streamIterator(\n      input,\n      await this._mergeConfig(ensureConfig(options), this.kwargs)\n    );\n  }\n\n  async stream(\n    input: RunInput,\n    options?: Partial<CallOptions> | undefined\n  ): Promise<IterableReadableStream<RunOutput>> {\n    return this.bound.stream(\n      input,\n      await this._mergeConfig(ensureConfig(options), this.kwargs)\n    );\n  }\n\n  async *transform(\n    generator: AsyncGenerator<RunInput>,\n    options?: Partial<CallOptions>\n  ): AsyncGenerator<RunOutput> {\n    yield* this.bound.transform(\n      generator,\n      await this._mergeConfig(ensureConfig(options), this.kwargs)\n    );\n  }\n\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & { version: \"v1\" | \"v2\" },\n    streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<StreamEvent>;\n\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & {\n      version: \"v1\" | \"v2\";\n      encoding: \"text/event-stream\";\n    },\n    streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<Uint8Array>;\n\n  streamEvents(\n    input: RunInput,\n    options: Partial<CallOptions> & {\n      version: \"v1\" | \"v2\";\n      encoding?: \"text/event-stream\" | undefined;\n    },\n    streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">\n  ): IterableReadableStream<StreamEvent | Uint8Array> {\n    const outerThis = this;\n    const generator = async function* () {\n      yield* outerThis.bound.streamEvents(\n        input,\n        {\n          ...(await outerThis._mergeConfig(\n            ensureConfig(options),\n            outerThis.kwargs\n          )),\n          version: options.version,\n        },\n        streamOptions\n      );\n    };\n    return IterableReadableStream.fromAsyncGenerator(generator());\n  }\n\n  static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing: any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): thing is RunnableBinding<any, any, any> {\n    return thing.bound && Runnable.isRunnable(thing.bound);\n  }\n\n  /**\n   * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n   * The Run object contains information about the run, including its id,\n   * type, input, output, error, startTime, endTime, and any tags or metadata\n   * added to the run.\n   *\n   * @param {Object} params - The object containing the callback functions.\n   * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n   * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n   * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n   */\n  withListeners({\n    onStart,\n    onEnd,\n    onError,\n  }: {\n    onStart?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onEnd?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onError?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n  }): Runnable<RunInput, RunOutput, CallOptions> {\n    return new RunnableBinding<RunInput, RunOutput, CallOptions>({\n      bound: this.bound,\n      kwargs: this.kwargs,\n      config: this.config,\n      configFactories: [\n        (config) => ({\n          callbacks: [\n            new RootListenersTracer({\n              config,\n              onStart,\n              onEnd,\n              onError,\n            }),\n          ],\n        }),\n      ],\n    });\n  }\n}\n\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n */\nexport class RunnableEach<\n  RunInputItem,\n  RunOutputItem,\n  CallOptions extends RunnableConfig\n> extends Runnable<RunInputItem[], RunOutputItem[], CallOptions> {\n  static lc_name() {\n    return \"RunnableEach\";\n  }\n\n  lc_serializable = true;\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  bound: Runnable<RunInputItem, RunOutputItem, CallOptions>;\n\n  constructor(fields: {\n    bound: Runnable<RunInputItem, RunOutputItem, CallOptions>;\n  }) {\n    super(fields);\n    this.bound = fields.bound;\n  }\n\n  /**\n   * Invokes the runnable with the specified input and configuration.\n   * @param input The input to invoke the runnable with.\n   * @param config The configuration to invoke the runnable with.\n   * @returns A promise that resolves to the output of the runnable.\n   */\n  async invoke(\n    inputs: RunInputItem[],\n    config?: Partial<CallOptions>\n  ): Promise<RunOutputItem[]> {\n    return this._callWithConfig(this._invoke.bind(this), inputs, config);\n  }\n\n  /**\n   * A helper method that is used to invoke the runnable with the specified input and configuration.\n   * @param input The input to invoke the runnable with.\n   * @param config The configuration to invoke the runnable with.\n   * @returns A promise that resolves to the output of the runnable.\n   */\n  protected async _invoke(\n    inputs: RunInputItem[],\n    config?: Partial<CallOptions>,\n    runManager?: CallbackManagerForChainRun\n  ): Promise<RunOutputItem[]> {\n    return this.bound.batch(\n      inputs,\n      patchConfig(config, { callbacks: runManager?.getChild() })\n    );\n  }\n\n  /**\n   * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n   * The Run object contains information about the run, including its id,\n   * type, input, output, error, startTime, endTime, and any tags or metadata\n   * added to the run.\n   *\n   * @param {Object} params - The object containing the callback functions.\n   * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n   * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n   * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n   */\n  withListeners({\n    onStart,\n    onEnd,\n    onError,\n  }: {\n    onStart?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onEnd?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    onError?: (run: Run, config?: RunnableConfig) => void | Promise<void>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }): Runnable<any, any, CallOptions> {\n    return new RunnableEach<RunInputItem, RunOutputItem, CallOptions>({\n      bound: this.bound.withListeners({ onStart, onEnd, onError }),\n    });\n  }\n}\n\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunInput = any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunOutput = any,\n  CallOptions extends RunnableConfig = RunnableConfig\n> extends RunnableBinding<RunInput, RunOutput, CallOptions> {\n  static lc_name() {\n    return \"RunnableRetry\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  protected maxAttemptNumber = 3;\n\n  onFailedAttempt: RunnableRetryFailedAttemptHandler = () => {\n    // empty\n  };\n\n  constructor(\n    fields: RunnableBindingArgs<RunInput, RunOutput, CallOptions> & {\n      maxAttemptNumber?: number;\n      onFailedAttempt?: RunnableRetryFailedAttemptHandler;\n    }\n  ) {\n    super(fields);\n    this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n    this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n  }\n\n  _patchConfigForRetry(\n    attempt: number,\n    config?: Partial<CallOptions>,\n    runManager?: CallbackManagerForChainRun\n  ): Partial<CallOptions> {\n    const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n    return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n  }\n\n  protected async _invoke(\n    input: RunInput,\n    config?: CallOptions,\n    runManager?: CallbackManagerForChainRun\n  ): Promise<RunOutput> {\n    return pRetry(\n      (attemptNumber: number) =>\n        super.invoke(\n          input,\n          this._patchConfigForRetry(attemptNumber, config, runManager)\n        ),\n      {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onFailedAttempt: (error: any) => this.onFailedAttempt(error, input),\n        retries: Math.max(this.maxAttemptNumber - 1, 0),\n        randomize: true,\n      }\n    );\n  }\n\n  /**\n   * Method that invokes the runnable with the specified input, run manager,\n   * and config. It handles the retry logic by catching any errors and\n   * recursively invoking itself with the updated config for the next retry\n   * attempt.\n   * @param input The input for the runnable.\n   * @param runManager The run manager for the runnable.\n   * @param config The config for the runnable.\n   * @returns A promise that resolves to the output of the runnable.\n   */\n  async invoke(input: RunInput, config?: CallOptions): Promise<RunOutput> {\n    return this._callWithConfig(this._invoke.bind(this), input, config);\n  }\n\n  async _batch<ReturnExceptions extends boolean = false>(\n    inputs: RunInput[],\n    configs?: RunnableConfig[],\n    runManagers?: (CallbackManagerForChainRun | undefined)[],\n    batchOptions?: RunnableBatchOptions\n  ) {\n    const resultsMap: Record<string, RunOutput | Error> = {};\n    try {\n      await pRetry(\n        async (attemptNumber: number) => {\n          const remainingIndexes = inputs\n            .map((_, i) => i)\n            .filter(\n              (i) =>\n                resultsMap[i.toString()] === undefined ||\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                resultsMap[i.toString()] instanceof Error\n            );\n          const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n          const patchedConfigs = remainingIndexes.map((i) =>\n            this._patchConfigForRetry(\n              attemptNumber,\n              configs?.[i] as CallOptions,\n              runManagers?.[i]\n            )\n          );\n          const results = await super.batch(remainingInputs, patchedConfigs, {\n            ...batchOptions,\n            returnExceptions: true,\n          });\n          let firstException;\n          for (let i = 0; i < results.length; i += 1) {\n            const result = results[i];\n            const resultMapIndex = remainingIndexes[i];\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (result instanceof Error) {\n              if (firstException === undefined) {\n                firstException = result;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (firstException as any).input = remainingInputs[i];\n              }\n            }\n            resultsMap[resultMapIndex.toString()] = result;\n          }\n          if (firstException) {\n            throw firstException;\n          }\n          return results;\n        },\n        {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          onFailedAttempt: (error: any) =>\n            this.onFailedAttempt(error, error.input),\n          retries: Math.max(this.maxAttemptNumber - 1, 0),\n          randomize: true,\n        }\n      );\n    } catch (e) {\n      if (batchOptions?.returnExceptions !== true) {\n        throw e;\n      }\n    }\n    return Object.keys(resultsMap)\n      .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n      .map(\n        (key) => resultsMap[parseInt(key, 10)]\n      ) as ReturnExceptions extends false ? RunOutput[] : (RunOutput | Error)[];\n  }\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions?: false }\n  ): Promise<RunOutput[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions: true }\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<CallOptions> | Partial<CallOptions>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    return this._batchWithConfig(\n      this._batch.bind(this),\n      inputs,\n      options,\n      batchOptions\n    );\n  }\n}\n\nexport type RunnableSequenceFields<RunInput, RunOutput> = {\n  first: Runnable<RunInput>;\n  middle?: Runnable[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  last: Runnable<any, RunOutput>;\n  name?: string;\n  omitSequenceTags?: boolean;\n};\n\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({ model: \"gpt-4o-mini\" })]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunInput = any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunOutput = any\n> extends Runnable<RunInput, RunOutput> {\n  static lc_name() {\n    return \"RunnableSequence\";\n  }\n\n  protected first: Runnable<RunInput>;\n\n  protected middle: Runnable[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected last: Runnable<any, RunOutput>;\n\n  omitSequenceTags = false;\n\n  lc_serializable = true;\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  constructor(fields: RunnableSequenceFields<RunInput, RunOutput>) {\n    super(fields);\n    this.first = fields.first;\n    this.middle = fields.middle ?? this.middle;\n    this.last = fields.last;\n    this.name = fields.name;\n    this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n  }\n\n  get steps() {\n    return [this.first, ...this.middle, this.last];\n  }\n\n  async invoke(input: RunInput, options?: RunnableConfig): Promise<RunOutput> {\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      _coerceToDict(input, \"input\"),\n      config.runId,\n      undefined,\n      undefined,\n      undefined,\n      config?.runName\n    );\n    delete config.runId;\n    let nextStepInput = input;\n    let finalOutput: RunOutput;\n    try {\n      const initialSteps = [this.first, ...this.middle];\n      for (let i = 0; i < initialSteps.length; i += 1) {\n        const step = initialSteps[i];\n        const promise = step.invoke(\n          nextStepInput,\n          patchConfig(config, {\n            callbacks: runManager?.getChild(\n              this.omitSequenceTags ? undefined : `seq:step:${i + 1}`\n            ),\n          })\n        );\n        nextStepInput = await raceWithSignal(promise, options?.signal);\n      }\n      // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n      if (options?.signal?.aborted) {\n        throw getAbortSignalError(options.signal);\n      }\n      finalOutput = await this.last.invoke(\n        nextStepInput,\n        patchConfig(config, {\n          callbacks: runManager?.getChild(\n            this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`\n          ),\n        })\n      );\n    } catch (e) {\n      await runManager?.handleChainError(e);\n      throw e;\n    }\n    await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    return finalOutput;\n  }\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions?: false }\n  ): Promise<RunOutput[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions: true }\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    const configList = this._getOptionsList(options ?? {}, inputs.length);\n    const callbackManagers = await Promise.all(\n      configList.map(getCallbackManagerForConfig)\n    );\n    const runManagers = await Promise.all(\n      callbackManagers.map(async (callbackManager, i) => {\n        const handleStartRes = await callbackManager?.handleChainStart(\n          this.toJSON(),\n          _coerceToDict(inputs[i], \"input\"),\n          configList[i].runId,\n          undefined,\n          undefined,\n          undefined,\n          configList[i].runName\n        );\n        delete configList[i].runId;\n        return handleStartRes;\n      })\n    );\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let nextStepInputs: any = inputs;\n    try {\n      for (let i = 0; i < this.steps.length; i += 1) {\n        const step = this.steps[i];\n        const promise = step.batch(\n          nextStepInputs,\n          runManagers.map((runManager, j) => {\n            const childRunManager = runManager?.getChild(\n              this.omitSequenceTags ? undefined : `seq:step:${i + 1}`\n            );\n            return patchConfig(configList[j], { callbacks: childRunManager });\n          }),\n          batchOptions\n        );\n        nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n      }\n    } catch (e) {\n      await Promise.all(\n        runManagers.map((runManager) => runManager?.handleChainError(e))\n      );\n      throw e;\n    }\n    await Promise.all(\n      runManagers.map((runManager) =>\n        runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))\n      )\n    );\n    return nextStepInputs;\n  }\n\n  /** @internal */\n  override _concatOutputChunks<O>(first: O, second: O): O {\n    return this.last._concatOutputChunks(first, second);\n  }\n\n  async *_streamIterator(\n    input: RunInput,\n    options?: RunnableConfig\n  ): AsyncGenerator<RunOutput> {\n    const callbackManager_ = await getCallbackManagerForConfig(options);\n    const { runId, ...otherOptions } = options ?? {};\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      _coerceToDict(input, \"input\"),\n      runId,\n      undefined,\n      undefined,\n      undefined,\n      otherOptions?.runName\n    );\n    const steps = [this.first, ...this.middle, this.last];\n    let concatSupported = true;\n    let finalOutput;\n    async function* inputGenerator() {\n      yield input;\n    }\n    try {\n      let finalGenerator = steps[0].transform(\n        inputGenerator(),\n        patchConfig(otherOptions, {\n          callbacks: runManager?.getChild(\n            this.omitSequenceTags ? undefined : `seq:step:1`\n          ),\n        })\n      );\n      for (let i = 1; i < steps.length; i += 1) {\n        const step = steps[i];\n        finalGenerator = await step.transform(\n          finalGenerator,\n          patchConfig(otherOptions, {\n            callbacks: runManager?.getChild(\n              this.omitSequenceTags ? undefined : `seq:step:${i + 1}`\n            ),\n          })\n        );\n      }\n      for await (const chunk of finalGenerator) {\n        options?.signal?.throwIfAborted();\n        yield chunk;\n        if (concatSupported) {\n          if (finalOutput === undefined) {\n            finalOutput = chunk;\n          } else {\n            try {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              finalOutput = this._concatOutputChunks(finalOutput, chunk as any);\n            } catch {\n              finalOutput = undefined;\n              concatSupported = false;\n            }\n          }\n        }\n      }\n    } catch (e) {\n      await runManager?.handleChainError(e);\n      throw e;\n    }\n    await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n  }\n\n  getGraph(config?: RunnableConfig): Graph {\n    const graph = new Graph();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let currentLastNode: any = null;\n\n    this.steps.forEach((step, index) => {\n      const stepGraph = step.getGraph(config);\n\n      if (index !== 0) {\n        stepGraph.trimFirstNode();\n      }\n\n      if (index !== this.steps.length - 1) {\n        stepGraph.trimLastNode();\n      }\n\n      graph.extend(stepGraph);\n\n      const stepFirstNode = stepGraph.firstNode();\n      if (!stepFirstNode) {\n        throw new Error(`Runnable ${step} has no first node`);\n      }\n\n      if (currentLastNode) {\n        graph.addEdge(currentLastNode, stepFirstNode);\n      }\n\n      currentLastNode = stepGraph.lastNode();\n    });\n\n    return graph;\n  }\n\n  pipe<NewRunOutput>(\n    coerceable: RunnableLike<RunOutput, NewRunOutput>\n  ): RunnableSequence<RunInput, Exclude<NewRunOutput, Error>> {\n    if (RunnableSequence.isRunnableSequence(coerceable)) {\n      return new RunnableSequence({\n        first: this.first,\n        middle: this.middle.concat([\n          this.last,\n          coerceable.first,\n          ...coerceable.middle,\n        ]),\n        last: coerceable.last,\n        name: this.name ?? coerceable.name,\n      });\n    } else {\n      return new RunnableSequence({\n        first: this.first,\n        middle: [...this.middle, this.last],\n        last: _coerceToRunnable(coerceable),\n        name: this.name,\n      });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static isRunnableSequence(thing: any): thing is RunnableSequence {\n    return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static from<RunInput = any, RunOutput = any>(\n    [first, ...runnables]: [\n      RunnableLike<RunInput>,\n      ...RunnableLike[],\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      RunnableLike<any, RunOutput>\n    ],\n    nameOrFields?:\n      | string\n      | Omit<\n          RunnableSequenceFields<RunInput, RunOutput>,\n          \"first\" | \"middle\" | \"last\"\n        >\n  ) {\n    let extra: Record<string, unknown> = {};\n    if (typeof nameOrFields === \"string\") {\n      extra.name = nameOrFields;\n    } else if (nameOrFields !== undefined) {\n      extra = nameOrFields;\n    }\n    return new RunnableSequence<RunInput, Exclude<RunOutput, Error>>({\n      ...extra,\n      first: _coerceToRunnable(first),\n      middle: runnables.slice(0, -1).map(_coerceToRunnable),\n      last: _coerceToRunnable(runnables[runnables.length - 1]),\n    });\n  }\n}\n\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunInput = any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  RunOutput extends Record<string, any> = Record<string, any>\n> extends Runnable<RunInput, RunOutput> {\n  static lc_name() {\n    return \"RunnableMap\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  lc_serializable = true;\n\n  protected steps: Record<string, Runnable<RunInput>>;\n\n  public getStepsKeys(): string[] {\n    return Object.keys(this.steps);\n  }\n\n  constructor(fields: { steps: RunnableMapLike<RunInput, RunOutput> }) {\n    super(fields);\n    this.steps = {};\n    for (const [key, value] of Object.entries(fields.steps)) {\n      this.steps[key] = _coerceToRunnable(value);\n    }\n  }\n\n  static from<\n    RunInput,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunOutput extends Record<string, any> = Record<string, any>\n  >(\n    steps: RunnableMapLike<RunInput, RunOutput>\n  ): RunnableMap<RunInput, RunOutput> {\n    return new RunnableMap<RunInput, RunOutput>({ steps });\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): Promise<RunOutput> {\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      {\n        input,\n      },\n      config.runId,\n      undefined,\n      undefined,\n      undefined,\n      config?.runName\n    );\n    delete config.runId;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const output: Record<string, any> = {};\n    try {\n      const promises = Object.entries(this.steps).map(\n        async ([key, runnable]) => {\n          output[key] = await runnable.invoke(\n            input,\n            patchConfig(config, {\n              callbacks: runManager?.getChild(`map:key:${key}`),\n            })\n          );\n        }\n      );\n      await raceWithSignal(Promise.all(promises), options?.signal);\n    } catch (e) {\n      await runManager?.handleChainError(e);\n      throw e;\n    }\n    await runManager?.handleChainEnd(output);\n    return output as RunOutput;\n  }\n\n  async *_transform(\n    generator: AsyncGenerator<RunInput>,\n    runManager?: CallbackManagerForChainRun,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    // shallow copy steps to ignore changes while iterating\n    const steps = { ...this.steps };\n    // each step gets a copy of the input iterator\n    const inputCopies = atee(generator, Object.keys(steps).length);\n    // start the first iteration of each output iterator\n    const tasks = new Map(\n      Object.entries(steps).map(([key, runnable], i) => {\n        const gen = runnable.transform(\n          inputCopies[i],\n          patchConfig(options, {\n            callbacks: runManager?.getChild(`map:key:${key}`),\n          })\n        );\n        return [key, gen.next().then((result) => ({ key, gen, result }))];\n      })\n    );\n    // yield chunks as they become available,\n    // starting new iterations as needed,\n    // until all iterators are done\n    while (tasks.size) {\n      const promise = Promise.race(tasks.values());\n      const { key, result, gen } = await raceWithSignal(\n        promise,\n        options?.signal\n      );\n      tasks.delete(key);\n      if (!result.done) {\n        yield { [key]: result.value } as unknown as RunOutput;\n        tasks.set(\n          key,\n          gen.next().then((result) => ({ key, gen, result }))\n        );\n      }\n    }\n  }\n\n  transform(\n    generator: AsyncGenerator<RunInput>,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    return this._transformStreamWithConfig(\n      generator,\n      this._transform.bind(this),\n      options\n    );\n  }\n\n  async stream(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): Promise<IterableReadableStream<RunOutput>> {\n    async function* generator() {\n      yield input;\n    }\n    const config = ensureConfig(options);\n    const wrappedGenerator = new AsyncGeneratorWithSetup({\n      generator: this.transform(generator(), config),\n      config,\n    });\n    await wrappedGenerator.setup;\n    return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyTraceableFunction = TraceableFunction<(...any: any[]) => any>;\n\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable<RunInput, RunOutput> extends Runnable<\n  RunInput,\n  RunOutput\n> {\n  lc_serializable = false;\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  protected func: AnyTraceableFunction;\n\n  constructor(fields: { func: AnyTraceableFunction }) {\n    super(fields);\n\n    if (!isTraceableFunction(fields.func)) {\n      throw new Error(\n        \"RunnableTraceable requires a function that is wrapped in traceable higher-order function\"\n      );\n    }\n\n    this.func = fields.func;\n  }\n\n  async invoke(input: RunInput, options?: Partial<RunnableConfig>) {\n    const [config] = this._getOptionsList(options ?? {}, 1);\n    const callbacks = await getCallbackManagerForConfig(config);\n    const promise = this.func(\n      patchConfig(config, { callbacks }),\n      input\n    ) as Promise<RunOutput>;\n\n    return raceWithSignal(promise, config?.signal);\n  }\n\n  async *_streamIterator(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    const [config] = this._getOptionsList(options ?? {}, 1);\n    const result = await this.invoke(input, options);\n\n    if (isAsyncIterable(result)) {\n      for await (const item of result) {\n        config?.signal?.throwIfAborted();\n        yield item as RunOutput;\n      }\n      return;\n    }\n\n    if (isIterator(result)) {\n      while (true) {\n        config?.signal?.throwIfAborted();\n        const state: IteratorResult<unknown> = result.next();\n        if (state.done) break;\n        yield state.value as RunOutput;\n      }\n      return;\n    }\n\n    yield result;\n  }\n\n  static from(func: AnyTraceableFunction) {\n    return new RunnableTraceable({ func });\n  }\n}\n\nfunction assertNonTraceableFunction<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n>(\n  func:\n    | RunnableFunc<\n        RunInput,\n        RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n        CallOptions\n      >\n    | TraceableFunction<\n        RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      >\n): asserts func is RunnableFunc<\n  RunInput,\n  RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n  CallOptions\n> {\n  if (isTraceableFunction(func)) {\n    throw new Error(\n      \"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\"\n    );\n  }\n}\n\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n> extends Runnable<RunInput, RunOutput, CallOptions> {\n  static lc_name() {\n    return \"RunnableLambda\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  protected func: RunnableFunc<\n    RunInput,\n    RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n    CallOptions\n  >;\n\n  constructor(fields: {\n    func:\n      | RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      | TraceableFunction<\n          RunnableFunc<\n            RunInput,\n            RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n            CallOptions\n          >\n        >;\n  }) {\n    if (isTraceableFunction(fields.func)) {\n      // eslint-disable-next-line no-constructor-return\n      return RunnableTraceable.from(fields.func) as unknown as RunnableLambda<\n        RunInput,\n        RunOutput,\n        CallOptions\n      >;\n    }\n\n    super(fields);\n\n    assertNonTraceableFunction(fields.func);\n    this.func = fields.func;\n  }\n\n  static from<\n    RunInput,\n    RunOutput,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >(\n    func: RunnableFunc<\n      RunInput,\n      RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n      CallOptions\n    >\n  ): RunnableLambda<RunInput, RunOutput, CallOptions>;\n\n  static from<\n    RunInput,\n    RunOutput,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >(\n    func: TraceableFunction<\n      RunnableFunc<\n        RunInput,\n        RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n        CallOptions\n      >\n    >\n  ): RunnableLambda<RunInput, RunOutput, CallOptions>;\n\n  static from<\n    RunInput,\n    RunOutput,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >(\n    func:\n      | RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      | TraceableFunction<\n          RunnableFunc<\n            RunInput,\n            RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n            CallOptions\n          >\n        >\n  ): RunnableLambda<RunInput, RunOutput, CallOptions> {\n    return new RunnableLambda({\n      func,\n    });\n  }\n\n  async _invoke(\n    input: RunInput,\n    config?: Partial<CallOptions>,\n    runManager?: CallbackManagerForChainRun\n  ) {\n    return new Promise<RunOutput>((resolve, reject) => {\n      const childConfig = patchConfig(config, {\n        callbacks: runManager?.getChild(),\n        recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n      });\n      // eslint-disable-next-line no-void\n      void AsyncLocalStorageProviderSingleton.runWithConfig(\n        pickRunnableConfigKeys(childConfig),\n        async () => {\n          try {\n            let output = await this.func(input, {\n              ...childConfig,\n            });\n            if (output && Runnable.isRunnable(output)) {\n              if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n              }\n              output = await output.invoke(input, {\n                ...childConfig,\n                recursionLimit:\n                  (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n              });\n            } else if (isAsyncIterable(output)) {\n              let finalOutput: RunOutput | undefined;\n              for await (const chunk of consumeAsyncIterableInContext(\n                childConfig,\n                output\n              )) {\n                config?.signal?.throwIfAborted();\n                if (finalOutput === undefined) {\n                  finalOutput = chunk as RunOutput;\n                } else {\n                  // Make a best effort to gather, for any type that supports concat.\n                  try {\n                    finalOutput = this._concatOutputChunks(\n                      finalOutput,\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                      chunk as any\n                    );\n                  } catch {\n                    finalOutput = chunk as RunOutput;\n                  }\n                }\n              }\n              output = finalOutput as typeof output;\n            } else if (isIterableIterator(output)) {\n              let finalOutput: RunOutput | undefined;\n              for (const chunk of consumeIteratorInContext(\n                childConfig,\n                output\n              )) {\n                config?.signal?.throwIfAborted();\n                if (finalOutput === undefined) {\n                  finalOutput = chunk as RunOutput;\n                } else {\n                  // Make a best effort to gather, for any type that supports concat.\n                  try {\n                    finalOutput = this._concatOutputChunks(\n                      finalOutput,\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                      chunk as any\n                    );\n                  } catch {\n                    finalOutput = chunk as RunOutput;\n                  }\n                }\n              }\n              output = finalOutput as typeof output;\n            }\n            resolve(output);\n          } catch (e) {\n            reject(e);\n          }\n        }\n      );\n    });\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<RunOutput> {\n    return this._callWithConfig(this._invoke.bind(this), input, options);\n  }\n\n  async *_transform(\n    generator: AsyncGenerator<RunInput>,\n    runManager?: CallbackManagerForChainRun,\n    config?: Partial<CallOptions>\n  ): AsyncGenerator<RunOutput> {\n    let finalChunk: RunInput | undefined;\n    for await (const chunk of generator) {\n      if (finalChunk === undefined) {\n        finalChunk = chunk;\n      } else {\n        // Make a best effort to gather, for any type that supports concat.\n        try {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          finalChunk = this._concatOutputChunks(finalChunk, chunk as any);\n        } catch {\n          finalChunk = chunk;\n        }\n      }\n    }\n    const childConfig = patchConfig(config, {\n      callbacks: runManager?.getChild(),\n      recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n    });\n    const output = await new Promise<RunOutput | Runnable>(\n      (resolve, reject) => {\n        // eslint-disable-next-line no-void\n        void AsyncLocalStorageProviderSingleton.runWithConfig(\n          pickRunnableConfigKeys(childConfig),\n          async () => {\n            try {\n              const res = await this.func(finalChunk as RunInput, {\n                ...childConfig,\n                config: childConfig,\n              });\n              resolve(res);\n            } catch (e) {\n              reject(e);\n            }\n          }\n        );\n      }\n    );\n    if (output && Runnable.isRunnable(output)) {\n      if (config?.recursionLimit === 0) {\n        throw new Error(\"Recursion limit reached.\");\n      }\n      const stream = await output.stream(finalChunk as RunInput, childConfig);\n      for await (const chunk of stream) {\n        yield chunk;\n      }\n    } else if (isAsyncIterable(output)) {\n      for await (const chunk of consumeAsyncIterableInContext(\n        childConfig,\n        output\n      )) {\n        config?.signal?.throwIfAborted();\n        yield chunk as RunOutput;\n      }\n    } else if (isIterableIterator(output)) {\n      for (const chunk of consumeIteratorInContext(childConfig, output)) {\n        config?.signal?.throwIfAborted();\n        yield chunk as RunOutput;\n      }\n    } else {\n      yield output;\n    }\n  }\n\n  transform(\n    generator: AsyncGenerator<RunInput>,\n    options?: Partial<CallOptions>\n  ): AsyncGenerator<RunOutput> {\n    return this._transformStreamWithConfig(\n      generator,\n      this._transform.bind(this),\n      options\n    );\n  }\n\n  async stream(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<IterableReadableStream<RunOutput>> {\n    async function* generator() {\n      yield input;\n    }\n    const config = ensureConfig(options);\n    const wrappedGenerator = new AsyncGeneratorWithSetup({\n      generator: this.transform(generator(), config),\n      config,\n    });\n    await wrappedGenerator.setup;\n    return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n  }\n}\n\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = await sequence.invoke(25);\n *\n * // { years_to_fifty: 20, years_to_hundred: 70 }\n * ```\n */\nexport class RunnableParallel<RunInput> extends RunnableMap<RunInput> {}\n\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks<RunInput, RunOutput> extends Runnable<\n  RunInput,\n  RunOutput\n> {\n  static lc_name() {\n    return \"RunnableWithFallbacks\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  lc_serializable = true;\n\n  runnable: Runnable<RunInput, RunOutput>;\n\n  fallbacks: Runnable<RunInput, RunOutput>[];\n\n  constructor(fields: {\n    runnable: Runnable<RunInput, RunOutput>;\n    fallbacks: Runnable<RunInput, RunOutput>[];\n  }) {\n    super(fields);\n    this.runnable = fields.runnable;\n    this.fallbacks = fields.fallbacks;\n  }\n\n  *runnables() {\n    yield this.runnable;\n    for (const fallback of this.fallbacks) {\n      yield fallback;\n    }\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): Promise<RunOutput> {\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const { runId, ...otherConfigFields } = config;\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      _coerceToDict(input, \"input\"),\n      runId,\n      undefined,\n      undefined,\n      undefined,\n      otherConfigFields?.runName\n    );\n    const childConfig = patchConfig(otherConfigFields, {\n      callbacks: runManager?.getChild(),\n    });\n    const res = await AsyncLocalStorageProviderSingleton.runWithConfig(\n      childConfig,\n      async () => {\n        let firstError;\n        for (const runnable of this.runnables()) {\n          config?.signal?.throwIfAborted();\n          try {\n            const output = await runnable.invoke(input, childConfig);\n            await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n            return output;\n          } catch (e) {\n            if (firstError === undefined) {\n              firstError = e;\n            }\n          }\n        }\n        if (firstError === undefined) {\n          throw new Error(\"No error stored at end of fallback.\");\n        }\n        await runManager?.handleChainError(firstError);\n        throw firstError;\n      }\n    );\n    return res;\n  }\n\n  async *_streamIterator(\n    input: RunInput,\n    options?: Partial<RunnableConfig> | undefined\n  ): AsyncGenerator<RunOutput> {\n    const config = ensureConfig(options);\n    const callbackManager_ = await getCallbackManagerForConfig(config);\n    const { runId, ...otherConfigFields } = config;\n    const runManager = await callbackManager_?.handleChainStart(\n      this.toJSON(),\n      _coerceToDict(input, \"input\"),\n      runId,\n      undefined,\n      undefined,\n      undefined,\n      otherConfigFields?.runName\n    );\n    let firstError;\n    let stream;\n    for (const runnable of this.runnables()) {\n      config?.signal?.throwIfAborted();\n      const childConfig = patchConfig(otherConfigFields, {\n        callbacks: runManager?.getChild(),\n      });\n      try {\n        const originalStream = await runnable.stream(input, childConfig);\n        stream = consumeAsyncIterableInContext(childConfig, originalStream);\n        break;\n      } catch (e) {\n        if (firstError === undefined) {\n          firstError = e;\n        }\n      }\n    }\n    if (stream === undefined) {\n      const error =\n        firstError ?? new Error(\"No error stored at end of fallback.\");\n      await runManager?.handleChainError(error);\n      throw error;\n    }\n    let output;\n    try {\n      for await (const chunk of stream) {\n        yield chunk;\n        try {\n          output =\n            output === undefined\n              ? output\n              : this._concatOutputChunks(output, chunk);\n        } catch {\n          output = undefined;\n        }\n      }\n    } catch (e) {\n      await runManager?.handleChainError(e);\n      throw e;\n    }\n    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n  }\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions?: false }\n  ): Promise<RunOutput[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions & { returnExceptions: true }\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]>;\n\n  async batch(\n    inputs: RunInput[],\n    options?: Partial<RunnableConfig> | Partial<RunnableConfig>[],\n    batchOptions?: RunnableBatchOptions\n  ): Promise<(RunOutput | Error)[]> {\n    if (batchOptions?.returnExceptions) {\n      throw new Error(\"Not implemented.\");\n    }\n    const configList = this._getOptionsList(options ?? {}, inputs.length);\n    const callbackManagers = await Promise.all(\n      configList.map((config) => getCallbackManagerForConfig(config))\n    );\n    const runManagers = await Promise.all(\n      callbackManagers.map(async (callbackManager, i) => {\n        const handleStartRes = await callbackManager?.handleChainStart(\n          this.toJSON(),\n          _coerceToDict(inputs[i], \"input\"),\n          configList[i].runId,\n          undefined,\n          undefined,\n          undefined,\n          configList[i].runName\n        );\n        delete configList[i].runId;\n        return handleStartRes;\n      })\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let firstError: any;\n    for (const runnable of this.runnables()) {\n      configList[0].signal?.throwIfAborted();\n      try {\n        const outputs = await runnable.batch(\n          inputs,\n          runManagers.map((runManager, j) =>\n            patchConfig(configList[j], {\n              callbacks: runManager?.getChild(),\n            })\n          ),\n          batchOptions\n        );\n        await Promise.all(\n          runManagers.map((runManager, i) =>\n            runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))\n          )\n        );\n        return outputs;\n      } catch (e) {\n        if (firstError === undefined) {\n          firstError = e;\n        }\n      }\n    }\n    if (!firstError) {\n      throw new Error(\"No error stored at end of fallbacks.\");\n    }\n    await Promise.all(\n      runManagers.map((runManager) => runManager?.handleChainError(firstError))\n    );\n    throw firstError;\n  }\n}\n\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable<\n  RunInput,\n  RunOutput,\n  CallOptions extends RunnableConfig = RunnableConfig\n>(\n  coerceable: RunnableLike<RunInput, RunOutput, CallOptions>\n): Runnable<RunInput, Exclude<RunOutput, Error>, CallOptions> {\n  if (typeof coerceable === \"function\") {\n    return new RunnableLambda({ func: coerceable }) as Runnable<\n      RunInput,\n      Exclude<RunOutput, Error>,\n      CallOptions\n    >;\n  } else if (Runnable.isRunnable(coerceable)) {\n    return coerceable as Runnable<\n      RunInput,\n      Exclude<RunOutput, Error>,\n      CallOptions\n    >;\n  } else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n    const runnables: Record<string, Runnable<RunInput>> = {};\n    for (const [key, value] of Object.entries(coerceable)) {\n      runnables[key] = _coerceToRunnable(value as RunnableLike);\n    }\n    return new RunnableMap({\n      steps: runnables,\n    }) as unknown as Runnable<RunInput, Exclude<RunOutput, Error>, CallOptions>;\n  } else {\n    throw new Error(\n      `Expected a Runnable, function or object.\\nInstead got an unsupported type.`\n    );\n  }\n}\n\nexport interface RunnableAssignFields<RunInput> {\n  mapper: RunnableMap<RunInput>;\n}\n\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunInput extends Record<string, any> = Record<string, any>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunOutput extends Record<string, any> = Record<string, any>,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >\n  extends Runnable<RunInput, RunOutput>\n  implements RunnableAssignFields<RunInput>\n{\n  static lc_name() {\n    return \"RunnableAssign\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  lc_serializable = true;\n\n  mapper: RunnableMap<RunInput>;\n\n  constructor(fields: RunnableMap<RunInput> | RunnableAssignFields<RunInput>) {\n    // eslint-disable-next-line no-instanceof/no-instanceof\n    if (fields instanceof RunnableMap) {\n      // eslint-disable-next-line no-param-reassign\n      fields = { mapper: fields };\n    }\n    super(fields);\n    this.mapper = fields.mapper;\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<RunOutput> {\n    const mapperResult = await this.mapper.invoke(input, options);\n\n    return {\n      ...input,\n      ...mapperResult,\n    } as RunOutput;\n  }\n\n  async *_transform(\n    generator: AsyncGenerator<RunInput>,\n    runManager?: CallbackManagerForChainRun,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    // collect mapper keys\n    const mapperKeys = this.mapper.getStepsKeys();\n    // create two input gens, one for the mapper, one for the input\n    const [forPassthrough, forMapper] = atee(generator);\n    // create mapper output gen\n    const mapperOutput = this.mapper.transform(\n      forMapper,\n      patchConfig(options, { callbacks: runManager?.getChild() })\n    );\n    // start the mapper\n    const firstMapperChunkPromise = mapperOutput.next();\n    // yield the passthrough\n    for await (const chunk of forPassthrough) {\n      if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n        throw new Error(\n          `RunnableAssign can only be used with objects as input, got ${typeof chunk}`\n        );\n      }\n      const filtered = Object.fromEntries(\n        Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key))\n      );\n      if (Object.keys(filtered).length > 0) {\n        yield filtered as unknown as RunOutput;\n      }\n    }\n    // yield the mapper output\n    yield (await firstMapperChunkPromise).value;\n    for await (const chunk of mapperOutput) {\n      yield chunk as unknown as RunOutput;\n    }\n  }\n\n  transform(\n    generator: AsyncGenerator<RunInput>,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    return this._transformStreamWithConfig(\n      generator,\n      this._transform.bind(this),\n      options\n    );\n  }\n\n  async stream(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): Promise<IterableReadableStream<RunOutput>> {\n    async function* generator() {\n      yield input;\n    }\n    const config = ensureConfig(options);\n    const wrappedGenerator = new AsyncGeneratorWithSetup({\n      generator: this.transform(generator(), config),\n      config,\n    });\n    await wrappedGenerator.setup;\n    return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n  }\n}\n\nexport interface RunnablePickFields {\n  keys: string | string[];\n}\n\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunInput extends Record<string, any> = Record<string, any>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    RunOutput extends Record<string, any> | any = Record<string, any> | any,\n    CallOptions extends RunnableConfig = RunnableConfig\n  >\n  extends Runnable<RunInput, RunOutput>\n  implements RunnablePickFields\n{\n  static lc_name() {\n    return \"RunnablePick\";\n  }\n\n  lc_namespace = [\"langchain_core\", \"runnables\"];\n\n  lc_serializable = true;\n\n  keys: string | string[];\n\n  constructor(fields: string | string[] | RunnablePickFields) {\n    if (typeof fields === \"string\" || Array.isArray(fields)) {\n      // eslint-disable-next-line no-param-reassign\n      fields = { keys: fields };\n    }\n    super(fields);\n    this.keys = fields.keys;\n  }\n\n  async _pick(input: RunInput): Promise<RunOutput> {\n    if (typeof this.keys === \"string\") {\n      return input[this.keys];\n    } else {\n      const picked = this.keys\n        .map((key) => [key, input[key]])\n        .filter((v) => v[1] !== undefined);\n      return picked.length === 0\n        ? (undefined as RunOutput)\n        : Object.fromEntries(picked);\n    }\n  }\n\n  async invoke(\n    input: RunInput,\n    options?: Partial<CallOptions>\n  ): Promise<RunOutput> {\n    return this._callWithConfig(this._pick.bind(this), input, options);\n  }\n\n  async *_transform(\n    generator: AsyncGenerator<RunInput>\n  ): AsyncGenerator<RunOutput> {\n    for await (const chunk of generator) {\n      const picked = await this._pick(chunk);\n      if (picked !== undefined) {\n        yield picked;\n      }\n    }\n  }\n\n  transform(\n    generator: AsyncGenerator<RunInput>,\n    options?: Partial<RunnableConfig>\n  ): AsyncGenerator<RunOutput> {\n    return this._transformStreamWithConfig(\n      generator,\n      this._transform.bind(this),\n      options\n    );\n  }\n\n  async stream(\n    input: RunInput,\n    options?: Partial<RunnableConfig>\n  ): Promise<IterableReadableStream<RunOutput>> {\n    async function* generator() {\n      yield input;\n    }\n    const config = ensureConfig(options);\n    const wrappedGenerator = new AsyncGeneratorWithSetup({\n      generator: this.transform(generator(), config),\n      config,\n    });\n    await wrappedGenerator.setup;\n    return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n  }\n}\n\nexport interface RunnableToolLikeArgs<\n  RunInput extends InteropZodType = InteropZodType,\n  RunOutput = unknown\n> extends Omit<\n    RunnableBindingArgs<InferInteropZodOutput<RunInput>, RunOutput>,\n    \"config\"\n  > {\n  name: string;\n\n  description?: string;\n\n  schema: RunInput;\n\n  config?: RunnableConfig;\n}\n\nexport class RunnableToolLike<\n  RunInput extends InteropZodType = InteropZodType,\n  RunOutput = unknown\n> extends RunnableBinding<InferInteropZodOutput<RunInput>, RunOutput> {\n  name: string;\n\n  description?: string;\n\n  schema: RunInput;\n\n  constructor(fields: RunnableToolLikeArgs<RunInput, RunOutput>) {\n    const sequence = RunnableSequence.from([\n      RunnableLambda.from<\n        InferInteropZodOutput<RunInput> | ToolCall,\n        InferInteropZodOutput<RunInput>\n      >(async (input) => {\n        let toolInput: InferInteropZodOutput<RunInput>;\n\n        if (_isToolCall(input)) {\n          try {\n            toolInput = await interopParseAsync(this.schema, input.args);\n          } catch {\n            throw new ToolInputParsingException(\n              `Received tool input did not match expected schema`,\n              JSON.stringify(input.args)\n            );\n          }\n        } else {\n          toolInput = input;\n        }\n        return toolInput;\n      }).withConfig({ runName: `${fields.name}:parse_input` }),\n      fields.bound,\n    ]).withConfig({ runName: fields.name });\n\n    super({\n      bound: sequence,\n      config: fields.config ?? {},\n    });\n\n    this.name = fields.name;\n    this.description = fields.description;\n    this.schema = fields.schema;\n  }\n\n  static lc_name() {\n    return \"RunnableToolLike\";\n  }\n}\n\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {InteropZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<InteropZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool<RunInput, RunOutput>(\n  runnable: Runnable<RunInput, RunOutput>,\n  fields: {\n    name?: string;\n    description?: string;\n    schema: InteropZodType<RunInput>;\n  }\n): RunnableToolLike<InteropZodType<RunInput | ToolCall>, RunOutput> {\n  const name = fields.name ?? runnable.getName();\n  const description = fields.description ?? getSchemaDescription(fields.schema);\n\n  if (isSimpleStringZodSchema(fields.schema)) {\n    return new RunnableToolLike<InteropZodType<RunInput | ToolCall>, RunOutput>(\n      {\n        name,\n        description,\n        schema: z\n          .object({ input: z.string() })\n          .transform((input) => input.input) as InteropZodType,\n        bound: runnable,\n      }\n    );\n  }\n\n  return new RunnableToolLike<InteropZodType<RunInput | ToolCall>, RunOutput>({\n    name,\n    description,\n    schema: fields.schema,\n    bound: runnable,\n  });\n}\n"],"names":["value: any","defaultKey: string","suffix?: string","fields?: {\n    stopAfterAttempt?: number;\n    onFailedAttempt?: RunnableRetryFailedAttemptHandler;\n  }","config: Partial<CallOptions>","fields:\n      | {\n          fallbacks: Runnable<RunInput, RunOutput>[];\n        }\n      | Runnable<RunInput, RunOutput>[]","options: Partial<O> | Partial<O>[]","inputs: RunInput[]","options?: Partial<CallOptions> | Partial<CallOptions>[]","batchOptions?: RunnableBatchOptions","input: RunInput","options?: Partial<CallOptions>","func:\n      | ((input: T) => Promise<RunOutput>)\n      | ((\n          input: T,\n          config?: Partial<CallOptions>,\n          runManager?: CallbackManagerForChainRun\n        ) => Promise<RunOutput>)","input: T","options?: Partial<CallOptions> & { runType?: string }","func: (\n      inputs: T[],\n      options?: Partial<CallOptions>[],\n      runManagers?: (CallbackManagerForChainRun | undefined)[],\n      batchOptions?: RunnableBatchOptions\n    ) => Promise<(RunOutput | Error)[]>","inputs: T[]","options?:\n      | Partial<CallOptions & { runType?: string }>\n      | Partial<CallOptions & { runType?: string }>[]","outputs: (RunOutput | Error)[]","first: O","second: O","inputGenerator: AsyncGenerator<I>","transformer: (\n      generator: AsyncGenerator<I>,\n      runManager?: CallbackManagerForChainRun,\n      options?: Partial<CallOptions>\n    ) => AsyncGenerator<O>","finalInput: I | undefined","finalOutput: O | undefined","runManager: CallbackManagerForChainRun | undefined","_?: RunnableConfig","coerceable: RunnableLike<RunOutput, NewRunOutput>","keys: string | string[]","mapping: RunnableMapLike<Record<string, unknown>, Record<string, unknown>>","generator: AsyncGenerator<RunInput>","options: Partial<CallOptions>","streamOptions?: Omit<LogStreamCallbackHandlerInput, \"autoClose\">","logStreamCallbackHandler: LogStreamCallbackHandler","options: Partial<CallOptions> & {\n      version: \"v1\" | \"v2\";\n      encoding?: \"text/event-stream\" | undefined;\n    }","streamOptions?: Omit<EventStreamCallbackHandlerInput, \"autoClose\">","options: Partial<CallOptions> & { version: \"v1\" | \"v2\" }","uuidv4","listener: (() => void) | null","state","event: StreamEvent","data: StreamEventData","thing: any","fields: {\n    name?: string;\n    description?: string;\n    schema: InteropZodType<T>;\n  }","fields: RunnableBindingArgs<RunInput, RunOutput, CallOptions>","suffix?: string | undefined","options?: Partial<CallOptions> | undefined","fields: {\n    bound: Runnable<RunInputItem, RunOutputItem, CallOptions>;\n  }","inputs: RunInputItem[]","config?: Partial<CallOptions>","runManager?: CallbackManagerForChainRun","fields: RunnableBindingArgs<RunInput, RunOutput, CallOptions> & {\n      maxAttemptNumber?: number;\n      onFailedAttempt?: RunnableRetryFailedAttemptHandler;\n    }","attempt: number","config?: CallOptions","attemptNumber: number","error: any","configs?: RunnableConfig[]","runManagers?: (CallbackManagerForChainRun | undefined)[]","resultsMap: Record<string, RunOutput | Error>","fields: RunnableSequenceFields<RunInput, RunOutput>","options?: RunnableConfig","finalOutput: RunOutput","options?: Partial<RunnableConfig> | Partial<RunnableConfig>[]","nextStepInputs: any","config?: RunnableConfig","currentLastNode: any","nameOrFields?:\n      | string\n      | Omit<\n          RunnableSequenceFields<RunInput, RunOutput>,\n          \"first\" | \"middle\" | \"last\"\n        >","extra: Record<string, unknown>","fields: { steps: RunnableMapLike<RunInput, RunOutput> }","steps: RunnableMapLike<RunInput, RunOutput>","options?: Partial<RunnableConfig>","output: Record<string, any>","result","fields: { func: AnyTraceableFunction }","state: IteratorResult<unknown>","func: AnyTraceableFunction","func:\n    | RunnableFunc<\n        RunInput,\n        RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n        CallOptions\n      >\n    | TraceableFunction<\n        RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      >","fields: {\n    func:\n      | RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      | TraceableFunction<\n          RunnableFunc<\n            RunInput,\n            RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n            CallOptions\n          >\n        >;\n  }","func:\n      | RunnableFunc<\n          RunInput,\n          RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n          CallOptions\n        >\n      | TraceableFunction<\n          RunnableFunc<\n            RunInput,\n            RunOutput | Runnable<RunInput, RunOutput, CallOptions>,\n            CallOptions\n          >\n        >","finalOutput: RunOutput | undefined","finalChunk: RunInput | undefined","fields: {\n    runnable: Runnable<RunInput, RunOutput>;\n    fallbacks: Runnable<RunInput, RunOutput>[];\n  }","options?: Partial<RunnableConfig> | undefined","firstError: any","coerceable: RunnableLike<RunInput, RunOutput, CallOptions>","runnables: Record<string, Runnable<RunInput>>","fields: RunnableMap<RunInput> | RunnableAssignFields<RunInput>","fields: string | string[] | RunnablePickFields","fields: RunnableToolLikeArgs<RunInput, RunOutput>","toolInput: InferInteropZodOutput<RunInput>","runnable: Runnable<RunInput, RunOutput>","fields: {\n    name?: string;\n    description?: string;\n    schema: InteropZodType<RunInput>;\n  }"],"mappings":"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","debugId":null}},
    {"offset": {"line": 12089, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/documents/transformers.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/documents/transformers.ts"],"sourcesContent":["import { Runnable } from \"../runnables/base.js\";\nimport type { BaseCallbackConfig } from \"../callbacks/manager.js\";\nimport type { DocumentInterface } from \"./document.js\";\n\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport abstract class BaseDocumentTransformer<\n  RunInput extends DocumentInterface[] = DocumentInterface[],\n  RunOutput extends DocumentInterface[] = DocumentInterface[]\n> extends Runnable<RunInput, RunOutput> {\n  lc_namespace = [\"langchain_core\", \"documents\", \"transformers\"];\n\n  /**\n   * Transform a list of documents.\n   * @param documents A sequence of documents to be transformed.\n   * @returns A list of transformed documents.\n   */\n  abstract transformDocuments(documents: RunInput): Promise<RunOutput>;\n\n  /**\n   * Method to invoke the document transformation. This method calls the\n   * transformDocuments method with the provided input.\n   * @param input The input documents to be transformed.\n   * @param _options Optional configuration object to customize the behavior of callbacks.\n   * @returns A Promise that resolves to the transformed documents.\n   */\n  invoke(input: RunInput, _options?: BaseCallbackConfig): Promise<RunOutput> {\n    return this.transformDocuments(input);\n  }\n}\n\n/**\n * Class for document transformers that return exactly one transformed document\n * for each input document.\n */\nexport abstract class MappingDocumentTransformer extends BaseDocumentTransformer {\n  async transformDocuments(\n    documents: DocumentInterface[]\n  ): Promise<DocumentInterface[]> {\n    const newDocuments = [];\n    for (const document of documents) {\n      const transformedDocument = await this._transformDocument(document);\n      newDocuments.push(transformedDocument);\n    }\n    return newDocuments;\n  }\n\n  abstract _transformDocument(\n    document: DocumentInterface\n  ): Promise<DocumentInterface>;\n}\n"],"names":["input: RunInput","_options?: BaseCallbackConfig","documents: DocumentInterface[]"],"mappings":";;;;;;;;;;;;;;;;;;GAcA,IAAsB,0BAAtB,cAGU,wRAAA,CAA8B;IACtC,eAAe;QAAC;QAAkB;QAAa;KAAe,CAAA;;;;;;;IAgB9D,OAAOA,KAAAA,EAAiBC,QAAAA,EAAmD;QACzE,OAAO,IAAA,CAAK,kBAAA,CAAmB,MAAM;IACtC;AACF;;;;GAMD,IAAsB,6BAAtB,cAAyD,wBAAwB;IAC/E,MAAM,mBACJC,SAAAA,EAC8B;QAC9B,MAAM,eAAe,CAAE,CAAA;QACvB,KAAK,MAAM,YAAY,UAAW;YAChC,MAAM,sBAAsB,MAAM,IAAA,CAAK,kBAAA,CAAmB,SAAS;YACnE,aAAa,IAAA,CAAK,oBAAoB;QACvC;QACD,OAAO;IACR;AAKF","debugId":null}},
    {"offset": {"line": 12142, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/documents/index.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/documents/index.ts"],"sourcesContent":["export * from \"./document.js\";\nexport * from \"./transformers.js\";\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 12165, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@langchain+core@1.0.1_@open_92766fcc5442500a83119052dfcaf384/node_modules/@langchain/core/dist/document_loaders/base.js","sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/node_modules/.pnpm/%40langchain%2Bcore%401.0.1_%40open_92766fcc5442500a83119052dfcaf384/node_modules/%40langchain/core/src/document_loaders/base.ts"],"sourcesContent":["import { Document } from \"../documents/document.js\";\n\n/**\n * Interface that defines the methods for loading and splitting documents.\n */\nexport interface DocumentLoader {\n  load(): Promise<Document[]>;\n}\n\n/**\n * Abstract class that provides a default implementation for the\n * loadAndSplit() method from the DocumentLoader interface. The load()\n * method is left abstract and needs to be implemented by subclasses.\n */\nexport abstract class BaseDocumentLoader implements DocumentLoader {\n  /**\n   * Loads the documents.\n   * @returns A Promise that resolves with an array of Document instances.\n   */\n  abstract load(): Promise<Document[]>;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;GAcA,IAAsB,qBAAtB,MAAmE;AAMlE","debugId":null}}]
}