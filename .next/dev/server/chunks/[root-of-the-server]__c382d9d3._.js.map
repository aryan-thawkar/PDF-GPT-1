{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/db/index.ts"],"sourcesContent":["import { neon } from '@neondatabase/serverless'\r\nimport { drizzle } from 'drizzle-orm/neon-http'\r\n\r\nconst sql = neon(process.env.DATABASE_URL!)\r\nexport const db = drizzle(sql)"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,MAAM,IAAA,yOAAI,EAAC,QAAQ,GAAG,CAAC,YAAY;AAClC,MAAM,KAAK,IAAA,8QAAO,EAAC","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/db/schema.ts"],"sourcesContent":["import {\r\n  integer,\r\n  pgEnum,\r\n  pgTable,\r\n  serial,\r\n  text,\r\n  timestamp,\r\n  varchar,\r\n  vector,\r\n} from 'drizzle-orm/pg-core'\r\n\r\nexport const userSystemEnum = pgEnum('user_system_enum', ['system', 'user'])\r\n\r\nexport const chats = pgTable('chats', {\r\n  id: serial('id').primaryKey(),\r\n  pdfName: text('pdf_name').notNull(),\r\n  pdfUrl: text('pdf_url').notNull(),\r\n  createdAt: timestamp('created_at').notNull().defaultNow(),\r\n  userId: varchar('user_id', { length: 256 }).notNull(),\r\n  fileKey: text('file_key').notNull(),\r\n})\r\n\r\nexport type DrizzleChat = typeof chats.$inferSelect\r\n\r\nexport const messages = pgTable('messages', {\r\n  id: serial('id').primaryKey(),\r\n  chatId: integer('chat_id')\r\n    .references(() => chats.id)\r\n    .notNull(),\r\n  content: text('content').notNull(),\r\n  createdAt: timestamp('created_at').notNull().defaultNow(),\r\n  role: userSystemEnum('role').notNull(),\r\n})\r\n\r\nexport const documents = pgTable('documents', {\r\n  id: serial('id').primaryKey(),\r\n  chatId: integer('chat_id').notNull()\r\n    .references(() => chats.id),\r\n  content: text('content').notNull(),\r\n  embedding: vector('embedding', { dimensions: 3072 }).notNull(),\r\n})"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWO,MAAM,iBAAiB,IAAA,oRAAM,EAAC,oBAAoB;IAAC;IAAU;CAAO;AAEpE,MAAM,QAAQ,IAAA,2QAAO,EAAC,SAAS;IACpC,IAAI,IAAA,sRAAM,EAAC,MAAM,UAAU;IAC3B,SAAS,IAAA,kRAAI,EAAC,YAAY,OAAO;IACjC,QAAQ,IAAA,kRAAI,EAAC,WAAW,OAAO;IAC/B,WAAW,IAAA,4RAAS,EAAC,cAAc,OAAO,GAAG,UAAU;IACvD,QAAQ,IAAA,wRAAO,EAAC,WAAW;QAAE,QAAQ;IAAI,GAAG,OAAO;IACnD,SAAS,IAAA,kRAAI,EAAC,YAAY,OAAO;AACnC;AAIO,MAAM,WAAW,IAAA,2QAAO,EAAC,YAAY;IAC1C,IAAI,IAAA,sRAAM,EAAC,MAAM,UAAU;IAC3B,QAAQ,IAAA,wRAAO,EAAC,WACb,UAAU,CAAC,IAAM,MAAM,EAAE,EACzB,OAAO;IACV,SAAS,IAAA,kRAAI,EAAC,WAAW,OAAO;IAChC,WAAW,IAAA,4RAAS,EAAC,cAAc,OAAO,GAAG,UAAU;IACvD,MAAM,eAAe,QAAQ,OAAO;AACtC;AAEO,MAAM,YAAY,IAAA,2QAAO,EAAC,aAAa;IAC5C,IAAI,IAAA,sRAAM,EAAC,MAAM,UAAU;IAC3B,QAAQ,IAAA,wRAAO,EAAC,WAAW,OAAO,GAC/B,UAAU,CAAC,IAAM,MAAM,EAAE;IAC5B,SAAS,IAAA,kRAAI,EAAC,WAAW,OAAO;IAChC,WAAW,IAAA,0SAAM,EAAC,aAAa;QAAE,YAAY;IAAK,GAAG,OAAO;AAC9D","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aryan/Desktop/New%20folder%20%283%29/PDF-GPT-1/app/api/get-messages/route.ts"],"sourcesContent":["import { db } from '@/db'\r\nimport { messages } from '@/db/schema'\r\nimport { eq } from 'drizzle-orm'\r\nimport { NextRequest, NextResponse } from 'next/server'\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const { chatId }: { chatId: number } = await request.json()\r\n  const _messages = await db\r\n    .select()\r\n    .from(messages)\r\n    .where(eq(messages.chatId, chatId))\r\n\r\n  // Format messages to match AI SDK Message interface\r\n  const formattedMessages = _messages.map((msg) => ({\r\n    id: msg.id.toString(),\r\n    role: msg.role === 'user' ? 'user' : 'assistant',\r\n    content: msg.content,\r\n  }))\r\n\r\n  return NextResponse.json(formattedMessages)\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,MAAM,EAAE,MAAM,EAAE,GAAuB,MAAM,QAAQ,IAAI;IACzD,MAAM,YAAY,MAAM,mHAAE,CACvB,MAAM,GACN,IAAI,CAAC,0HAAQ,EACb,KAAK,CAAC,IAAA,mRAAE,EAAC,0HAAQ,CAAC,MAAM,EAAE;IAE7B,oDAAoD;IACpD,MAAM,oBAAoB,UAAU,GAAG,CAAC,CAAC,MAAQ,CAAC;YAChD,IAAI,IAAI,EAAE,CAAC,QAAQ;YACnB,MAAM,IAAI,IAAI,KAAK,SAAS,SAAS;YACrC,SAAS,IAAI,OAAO;QACtB,CAAC;IAED,OAAO,+PAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}